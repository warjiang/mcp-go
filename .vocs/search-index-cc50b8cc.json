{"documentCount":369,"nextId":369,"documentIds":{"0":"docs/pages/core-concepts.mdx#core-concepts","1":"docs/pages/core-concepts.mdx#mcp-protocol-fundamentals","2":"docs/pages/core-concepts.mdx#resources","3":"docs/pages/core-concepts.mdx#tools","4":"docs/pages/core-concepts.mdx#prompts","5":"docs/pages/core-concepts.mdx#transports","6":"docs/pages/core-concepts.mdx#sdk-architecture","7":"docs/pages/core-concepts.mdx#server-vs-client","8":"docs/pages/core-concepts.mdx#transport-layer","9":"docs/pages/core-concepts.mdx#session-management","10":"docs/pages/getting-started.mdx#getting-started","11":"docs/pages/getting-started.mdx#introduction","12":"docs/pages/getting-started.mdx#what-is-mcp","13":"docs/pages/getting-started.mdx#why-mcp-go","14":"docs/pages/getting-started.mdx#key-features","15":"docs/pages/getting-started.mdx#installation","16":"docs/pages/getting-started.mdx#your-first-mcp-server","17":"docs/pages/getting-started.mdx#running-your-server","18":"docs/pages/getting-started.mdx#whats-next","19":"docs/pages/getting-started.mdx#key-concepts","20":"docs/pages/getting-started.mdx#tools","21":"docs/pages/getting-started.mdx#resources","22":"docs/pages/getting-started.mdx#server-options","23":"docs/pages/getting-started.mdx#transport-options","24":"docs/pages/getting-started.mdx#need-help","25":"docs/pages/quick-start.mdx#quick-start","26":"docs/pages/quick-start.mdx#hello-world-server","27":"docs/pages/quick-start.mdx#running-your-first-server","28":"docs/pages/quick-start.mdx#testing-with-claude-desktop","29":"docs/pages/quick-start.mdx#testing-with-mcp-inspector","30":"docs/pages/quick-start.mdx#basic-client-example","31":"docs/pages/quick-start.mdx#streamablehttp-client-example","32":"docs/pages/quick-start.mdx#whats-next","33":"docs/pages/quick-start.mdx#common-issues","34":"docs/pages/quick-start.mdx#server-wont-start","35":"docs/pages/quick-start.mdx#client-connection-failed","36":"docs/pages/quick-start.mdx#tool-calls-failing","37":"docs/pages/clients/advanced-sampling.mdx#sampling","38":"docs/pages/clients/advanced-sampling.mdx#overview","39":"docs/pages/clients/advanced-sampling.mdx#implementing-a-sampling-handler","40":"docs/pages/clients/advanced-sampling.mdx#configuring-the-client","41":"docs/pages/clients/advanced-sampling.mdx#mock-implementation-example","42":"docs/pages/clients/advanced-sampling.mdx#real-llm-integration","43":"docs/pages/clients/advanced-sampling.mdx#openai-integration","44":"docs/pages/clients/advanced-sampling.mdx#anthropic-integration","45":"docs/pages/clients/advanced-sampling.mdx#automatic-capability-declaration","46":"docs/pages/clients/advanced-sampling.mdx#error-handling","47":"docs/pages/clients/advanced-sampling.mdx#best-practices","48":"docs/pages/clients/advanced-sampling.mdx#testing-your-implementation","49":"docs/pages/clients/advanced-sampling.mdx#transport-support","50":"docs/pages/clients/advanced-sampling.mdx#stdio-transport","51":"docs/pages/clients/advanced-sampling.mdx#in-process-transport","52":"docs/pages/clients/advanced-sampling.mdx#unsupported-transports","53":"docs/pages/clients/advanced-sampling.mdx#next-steps","54":"docs/pages/clients/basics.mdx#client-basics","55":"docs/pages/clients/basics.mdx#creating-clients","56":"docs/pages/clients/basics.mdx#client-constructor-patterns","57":"docs/pages/clients/basics.mdx#stdio-client-creation","58":"docs/pages/clients/basics.mdx#streamablehttp-client-creation","59":"docs/pages/clients/basics.mdx#sse-client-creation","60":"docs/pages/clients/basics.mdx#client-lifecycle","61":"docs/pages/clients/basics.mdx#lifecycle-stages","62":"docs/pages/clients/basics.mdx#complete-lifecycle-example","63":"docs/pages/clients/basics.mdx#initialization-process","64":"docs/pages/clients/basics.mdx#graceful-shutdown","65":"docs/pages/clients/basics.mdx#error-handling","66":"docs/pages/clients/basics.mdx#error-types","67":"docs/pages/clients/basics.mdx#comprehensive-error-handling","68":"docs/pages/clients/basics.mdx#retry-logic-with-exponential-backoff","69":"docs/pages/clients/basics.mdx#context-and-timeout-management","70":"docs/pages/clients/basics.mdx#connection-monitoring","71":"docs/pages/clients/basics.mdx#health-checks","72":"docs/pages/clients/basics.mdx#connection-recovery","73":"docs/pages/clients/basics.mdx#next-steps","74":"docs/pages/clients/#building-mcp-clients","75":"docs/pages/clients/#overview","76":"docs/pages/clients/#what-youll-learn","77":"docs/pages/clients/#quick-example","78":"docs/pages/clients/#client-types-by-transport","79":"docs/pages/clients/#stdio-client","80":"docs/pages/clients/#streamablehttp-client","81":"docs/pages/clients/#sse-client","82":"docs/pages/clients/#in-process-client","83":"docs/pages/clients/#common-client-patterns","84":"docs/pages/clients/#connection-management","85":"docs/pages/clients/#error-handling","86":"docs/pages/clients/#retry-logic","87":"docs/pages/clients/#integration-patterns","88":"docs/pages/clients/#llm-application-integration","89":"docs/pages/clients/#multi-server-client","90":"docs/pages/clients/#next-steps","91":"docs/pages/clients/operations.mdx#client-operations","92":"docs/pages/clients/operations.mdx#listing-resources","93":"docs/pages/clients/operations.mdx#basic-resource-listing","94":"docs/pages/clients/operations.mdx#filtered-resource-listing","95":"docs/pages/clients/operations.mdx#reading-resources","96":"docs/pages/clients/operations.mdx#basic-resource-reading","97":"docs/pages/clients/operations.mdx#typed-resource-reading","98":"docs/pages/clients/operations.mdx#resource-caching","99":"docs/pages/clients/operations.mdx#calling-tools","100":"docs/pages/clients/operations.mdx#basic-tool-calling","101":"docs/pages/clients/operations.mdx#tool-schema-validation","102":"docs/pages/clients/operations.mdx#batch-tool-operations","103":"docs/pages/clients/operations.mdx#using-prompts","104":"docs/pages/clients/operations.mdx#basic-prompt-usage","105":"docs/pages/clients/operations.mdx#prompt-template-processing","106":"docs/pages/clients/operations.mdx#dynamic-prompt-generation","107":"docs/pages/clients/operations.mdx#subscriptions","108":"docs/pages/clients/operations.mdx#basic-subscription-handling","109":"docs/pages/clients/operations.mdx#advanced-subscription-management","110":"docs/pages/clients/operations.mdx#advanced-sampling-support","111":"docs/pages/clients/operations.mdx#when-to-implement-sampling","112":"docs/pages/clients/operations.mdx#basic-implementation","113":"docs/pages/clients/operations.mdx#next-steps","114":"docs/pages/clients/transports.mdx#client-transports","115":"docs/pages/clients/transports.mdx#transport-overview","116":"docs/pages/clients/transports.mdx#stdio-client","117":"docs/pages/clients/transports.mdx#basic-stdio-client","118":"docs/pages/clients/transports.mdx#stdio-client-with-custom-configuration","119":"docs/pages/clients/transports.mdx#stdio-error-handling","120":"docs/pages/clients/transports.mdx#stdio-process-management","121":"docs/pages/clients/transports.mdx#streamablehttp-client","122":"docs/pages/clients/transports.mdx#basic-streamablehttp-client","123":"docs/pages/clients/transports.mdx#streamablehttp-client-with-custom-configuration","124":"docs/pages/clients/transports.mdx#streamablehttp-authentication","125":"docs/pages/clients/transports.mdx#streamablehttp-connection-pooling","126":"docs/pages/clients/transports.mdx#streamablehttp-with-preconfigured-session","127":"docs/pages/clients/transports.mdx#sse-client","128":"docs/pages/clients/transports.mdx#basic-sse-client","129":"docs/pages/clients/transports.mdx#sse-client-with-custom-configuration","130":"docs/pages/clients/transports.mdx#sse-client-with-reconnection","131":"docs/pages/clients/transports.mdx#sse-event-handling","132":"docs/pages/clients/transports.mdx#in-process-client","133":"docs/pages/clients/transports.mdx#basic-in-process-client","134":"docs/pages/clients/transports.mdx#in-process-client-for-testing","135":"docs/pages/clients/transports.mdx#transport-selection","136":"docs/pages/clients/transports.mdx#decision-matrix","137":"docs/pages/clients/transports.mdx#multi-transport-client-factory","138":"docs/pages/clients/transports.mdx#logging-configuration","139":"docs/pages/transports/http.mdx#streamablehttp-transport","140":"docs/pages/transports/http.mdx#use-cases","141":"docs/pages/transports/http.mdx#implementation","142":"docs/pages/transports/http.mdx#basic-streamablehttp-server","143":"docs/pages/transports/http.mdx#advanced-streamablehttp-configuration","144":"docs/pages/transports/http.mdx#endpoints","145":"docs/pages/transports/http.mdx#standard-mcp-endpoints","146":"docs/pages/transports/http.mdx#custom-endpoints","147":"docs/pages/transports/http.mdx#requestresponse-patterns","148":"docs/pages/transports/http.mdx#standard-mcp-request","149":"docs/pages/transports/http.mdx#standard-mcp-response","150":"docs/pages/transports/http.mdx#error-response","151":"docs/pages/transports/http.mdx#session-management","152":"docs/pages/transports/http.mdx#stateful-vs-stateless","153":"docs/pages/transports/http.mdx#stateless-design-recommended","154":"docs/pages/transports/http.mdx#stateful-design-when-needed","155":"docs/pages/transports/http.mdx#authentication-and-authorization","156":"docs/pages/transports/http.mdx#request-headers","157":"docs/pages/transports/http.mdx#accessing-headers-in-handlers","158":"docs/pages/transports/http.mdx#next-steps","159":"docs/pages/transports/#transport-options","160":"docs/pages/transports/#overview","161":"docs/pages/transports/#transport-comparison","162":"docs/pages/transports/#quick-example","163":"docs/pages/transports/#choosing-the-right-transport","164":"docs/pages/transports/#stdio-transport","165":"docs/pages/transports/#sse-transport","166":"docs/pages/transports/#streamablehttp-transport","167":"docs/pages/transports/#in-process-transport","168":"docs/pages/transports/#transport-configuration","169":"docs/pages/transports/#environment-based-selection","170":"docs/pages/transports/#multi-transport-server","171":"docs/pages/transports/#performance-considerations","172":"docs/pages/transports/#latency-comparison","173":"docs/pages/transports/#throughput-comparison","174":"docs/pages/transports/#memory-usage","175":"docs/pages/transports/#security-considerations","176":"docs/pages/transports/#stdio-transport-1","177":"docs/pages/transports/#network-transports-ssehttp","178":"docs/pages/transports/#next-steps","179":"docs/pages/transports/inprocess.mdx#in-process-transport","180":"docs/pages/transports/inprocess.mdx#use-cases","181":"docs/pages/transports/inprocess.mdx#implementation","182":"docs/pages/transports/inprocess.mdx#basic-in-process-server","183":"docs/pages/transports/inprocess.mdx#embedded-application-integration","184":"docs/pages/transports/inprocess.mdx#sampling-support","185":"docs/pages/transports/inprocess.mdx#enabling-sampling","186":"docs/pages/transports/inprocess.mdx#real-llm-integration","187":"docs/pages/transports/inprocess.mdx#openai-integration","188":"docs/pages/transports/inprocess.mdx#sampling-request-parameters","189":"docs/pages/transports/inprocess.mdx#error-handling","190":"docs/pages/transports/inprocess.mdx#next-steps","191":"docs/pages/transports/sse.mdx#sse-transport","192":"docs/pages/transports/sse.mdx#use-cases","193":"docs/pages/transports/sse.mdx#implementation","194":"docs/pages/transports/sse.mdx#basic-sse-server","195":"docs/pages/transports/sse.mdx#advanced-sse-configuration","196":"docs/pages/transports/sse.mdx#configuration","197":"docs/pages/transports/sse.mdx#sse-server-options","198":"docs/pages/transports/sse.mdx#real-time-notifications","199":"docs/pages/transports/sse.mdx#session-management","200":"docs/pages/transports/sse.mdx#request-headers","201":"docs/pages/transports/sse.mdx#accessing-headers-in-handlers","202":"docs/pages/transports/sse.mdx#next-steps","203":"docs/pages/transports/stdio.mdx#stdio-transport","204":"docs/pages/transports/stdio.mdx#use-cases","205":"docs/pages/transports/stdio.mdx#implementation","206":"docs/pages/transports/stdio.mdx#basic-stdio-server","207":"docs/pages/transports/stdio.mdx#advanced-stdio-server","208":"docs/pages/transports/stdio.mdx#client-integration","209":"docs/pages/transports/stdio.mdx#how-llm-applications-connect","210":"docs/pages/transports/stdio.mdx#claude-desktop-integration","211":"docs/pages/transports/stdio.mdx#custom-client-integration","212":"docs/pages/transports/stdio.mdx#customizing-subprocess-execution","213":"docs/pages/transports/stdio.mdx#debugging","214":"docs/pages/transports/stdio.mdx#command-line-testing","215":"docs/pages/transports/stdio.mdx#interactive-testing-script","216":"docs/pages/transports/stdio.mdx#debug-logging","217":"docs/pages/transports/stdio.mdx#mcp-inspector-integration","218":"docs/pages/transports/stdio.mdx#error-handling","219":"docs/pages/transports/stdio.mdx#robust-error-handling","220":"docs/pages/transports/stdio.mdx#process-management","221":"docs/pages/transports/stdio.mdx#performance-optimization","222":"docs/pages/transports/stdio.mdx#efficient-resource-usage","223":"docs/pages/transports/stdio.mdx#memory-management","224":"docs/pages/transports/stdio.mdx#next-steps","225":"docs/pages/servers/advanced-sampling.mdx#sampling","226":"docs/pages/servers/advanced-sampling.mdx#overview","227":"docs/pages/servers/advanced-sampling.mdx#enabling-sampling","228":"docs/pages/servers/advanced-sampling.mdx#requesting-sampling","229":"docs/pages/servers/advanced-sampling.mdx#sampling-request-parameters","230":"docs/pages/servers/advanced-sampling.mdx#message-types","231":"docs/pages/servers/advanced-sampling.mdx#message-roles","232":"docs/pages/servers/advanced-sampling.mdx#content-types","233":"docs/pages/servers/advanced-sampling.mdx#text-content","234":"docs/pages/servers/advanced-sampling.mdx#image-content","235":"docs/pages/servers/advanced-sampling.mdx#error-handling","236":"docs/pages/servers/advanced-sampling.mdx#context-and-timeouts","237":"docs/pages/servers/advanced-sampling.mdx#best-practices","238":"docs/pages/servers/advanced-sampling.mdx#complete-example","239":"docs/pages/servers/advanced-sampling.mdx#transport-support","240":"docs/pages/servers/advanced-sampling.mdx#stdio-transport","241":"docs/pages/servers/advanced-sampling.mdx#in-process-transport","242":"docs/pages/servers/advanced-sampling.mdx#unsupported-transports","243":"docs/pages/servers/advanced-sampling.mdx#next-steps","244":"docs/pages/servers/advanced.mdx#advanced-server-features","245":"docs/pages/servers/advanced.mdx#typed-tools","246":"docs/pages/servers/advanced.mdx#basic-typed-tool","247":"docs/pages/servers/advanced.mdx#complex-typed-tool","248":"docs/pages/servers/advanced.mdx#custom-validation","249":"docs/pages/servers/advanced.mdx#session-management","250":"docs/pages/servers/advanced.mdx#per-session-state","251":"docs/pages/servers/advanced.mdx#session-aware-tools","252":"docs/pages/servers/advanced.mdx#middleware","253":"docs/pages/servers/advanced.mdx#logging-middleware","254":"docs/pages/servers/advanced.mdx#rate-limiting-middleware","255":"docs/pages/servers/advanced.mdx#authentication-middleware","256":"docs/pages/servers/advanced.mdx#hooks","257":"docs/pages/servers/advanced.mdx#comprehensive-hooks","258":"docs/pages/servers/advanced.mdx#custom-business-logic-hooks","259":"docs/pages/servers/advanced.mdx#tool-filtering","260":"docs/pages/servers/advanced.mdx#permission-based-filtering","261":"docs/pages/servers/advanced.mdx#context-based-filtering","262":"docs/pages/servers/advanced.mdx#notifications","263":"docs/pages/servers/advanced.mdx#custom-notifications","264":"docs/pages/servers/advanced.mdx#custom-notifications-1","265":"docs/pages/servers/advanced.mdx#production-configuration","266":"docs/pages/servers/advanced.mdx#complete-production-server","267":"docs/pages/servers/advanced.mdx#client-capability-based-filtering","268":"docs/pages/servers/advanced.mdx#sampling-advanced","269":"docs/pages/servers/advanced.mdx#when-to-use-sampling","270":"docs/pages/servers/advanced.mdx#basic-implementation","271":"docs/pages/servers/advanced.mdx#next-steps","272":"docs/pages/servers/basics.mdx#server-basics","273":"docs/pages/servers/basics.mdx#creating-a-server","274":"docs/pages/servers/basics.mdx#basic-server-creation","275":"docs/pages/servers/basics.mdx#server-with-options","276":"docs/pages/servers/basics.mdx#server-configuration","277":"docs/pages/servers/basics.mdx#capabilities","278":"docs/pages/servers/basics.mdx#recovery-middleware","279":"docs/pages/servers/basics.mdx#custom-metadata","280":"docs/pages/servers/basics.mdx#starting-servers","281":"docs/pages/servers/basics.mdx#stdio-transport","282":"docs/pages/servers/basics.mdx#http-transport","283":"docs/pages/servers/basics.mdx#server-sent-events-sse","284":"docs/pages/servers/basics.mdx#custom-transport-options","285":"docs/pages/servers/basics.mdx#environment-based-configuration","286":"docs/pages/servers/basics.mdx#server-lifecycle","287":"docs/pages/servers/basics.mdx#error-handling","288":"docs/pages/servers/basics.mdx#next-steps","289":"docs/pages/servers/#building-mcp-servers","290":"docs/pages/servers/#overview","291":"docs/pages/servers/#what-youll-learn","292":"docs/pages/servers/#quick-example","293":"docs/pages/servers/#next-steps","294":"docs/pages/servers/prompts.mdx#implementing-prompts","295":"docs/pages/servers/prompts.mdx#prompt-fundamentals","296":"docs/pages/servers/prompts.mdx#basic-prompt-structure","297":"docs/pages/servers/prompts.mdx#prompt-templates","298":"docs/pages/servers/prompts.mdx#basic-code-review-prompt","299":"docs/pages/servers/prompts.mdx#data-analysis-prompt","300":"docs/pages/servers/prompts.mdx#prompt-arguments","301":"docs/pages/servers/prompts.mdx#flexible-parameter-handling","302":"docs/pages/servers/prompts.mdx#message-types","303":"docs/pages/servers/prompts.mdx#multi-message-conversations","304":"docs/pages/servers/prompts.mdx#system-and-user-roles","305":"docs/pages/servers/prompts.mdx#embedded-resources","306":"docs/pages/servers/prompts.mdx#including-resource-data","307":"docs/pages/servers/prompts.mdx#dynamic-resource-integration","308":"docs/pages/servers/prompts.mdx#advanced-prompt-patterns","309":"docs/pages/servers/prompts.mdx#conditional-prompts","310":"docs/pages/servers/prompts.mdx#template-based-prompts","311":"docs/pages/servers/prompts.mdx#next-steps","312":"docs/pages/servers/resources.mdx#implementing-resources","313":"docs/pages/servers/resources.mdx#resource-fundamentals","314":"docs/pages/servers/resources.mdx#basic-resource-structure","315":"docs/pages/servers/resources.mdx#static-resources","316":"docs/pages/servers/resources.mdx#file-based-resources","317":"docs/pages/servers/resources.mdx#configuration-resources","318":"docs/pages/servers/resources.mdx#dynamic-resources","319":"docs/pages/servers/resources.mdx#uri-templates","320":"docs/pages/servers/resources.mdx#database-resources","321":"docs/pages/servers/resources.mdx#api-resources","322":"docs/pages/servers/resources.mdx#content-types","323":"docs/pages/servers/resources.mdx#text-content","324":"docs/pages/servers/resources.mdx#json-content","325":"docs/pages/servers/resources.mdx#binary-content","326":"docs/pages/servers/resources.mdx#multiple-content-types","327":"docs/pages/servers/resources.mdx#error-handling","328":"docs/pages/servers/resources.mdx#common-error-patterns","329":"docs/pages/servers/resources.mdx#timeout-handling","330":"docs/pages/servers/resources.mdx#resource-listing","331":"docs/pages/servers/resources.mdx#caching-resources","332":"docs/pages/servers/resources.mdx#next-steps","333":"docs/pages/servers/tools.mdx#implementing-tools","334":"docs/pages/servers/tools.mdx#tool-fundamentals","335":"docs/pages/servers/tools.mdx#basic-tool-structure","336":"docs/pages/servers/tools.mdx#tool-definition","337":"docs/pages/servers/tools.mdx#parameter-types","338":"docs/pages/servers/tools.mdx#enums-and-constraints","339":"docs/pages/servers/tools.mdx#struct-based-schema-definition","340":"docs/pages/servers/tools.mdx#input-schema-with-go-structs","341":"docs/pages/servers/tools.mdx#output-schema-with-go-structs","342":"docs/pages/servers/tools.mdx#structured-tool-handlers","343":"docs/pages/servers/tools.mdx#array-output-schema","344":"docs/pages/servers/tools.mdx#schema-tags-reference","345":"docs/pages/servers/tools.mdx#manual-structured-results","346":"docs/pages/servers/tools.mdx#complete-example-file-operations-with-structured-io","347":"docs/pages/servers/tools.mdx#tool-handlers","348":"docs/pages/servers/tools.mdx#parameter-extraction-methods","349":"docs/pages/servers/tools.mdx#basic-handler-pattern","350":"docs/pages/servers/tools.mdx#file-operations-tool","351":"docs/pages/servers/tools.mdx#database-query-tool","352":"docs/pages/servers/tools.mdx#http-request-tool","353":"docs/pages/servers/tools.mdx#argument-validation","354":"docs/pages/servers/tools.mdx#type-safe-parameter-extraction","355":"docs/pages/servers/tools.mdx#available-helper-methods","356":"docs/pages/servers/tools.mdx#result-types","357":"docs/pages/servers/tools.mdx#text-results","358":"docs/pages/servers/tools.mdx#json-results","359":"docs/pages/servers/tools.mdx#multiple-content-types","360":"docs/pages/servers/tools.mdx#resource-links","361":"docs/pages/servers/tools.mdx#mixed-content-with-resource-links","362":"docs/pages/servers/tools.mdx#resource-link-with-annotations","363":"docs/pages/servers/tools.mdx#error-results","364":"docs/pages/servers/tools.mdx#tool-annotations","365":"docs/pages/servers/tools.mdx#advanced-tool-patterns","366":"docs/pages/servers/tools.mdx#streaming-results","367":"docs/pages/servers/tools.mdx#conditional-tools","368":"docs/pages/servers/tools.mdx#next-steps"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,19],"1":[3,2,20],"2":[1,5,113],"3":[1,5,108],"4":[1,5,91],"5":[1,5,81],"6":[2,2,20],"7":[3,4,81],"8":[2,4,67],"9":[2,4,104],"10":[2,1,1],"11":[1,2,1],"12":[4,3,43],"13":[4,3,36],"14":[2,3,54],"15":[1,3,34],"16":[4,2,76],"17":[3,2,28],"18":[5,2,46],"19":[2,2,1],"20":[1,4,41],"21":[1,4,31],"22":[2,4,20],"23":[2,2,26],"24":[3,2,19],"25":[2,1,20],"26":[3,2,101],"27":[4,2,1],"28":[4,6,53],"29":[4,6,34],"30":[3,2,120],"31":[3,5,95],"32":[5,2,36],"33":[2,2,1],"34":[5,4,21],"35":[3,4,18],"36":[3,4,19],"37":[1,1,21],"38":[1,1,39],"39":[4,1,100],"40":[3,1,57],"41":[3,1,152],"42":[3,1,1],"43":[2,4,104],"44":[2,4,121],"45":[3,1,49],"46":[2,1,69],"47":[2,1,59],"48":[3,1,18],"49":[2,1,8],"50":[2,3,23],"51":[3,3,28],"52":[2,3,17],"53":[2,1,22],"54":[2,1,16],"55":[2,2,20],"56":[3,4,35],"57":[3,4,58],"58":[3,4,54],"59":[3,4,33],"60":[2,2,14],"61":[2,3,20],"62":[3,3,82],"63":[2,3,71],"64":[2,3,78],"65":[2,2,10],"66":[2,4,37],"67":[3,4,138],"68":[5,4,108],"69":[4,4,78],"70":[2,2,1],"71":[2,4,64],"72":[2,4,73],"73":[2,2,15],"74":[3,1,22],"75":[1,3,27],"76":[5,3,17],"77":[2,3,108],"78":[4,3,1],"79":[2,7,26],"80":[2,7,23],"81":[2,7,26],"82":[3,7,20],"83":[3,3,1],"84":[2,6,62],"85":[2,6,62],"86":[2,6,69],"87":[2,3,1],"88":[3,5,67],"89":[3,5,81],"90":[2,3,21],"91":[2,1,16],"92":[2,2,19],"93":[3,4,56],"94":[3,4,66],"95":[2,2,12],"96":[3,4,73],"97":[3,4,65],"98":[2,4,64],"99":[2,2,10],"100":[3,4,73],"101":[3,4,85],"102":[3,4,80],"103":[2,2,8],"104":[3,4,78],"105":[3,4,61],"106":[3,4,68],"107":[1,2,10],"108":[3,3,86],"109":[3,3,116],"110":[3,2,42],"111":[4,5,25],"112":[2,5,71],"113":[2,2,12],"114":[2,1,17],"115":[2,2,39],"116":[2,2,15],"117":[3,3,58],"118":[5,3,63],"119":[3,3,67],"120":[3,3,106],"121":[2,2,10],"122":[3,3,33],"123":[5,3,67],"124":[2,3,55],"125":[3,3,48],"126":[4,3,66],"127":[2,2,12],"128":[3,3,55],"129":[5,3,55],"130":[4,3,109],"131":[3,3,71],"132":[3,2,12],"133":[4,4,67],"134":[5,4,87],"135":[2,2,1],"136":[2,4,62],"137":[4,4,91],"138":[2,2,32],"139":[2,1,23],"140":[2,2,55],"141":[1,2,1],"142":[3,3,187],"143":[3,3,138],"144":[1,2,1],"145":[3,3,39],"146":[2,3,93],"147":[3,3,1],"148":[3,6,26],"149":[3,6,17],"150":[2,6,18],"151":[2,2,1],"152":[3,4,1],"153":[4,7,59],"154":[5,7,65],"155":[3,4,104],"156":[2,4,27],"157":[4,6,74],"158":[2,2,22],"159":[2,1,27],"160":[1,2,45],"161":[2,2,42],"162":[2,2,95],"163":[4,2,1],"164":[2,5,29],"165":[2,5,32],"166":[2,5,30],"167":[3,5,34],"168":[2,2,1],"169":[3,3,59],"170":[3,3,76],"171":[2,2,1],"172":[2,4,17],"173":[2,4,15],"174":[2,4,15],"175":[2,2,1],"176":[2,4,19],"177":[5,4,39],"178":[2,2,23],"179":[3,1,22],"180":[2,3,44],"181":[1,3,1],"182":[4,4,137],"183":[3,4,156],"184":[2,3,24],"185":[2,5,186],"186":[3,5,13],"187":[2,8,123],"188":[3,5,65],"189":[2,5,49],"190":[2,3,29],"191":[2,1,27],"192":[2,2,52],"193":[1,2,1],"194":[3,3,196],"195":[3,3,98],"196":[1,2,1],"197":[3,3,64],"198":[3,2,59],"199":[2,5,42],"200":[2,5,28],"201":[4,7,98],"202":[2,2,22],"203":[2,1,22],"204":[2,2,56],"205":[1,2,1],"206":[3,3,190],"207":[3,3,88],"208":[2,2,1],"209":[4,4,35],"210":[3,4,34],"211":[3,4,85],"212":[3,5,161],"213":[1,2,1],"214":[3,3,51],"215":[3,3,65],"216":[2,3,72],"217":[3,3,46],"218":[2,2,1],"219":[3,4,83],"220":[2,4,70],"221":[2,2,1],"222":[3,4,63],"223":[2,4,67],"224":[2,2,19],"225":[1,1,18],"226":[1,1,36],"227":[2,1,37],"228":[2,1,96],"229":[3,1,65],"230":[2,1,9],"231":[2,3,25],"232":[2,3,1],"233":[2,4,10],"234":[2,4,12],"235":[2,1,49],"236":[3,1,24],"237":[2,1,50],"238":[2,1,134],"239":[2,1,8],"240":[2,3,27],"241":[3,3,44],"242":[2,3,39],"243":[2,1,22],"244":[3,1,19],"245":[2,3,17],"246":[3,5,100],"247":[3,5,78],"248":[2,5,60],"249":[2,3,10],"250":[3,5,41],"251":[3,5,96],"252":[1,3,11],"253":[2,4,60],"254":[3,4,57],"255":[2,4,47],"256":[1,3,10],"257":[2,4,61],"258":[4,4,65],"259":[2,3,11],"260":[3,5,66],"261":[3,5,72],"262":[1,3,10],"263":[2,4,58],"264":[2,4,61],"265":[2,3,1],"266":[3,5,114],"267":[4,3,90],"268":[3,3,50],"269":[4,5,30],"270":[2,5,94],"271":[2,3,13],"272":[2,1,14],"273":[3,2,21],"274":[3,4,30],"275":[3,4,33],"276":[2,2,1],"277":[1,3,50],"278":[2,3,34],"279":[2,3,19],"280":[2,2,11],"281":[2,4,41],"282":[2,4,39],"283":[5,4,41],"284":[3,4,39],"285":[3,2,41],"286":[2,2,72],"287":[2,2,39],"288":[2,2,29],"289":[3,1,26],"290":[1,3,27],"291":[5,3,27],"292":[2,3,157],"293":[2,3,25],"294":[2,1,24],"295":[2,2,38],"296":[3,4,28],"297":[2,2,1],"298":[4,4,146],"299":[3,4,127],"300":[2,2,1],"301":[3,4,75],"302":[2,2,1],"303":[3,4,92],"304":[4,4,80],"305":[2,2,1],"306":[3,4,92],"307":[3,4,103],"308":[3,2,1],"309":[2,5,102],"310":[3,5,121],"311":[2,2,21],"312":[2,1,27],"313":[2,2,36],"314":[3,4,26],"315":[2,2,11],"316":[3,3,67],"317":[2,3,64],"318":[2,2,15],"319":[2,3,74],"320":[2,3,90],"321":[2,3,79],"322":[2,2,11],"323":[2,4,27],"324":[2,4,39],"325":[2,4,38],"326":[3,4,57],"327":[2,2,8],"328":[3,4,55],"329":[2,4,51],"330":[2,2,61],"331":[2,2,55],"332":[2,2,19],"333":[2,1,26],"334":[2,2,28],"335":[3,4,32],"336":[2,2,1],"337":[2,4,65],"338":[3,4,40],"339":[4,2,34],"340":[5,6,60],"341":[5,6,67],"342":[3,6,83],"343":[3,6,71],"344":[3,6,53],"345":[3,6,64],"346":[8,6,144],"347":[2,2,20],"348":[3,4,80],"349":[3,4,54],"350":[3,4,87],"351":[3,4,92],"352":[3,4,89],"353":[2,2,1],"354":[4,4,72],"355":[3,4,89],"356":[2,2,1],"357":[2,4,20],"358":[2,4,43],"359":[3,4,39],"360":[2,4,80],"361":[5,4,112],"362":[4,4,70],"363":[2,4,55],"364":[2,2,52],"365":[3,2,1],"366":[2,5,71],"367":[2,5,46],"368":[2,2,21]},"averageFieldLength":[2.552845528455286,3.205962059620598,48.38482384823848],"storedFields":{"0":{"href":"/core-concepts#core-concepts","html":"</header>\n<p>Understanding the fundamental concepts of MCP and how MCP-Go implements them is essential for building effective MCP servers and clients.</p>\n","isPage":true,"text":"\nUnderstanding the fundamental concepts of MCP and how MCP-Go implements them is essential for building effective MCP servers and clients.\n","title":"Core Concepts","titles":[]},"1":{"href":"/core-concepts#mcp-protocol-fundamentals","html":"\n<p>The Model Context Protocol defines four core concepts that enable LLMs to interact with external systems safely and effectively.</p>\n","isPage":false,"text":"\nThe Model Context Protocol defines four core concepts that enable LLMs to interact with external systems safely and effectively.\n","title":"MCP Protocol Fundamentals","titles":["Core Concepts"]},"2":{"href":"/core-concepts#resources","html":"\n<p>Resources are like GET endpoints - they expose data to LLMs in a read-only manner. Think of them as files, database records, or API responses that an LLM can access.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Read-only</strong>: LLMs can fetch but not modify resources</li>\n<li><strong>URI-based</strong>: Each resource has a unique identifier</li>\n<li><strong>Typed content</strong>: Resources specify their MIME type (text, JSON, binary, etc.)</li>\n<li><strong>Dynamic or static</strong>: Can be pre-defined or generated on-demand</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>File system access (<code>file:///path/to/document.txt</code>)</li>\n<li>Database records (<code>db://users/123</code>)</li>\n<li>API data (<code>api://weather/current</code>)</li>\n<li>Configuration files (<code>config://app.json</code>)</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Static resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The project&#x27;s main documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Dynamic resource with template</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">userResource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nResources are like GET endpoints - they expose data to LLMs in a read-only manner. Think of them as files, database records, or API responses that an LLM can access.\nKey characteristics:\n\nRead-only: LLMs can fetch but not modify resources\nURI-based: Each resource has a unique identifier\nTyped content: Resources specify their MIME type (text, JSON, binary, etc.)\nDynamic or static: Can be pre-defined or generated on-demand\n\nExample use cases:\n\nFile system access (file:///path/to/document.txt)\nDatabase records (db://users/123)\nAPI data (api://weather/current)\nConfiguration files (config://app.json)\n\n// Static resource\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,\n    &quot;Project README&quot;,\n    mcp.WithResourceDescription(&quot;The project&#x27;s main documentation&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n \n// Dynamic resource with template\nuserResource := mcp.NewResource(\n    &quot;users://{user_id}&quot;,\n    &quot;User Profile&quot;,\n    mcp.WithResourceDescription(&quot;User profile information&quot;),\n    mcp.WithMIMEType(&quot;application/json&quot;),\n)\n","title":"Resources","titles":["Core Concepts","MCP Protocol Fundamentals"]},"3":{"href":"/core-concepts#tools","html":"\n<p>Tools are like POST endpoints - they provide functionality that LLMs can invoke to take actions or perform computations.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Action-oriented</strong>: Tools do things rather than just return data</li>\n<li><strong>Parameterized</strong>: Accept structured input arguments</li>\n<li><strong>Typed schemas</strong>: Define expected parameter types and constraints</li>\n<li><strong>Return results</strong>: Provide structured output back to the LLM</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Calculations (<code>calculate</code>, <code>convert_units</code>)</li>\n<li>File operations (<code>create_file</code>, <code>search_files</code>)</li>\n<li>API calls (<code>send_email</code>, <code>create_ticket</code>)</li>\n<li>System commands (<code>run_command</code>, <code>check_status</code>)</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Simple calculation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">calcTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// File creation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new file with content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTools are like POST endpoints - they provide functionality that LLMs can invoke to take actions or perform computations.\nKey characteristics:\n\nAction-oriented: Tools do things rather than just return data\nParameterized: Accept structured input arguments\nTyped schemas: Define expected parameter types and constraints\nReturn results: Provide structured output back to the LLM\n\nExample use cases:\n\nCalculations (calculate, convert_units)\nFile operations (create_file, search_files)\nAPI calls (send_email, create_ticket)\nSystem commands (run_command, check_status)\n\n// Simple calculation tool\ncalcTool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;, \n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n)\n \n// File creation tool\nfileTool := mcp.NewTool(&quot;create_file&quot;,\n    mcp.WithDescription(&quot;Create a new file with content&quot;),\n    mcp.WithString(&quot;path&quot;, mcp.Required()),\n    mcp.WithString(&quot;content&quot;, mcp.Required()),\n    mcp.WithString(&quot;encoding&quot;, mcp.Default(&quot;utf-8&quot;)),\n)\n","title":"Tools","titles":["Core Concepts","MCP Protocol Fundamentals"]},"4":{"href":"/core-concepts#prompts","html":"\n<p>Prompts are reusable interaction templates that help structure conversations between users and LLMs.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Template-based</strong>: Use placeholders for dynamic content</li>\n<li><strong>Reusable</strong>: Can be invoked multiple times with different arguments</li>\n<li><strong>Structured</strong>: Define clear input parameters and expected outputs</li>\n<li><strong>Context-aware</strong>: Can include relevant resources or tool suggestions</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Code review templates</li>\n<li>Documentation generation</li>\n<li>Data analysis workflows</li>\n<li>Creative writing prompts</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reviewPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices and issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Data analysis prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">analysisPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze dataset and provide insights&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Specific areas to focus analysis on&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nPrompts are reusable interaction templates that help structure conversations between users and LLMs.\nKey characteristics:\n\nTemplate-based: Use placeholders for dynamic content\nReusable: Can be invoked multiple times with different arguments\nStructured: Define clear input parameters and expected outputs\nContext-aware: Can include relevant resources or tool suggestions\n\nExample use cases:\n\nCode review templates\nDocumentation generation\nData analysis workflows\nCreative writing prompts\n\n// Code review prompt\nreviewPrompt := mcp.NewPrompt(&quot;code_review&quot;,\n    mcp.WithPromptDescription(&quot;Review code for best practices and issues&quot;),\n    mcp.WithPromptArgument(&quot;code&quot;, \n        mcp.Required(),\n        mcp.Description(&quot;The code to review&quot;),\n    ),\n    mcp.WithPromptArgument(&quot;language&quot;,\n        mcp.Description(&quot;Programming language&quot;),\n    ),\n)\n \n// Data analysis prompt\nanalysisPrompt := mcp.NewPrompt(&quot;analyze_data&quot;,\n    mcp.WithPromptDescription(&quot;Analyze dataset and provide insights&quot;),\n    mcp.WithPromptArgument(&quot;dataset_uri&quot;, mcp.Required()),\n    mcp.WithPromptArgument(&quot;focus_areas&quot;, \n        mcp.Description(&quot;Specific areas to focus analysis on&quot;),\n    ),\n)\n","title":"Prompts","titles":["Core Concepts","MCP Protocol Fundamentals"]},"5":{"href":"/core-concepts#transports","html":"\n<p>Transports define how MCP clients and servers communicate. MCP-Go supports multiple transport methods to fit different deployment scenarios.</p>\n<strong>Available transports:</strong>\n<ol>\n<li>\n<p><strong>Stdio</strong> - Standard input/output (most common)</p>\n<ul>\n<li>Best for: Local tools, CLI integration, desktop applications</li>\n<li>Pros: Simple, secure, no network setup</li>\n<li>Cons: Local only, single client</li>\n</ul>\n</li>\n<li>\n<p><strong>Server-Sent Events (SSE)</strong> - HTTP-based streaming</p>\n<ul>\n<li>Best for: Web applications, real-time updates</li>\n<li>Pros: Web-friendly, real-time, multiple clients</li>\n<li>Cons: HTTP overhead, one-way streaming</li>\n</ul>\n</li>\n<li>\n<p><strong>HTTP</strong> - Traditional request/response</p>\n<ul>\n<li>Best for: Web services, REST-like APIs</li>\n<li>Pros: Standard protocol, caching, load balancing</li>\n<li>Cons: No real-time updates, more complex</li>\n</ul>\n</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Stdio transport (most common)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// HTTP transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeSSE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTransports define how MCP clients and servers communicate. MCP-Go supports multiple transport methods to fit different deployment scenarios.\nAvailable transports:\n\n\nStdio - Standard input/output (most common)\n\nBest for: Local tools, CLI integration, desktop applications\nPros: Simple, secure, no network setup\nCons: Local only, single client\n\n\n\nServer-Sent Events (SSE) - HTTP-based streaming\n\nBest for: Web applications, real-time updates\nPros: Web-friendly, real-time, multiple clients\nCons: HTTP overhead, one-way streaming\n\n\n\nHTTP - Traditional request/response\n\nBest for: Web services, REST-like APIs\nPros: Standard protocol, caching, load balancing\nCons: No real-time updates, more complex\n\n\n\n// Stdio transport (most common)\nserver.ServeStdio(s)\n \n// HTTP transport\nserver.ServeHTTP(s, &quot;:8080&quot;)\n \n// SSE transport\nserver.ServeSSE(s, &quot;:8080&quot;)\n","title":"Transports","titles":["Core Concepts","MCP Protocol Fundamentals"]},"6":{"href":"/core-concepts#sdk-architecture","html":"\n<p>MCP-Go provides a clean architecture that abstracts the complexity of the MCP protocol while giving you full control when needed.</p>\n","isPage":false,"text":"\nMCP-Go provides a clean architecture that abstracts the complexity of the MCP protocol while giving you full control when needed.\n","title":"SDK Architecture","titles":["Core Concepts"]},"7":{"href":"/core-concepts#server-vs-client","html":"\n<p>Understanding when to build servers versus clients is crucial for effective MCP integration.</p>\n<strong>MCP Servers:</strong>\n<ul>\n<li><strong>Purpose</strong>: Expose tools, resources, and prompts to LLMs</li>\n<li><strong>Use cases</strong>:\n<ul>\n<li>Database access layers</li>\n<li>File system tools</li>\n<li>API integrations</li>\n<li>Custom business logic</li>\n</ul>\n</li>\n<li><strong>Characteristics</strong>: Passive, respond to requests, stateful</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server example - exposes functionality</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Database Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(queryTool, handleQuery)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tableResource, handleTableAccess)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span></code></pre>\n<strong>MCP Clients:</strong>\n<ul>\n<li><strong>Purpose</strong>: Connect to and use MCP servers</li>\n<li><strong>Use cases</strong>:\n<ul>\n<li>LLM applications</li>\n<li>Orchestration tools</li>\n<li>Testing and debugging</li>\n<li>Server composition</li>\n</ul>\n</li>\n<li><strong>Characteristics</strong>: Active, make requests, coordinate multiple servers</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Client example - uses functionality</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;database-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tools, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, queryRequest)</span></span></code></pre>\n","isPage":false,"text":"\nUnderstanding when to build servers versus clients is crucial for effective MCP integration.\nMCP Servers:\n\nPurpose: Expose tools, resources, and prompts to LLMs\nUse cases:\n\nDatabase access layers\nFile system tools\nAPI integrations\nCustom business logic\n\n\nCharacteristics: Passive, respond to requests, stateful\n\n// Server example - exposes functionality\ns := server.NewMCPServer(&quot;Database Tools&quot;, &quot;1.0.0&quot;)\ns.AddTool(queryTool, handleQuery)\ns.AddResource(tableResource, handleTableAccess)\nserver.ServeStdio(s)\nMCP Clients:\n\nPurpose: Connect to and use MCP servers\nUse cases:\n\nLLM applications\nOrchestration tools\nTesting and debugging\nServer composition\n\n\nCharacteristics: Active, make requests, coordinate multiple servers\n\n// Client example - uses functionality\nclient := client.NewStdioClient(&quot;database-server&quot;)\ntools, _ := client.ListTools(ctx)\nresult, _ := client.CallTool(ctx, queryRequest)\n","title":"Server vs Client","titles":["Core Concepts","SDK Architecture"]},"8":{"href":"/core-concepts#transport-layer","html":"\n<p>The transport layer abstracts communication protocols, allowing you to focus on business logic rather than protocol details.</p>\n<strong>Key benefits:</strong>\n<ul>\n<li><strong>Protocol agnostic</strong>: Same server code works with any transport</li>\n<li><strong>Automatic serialization</strong>: JSON marshaling/unmarshaling handled automatically</li>\n<li><strong>Error handling</strong>: Transport-specific errors are normalized</li>\n<li><strong>Connection management</strong>: Automatic reconnection and cleanup</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Same server works with any transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Choose transport at runtime</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeSSE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe transport layer abstracts communication protocols, allowing you to focus on business logic rather than protocol details.\nKey benefits:\n\nProtocol agnostic: Same server code works with any transport\nAutomatic serialization: JSON marshaling/unmarshaling handled automatically\nError handling: Transport-specific errors are normalized\nConnection management: Automatic reconnection and cleanup\n\n// Same server works with any transport\ns := server.NewMCPServer(&quot;My Server&quot;, &quot;1.0.0&quot;)\n \n// Choose transport at runtime\nswitch transport {\ncase &quot;stdio&quot;:\n    server.ServeStdio(s)\ncase &quot;http&quot;:\n    server.ServeHTTP(s, &quot;:8080&quot;)\ncase &quot;sse&quot;:\n    server.ServeSSE(s, &quot;:8080&quot;)\n}\n","title":"Transport Layer","titles":["Core Concepts","SDK Architecture"]},"9":{"href":"/core-concepts#session-management","html":"\n<p>MCP-Go handles session management automatically, supporting multiple concurrent clients with proper isolation.</p>\n<strong>Features:</strong>\n<ul>\n<li><strong>Multi-client support</strong>: Multiple LLMs can connect simultaneously</li>\n<li><strong>Session isolation</strong>: Each client has independent state</li>\n<li><strong>Resource cleanup</strong>: Automatic cleanup when clients disconnect</li>\n<li><strong>Concurrent safety</strong>: Thread-safe operations across all sessions</li>\n</ul>\n<strong>Session lifecycle:</strong>\n<ol>\n<li><strong>Initialize</strong>: Client connects and exchanges capabilities</li>\n<li><strong>Active</strong>: Client makes requests, server responds</li>\n<li><strong>Cleanup</strong>: Connection closes, resources are freed</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server automatically handles multiple sessions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Client Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        OnSessionStart: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        OnSessionEnd: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> disconnected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>State management patterns:</strong>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Per-session state</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionState</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Settings </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> toolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    state </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use session-specific state</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processWithState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(state, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\nMCP-Go handles session management automatically, supporting multiple concurrent clients with proper isolation.\nFeatures:\n\nMulti-client support: Multiple LLMs can connect simultaneously\nSession isolation: Each client has independent state\nResource cleanup: Automatic cleanup when clients disconnect\nConcurrent safety: Thread-safe operations across all sessions\n\nSession lifecycle:\n\nInitialize: Client connects and exchanges capabilities\nActive: Client makes requests, server responds\nCleanup: Connection closes, resources are freed\n\n// Server automatically handles multiple sessions\ns := server.NewMCPServer(&quot;Multi-Client Server&quot;, &quot;1.0.0&quot;,\n    server.WithHooks(&amp;server.Hooks{\n        OnSessionStart: func(sessionID string) {\n            log.Printf(&quot;Client %s connected&quot;, sessionID)\n        },\n        OnSessionEnd: func(sessionID string) {\n            log.Printf(&quot;Client %s disconnected&quot;, sessionID)\n        },\n    }),\n)\nState management patterns:\n// Per-session state\ntype SessionState struct {\n    UserID   string\n    Settings map[string]interface{}\n}\n \nvar sessions = make(map[string]*SessionState)\n \nfunc toolHandler(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    sessionID := server.GetSessionID(ctx)\n    state := sessions[sessionID]\n    \n    // Use session-specific state\n    return processWithState(state, req)\n}","title":"Session Management","titles":["Core Concepts","SDK Architecture"]},"10":{"href":"/getting-started#getting-started","html":"</header>\n","isPage":true,"text":"\n","title":"Getting Started","titles":[]},"11":{"href":"/getting-started#introduction","html":"\n","isPage":false,"text":"\n","title":"Introduction","titles":["Getting Started"]},"12":{"href":"/getting-started#what-is-mcp","html":"\n<p>The Model Context Protocol (MCP) is an open standard that enables secure, controlled connections between AI applications and external data sources and tools. It provides a standardized way for Large Language Models (LLMs) to access and interact with external systems while maintaining security and user control.</p>\n","isPage":false,"text":"\nThe Model Context Protocol (MCP) is an open standard that enables secure, controlled connections between AI applications and external data sources and tools. It provides a standardized way for Large Language Models (LLMs) to access and interact with external systems while maintaining security and user control.\n","title":"What is MCP?","titles":["Getting Started","Introduction"]},"13":{"href":"/getting-started#why-mcp-go","html":"\n<p>MCP-Go is designed to make building MCP servers in Go fast, simple, and complete:</p>\n<ul>\n<li><strong>Fast</strong>: Minimal overhead with efficient Go implementation</li>\n<li><strong>Simple</strong>: Clean, intuitive API with minimal boilerplate</li>\n<li><strong>Complete</strong>: Full support for the MCP specification including tools, resources, and prompts</li>\n</ul>\n","isPage":false,"text":"\nMCP-Go is designed to make building MCP servers in Go fast, simple, and complete:\n\nFast: Minimal overhead with efficient Go implementation\nSimple: Clean, intuitive API with minimal boilerplate\nComplete: Full support for the MCP specification including tools, resources, and prompts\n\n","title":"Why MCP Go?","titles":["Getting Started","Introduction"]},"14":{"href":"/getting-started#key-features","html":"\n<ul>\n<li><strong>High-level interface</strong>: Focus on your business logic, not protocol details</li>\n<li><strong>Minimal boilerplate</strong>: Get started with just a few lines of code</li>\n<li><strong>Full MCP spec support</strong>: Tools, resources, prompts, and all transport methods</li>\n<li><strong>Type safety</strong>: Leverage Go&#x27;s type system for robust MCP servers</li>\n<li><strong>Multiple transports</strong>: Stdio, StreamableHTTP, Server-Sent Events and In-Process support</li>\n</ul>\n","isPage":false,"text":"\n\nHigh-level interface: Focus on your business logic, not protocol details\nMinimal boilerplate: Get started with just a few lines of code\nFull MCP spec support: Tools, resources, prompts, and all transport methods\nType safety: Leverage Go&#x27;s type system for robust MCP servers\nMultiple transports: Stdio, StreamableHTTP, Server-Sent Events and In-Process support\n\n","title":"Key Features","titles":["Getting Started","Introduction"]},"15":{"href":"/getting-started#installation","html":"\n<p>Add MCP-Go to your Go project:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/mark3labs/mcp-go</span></span></code></pre>\n<p>MCP-Go makes it easy to build Model Context Protocol (MCP) servers in Go. This guide will help you create your first MCP server in just a few minutes.</p>\n","isPage":false,"text":"\nAdd MCP-Go to your Go project:\ngo get github.com/mark3labs/mcp-go\nMCP-Go makes it easy to build Model Context Protocol (MCP) servers in Go. This guide will help you create your first MCP server in just a few minutes.\n","title":"Installation","titles":["Getting Started","Introduction"]},"16":{"href":"/getting-started#your-first-mcp-server","html":"\n<p>Let&#x27;s create a simple MCP server with a &quot;hello world&quot; tool:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Demo 🚀&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Say hello to someone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name of the person to greet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, helloHandler)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the stdio server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> helloHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nLet&#x27;s create a simple MCP server with a &quot;hello world&quot; tool:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a new MCP server\n    s := server.NewMCPServer(\n        &quot;Demo 🚀&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(false),\n    )\n \n    // Add tool\n    tool := mcp.NewTool(&quot;hello_world&quot;,\n        mcp.WithDescription(&quot;Say hello to someone&quot;),\n        mcp.WithString(&quot;name&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;Name of the person to greet&quot;),\n        ),\n    )\n \n    // Add tool handler\n    s.AddTool(tool, helloHandler)\n \n    // Start the stdio server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc helloHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    name, err := request.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;Hello, %s!&quot;, name)), nil\n}\n","title":"Your First MCP Server","titles":["Getting Started"]},"17":{"href":"/getting-started#running-your-server","html":"\n<ol>\n<li>Save the code above to a file (e.g., <code>main.go</code>)</li>\n<li>Run it with:\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n</li>\n</ol>\n<p>Your MCP server is now running and ready to accept connections via stdio!</p>\n","isPage":false,"text":"\n\nSave the code above to a file (e.g., main.go)\nRun it with:\ngo run main.go\n\n\nYour MCP server is now running and ready to accept connections via stdio!\n","title":"Running Your Server","titles":["Getting Started"]},"18":{"href":"/getting-started#whats-next","html":"\n<p>Now that you have a basic server running, you can:</p>\n<ul>\n<li><strong>Add more tools</strong> - Create tools for calculations, file operations, API calls, etc.</li>\n<li><strong>Add resources</strong> - Expose data sources like files, databases, or APIs</li>\n<li><strong>Add prompts</strong> - Create reusable prompt templates for better LLM interactions</li>\n<li><strong>Explore examples</strong> - Check out the <code>examples/</code> directory for more complex use cases</li>\n</ul>\n","isPage":false,"text":"\nNow that you have a basic server running, you can:\n\nAdd more tools - Create tools for calculations, file operations, API calls, etc.\nAdd resources - Expose data sources like files, databases, or APIs\nAdd prompts - Create reusable prompt templates for better LLM interactions\nExplore examples - Check out the examples/ directory for more complex use cases\n\n","title":"What&#x27;s Next?","titles":["Getting Started"]},"19":{"href":"/getting-started#key-concepts","html":"\n","isPage":false,"text":"\n","title":"Key Concepts","titles":["Getting Started"]},"20":{"href":"/getting-started#tools","html":"\n<p>Tools let LLMs take actions through your server. They&#x27;re like functions that the LLM can call:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">calculatorTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform basic arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTools let LLMs take actions through your server. They&#x27;re like functions that the LLM can call:\ncalculatorTool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform basic arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;,\n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n)\n","title":"Tools","titles":["Getting Started","Key Concepts"]},"21":{"href":"/getting-started#resources","html":"\n<p>Resources expose data to LLMs. They can be static files or dynamic data:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The project&#x27;s README file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nResources expose data to LLMs. They can be static files or dynamic data:\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,\n    &quot;Project README&quot;,\n    mcp.WithResourceDescription(&quot;The project&#x27;s README file&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n","title":"Resources","titles":["Getting Started","Key Concepts"]},"22":{"href":"/getting-started#server-options","html":"\n<p>Customize your server with various options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(myHooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nCustomize your server with various options:\ns := server.NewMCPServer(\n    &quot;My Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),\n    server.WithRecovery(),\n    server.WithHooks(myHooks),\n)\n","title":"Server Options","titles":["Getting Started","Key Concepts"]},"23":{"href":"/getting-started#transport-options","html":"\n<p>MCP-Go supports multiple transport methods:</p>\n<ul>\n<li><strong>Stdio</strong> (most common): <code>server.ServeStdio(s)</code></li>\n<li><strong>StreamableHTTP</strong>: <code>server.NewStreamableHTTPServer(s).Start(&quot;:8080&quot;)</code></li>\n<li><strong>Server-Sent Events</strong>: <code>server.ServeSSE(s, &quot;:8080&quot;)</code></li>\n<li><strong>In-Process</strong>: <code>client.NewInProcessClient(server)</code></li>\n</ul>\n","isPage":false,"text":"\nMCP-Go supports multiple transport methods:\n\nStdio (most common): server.ServeStdio(s)\nStreamableHTTP: server.NewStreamableHTTPServer(s).Start(&quot;:8080&quot;)\nServer-Sent Events: server.ServeSSE(s, &quot;:8080&quot;)\nIn-Process: client.NewInProcessClient(server)\n\n","title":"Transport Options","titles":["Getting Started"]},"24":{"href":"/getting-started#need-help","html":"\n<ul>\n<li>Check out the <a href=\"https://github.com/mark3labs/mcp-go/tree/main/examples\">examples</a> for more complex use cases</li>\n<li>Join the discussion on <a href=\"https://discord.gg/RqSS2NQVsY\">Discord</a></li>\n<li>Read the full documentation in the <a href=\"https://github.com/mark3labs/mcp-go/blob/main/README.md\">README</a></li>\n</ul>","isPage":false,"text":"\n\nCheck out the examples for more complex use cases\nJoin the discussion on Discord\nRead the full documentation in the README\n","title":"Need Help?","titles":["Getting Started"]},"25":{"href":"/quick-start#quick-start","html":"</header>\n<p>Get up and running with MCP-Go in minutes. This guide walks you through creating your first MCP server and client.</p>\n","isPage":true,"text":"\nGet up and running with MCP-Go in minutes. This guide walks you through creating your first MCP server and client.\n","title":"Quick Start","titles":[]},"26":{"href":"/quick-start#hello-world-server","html":"\n<p>Let&#x27;s start with the simplest possible MCP server - a &quot;hello world&quot; tool:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Hello World Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Say hello to someone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name of the person to greet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, helloHandler)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the stdio server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> helloHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    arguments </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error: name parameter is required and must be a string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">! 👋&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Save this as <code>hello-server/main.go</code> and run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> hello-server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> hello-server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/mark3labs/mcp-go</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n","isPage":false,"text":"\nLet&#x27;s start with the simplest possible MCP server - a &quot;hello world&quot; tool:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a new MCP server\n    s := server.NewMCPServer(\n        &quot;Hello World Server&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Define a simple tool\n    tool := mcp.NewTool(&quot;hello_world&quot;,\n        mcp.WithDescription(&quot;Say hello to someone&quot;),\n        mcp.WithString(&quot;name&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;Name of the person to greet&quot;),\n        ),\n    )\n \n    // Add tool handler\n    s.AddTool(tool, helloHandler)\n \n    // Start the stdio server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc helloHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    arguments := request.GetArguments()\n    name, ok := arguments[&quot;name&quot;].(string)\n    if !ok {\n        return &amp;mcp.CallToolResult{\n            Content: []mcp.Content{\n                mcp.TextContent{\n                    Type: &quot;text&quot;,\n                    Text: &quot;Error: name parameter is required and must be a string&quot;,\n                },\n            },\n            IsError: true,\n        }, nil\n    }\n \n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: fmt.Sprintf(&quot;Hello, %s! 👋&quot;, name),\n            },\n        },\n    }, nil\n}\nSave this as hello-server/main.go and run:\ncd hello-server\ngo mod init hello-server\ngo get github.com/mark3labs/mcp-go\ngo run main.go\n","title":"Hello World Server","titles":["Quick Start"]},"27":{"href":"/quick-start#running-your-first-server","html":"\n","isPage":false,"text":"\n","title":"Running Your First Server","titles":["Quick Start"]},"28":{"href":"/quick-start#testing-with-claude-desktop","html":"\n<ol>\n<li>\n<p><strong>Install Claude Desktop</strong> from <a href=\"https://claude.ai/download\">Anthropic&#x27;s website</a></p>\n</li>\n<li>\n<p><strong>Configure your server</strong> by editing Claude&#x27;s config file:</p>\n<p><strong>macOS</strong>: <code>~/Library/Application Support/Claude/claude_desktop_config.json</code>\n<strong>Windows</strong>: <code>%APPDATA%\\Claude\\claude_desktop_config.json</code></p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;mcpServers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;hello-world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;args&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/your/hello-server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n</li>\n<li>\n<p><strong>Restart Claude Desktop</strong> and look for the 🔌 icon indicating MCP connection</p>\n</li>\n<li>\n<p><strong>Test your tool</strong> by asking Claude: &quot;Use the hello_world tool to greet Alice&quot;</p>\n</li>\n</ol>\n","isPage":false,"text":"\n\n\nInstall Claude Desktop from Anthropic&#x27;s website\n\n\nConfigure your server by editing Claude&#x27;s config file:\nmacOS: ~/Library/Application Support/Claude/claude_desktop_config.json\nWindows: %APPDATA%\\Claude\\claude_desktop_config.json\n{\n  &quot;mcpServers&quot;: {\n    &quot;hello-world&quot;: {\n      &quot;command&quot;: &quot;go&quot;,\n      &quot;args&quot;: [&quot;run&quot;, &quot;/path/to/your/hello-server/main.go&quot;]\n    }\n  }\n}\n\n\nRestart Claude Desktop and look for the 🔌 icon indicating MCP connection\n\n\nTest your tool by asking Claude: &quot;Use the hello_world tool to greet Alice&quot;\n\n\n","title":"Testing with Claude Desktop","titles":["Quick Start","Running Your First Server"]},"29":{"href":"/quick-start#testing-with-mcp-inspector","html":"\n<p>For debugging and development, use the MCP Inspector:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install the MCP Inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @modelcontextprotocol/inspector</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Run your server with the inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp-inspector</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n<p>This opens a web interface where you can test your tools interactively.</p>\n","isPage":false,"text":"\nFor debugging and development, use the MCP Inspector:\n# Install the MCP Inspector\nnpm install -g @modelcontextprotocol/inspector\n \n# Run your server with the inspector\nmcp-inspector go run main.go\nThis opens a web interface where you can test your tools interactively.\n","title":"Testing with MCP Inspector","titles":["Quick Start","Running Your First Server"]},"30":{"href":"/quick-start#basic-client-example","html":"\n<p>You can also create MCP clients to connect to other servers:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client/transport</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create stdio transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    stdioTransport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with the transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stdioTransport)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ProtocolVersion </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.LATEST_PROTOCOL_VERSION</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ClientInfo </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello World Client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.Capabilities </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    serverInfo, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to initialize: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connected to server: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (version </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">)</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        serverInfo.ServerInfo.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        serverInfo.ServerInfo.Version)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> serverInfo.Capabilities.Tools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        toolsRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ListToolsRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        toolsResult, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, toolsRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(toolsResult.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolsResult.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest.Params.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;hello_world&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest.Params.Arguments </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;World&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, callRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to call tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Print the result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Content {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, textContent.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can also create MCP clients to connect to other servers:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/client/transport&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    // Create stdio transport\n    stdioTransport := transport.NewStdio(&quot;go&quot;, nil, &quot;run&quot;, &quot;path/to/server/main.go&quot;)\n \n    // Create client with the transport\n    c := client.NewClient(stdioTransport)\n \n    // Start the client\n    if err := c.Start(ctx); err != nil {\n        log.Fatalf(&quot;Failed to start client: %v&quot;, err)\n    }\n    defer c.Close()\n \n    // Initialize the client\n    initRequest := mcp.InitializeRequest{}\n    initRequest.Params.ProtocolVersion = mcp.LATEST_PROTOCOL_VERSION\n    initRequest.Params.ClientInfo = mcp.Implementation{\n        Name:    &quot;Hello World Client&quot;,\n        Version: &quot;1.0.0&quot;,\n    }\n    initRequest.Params.Capabilities = mcp.ClientCapabilities{}\n \n    serverInfo, err := c.Initialize(ctx, initRequest)\n    if err != nil {\n        log.Fatalf(&quot;Failed to initialize: %v&quot;, err)\n    }\n \n    fmt.Printf(&quot;Connected to server: %s (version %s)\\n&quot;,\n        serverInfo.ServerInfo.Name,\n        serverInfo.ServerInfo.Version)\n \n    // List available tools\n    if serverInfo.Capabilities.Tools != nil {\n        toolsRequest := mcp.ListToolsRequest{}\n        toolsResult, err := c.ListTools(ctx, toolsRequest)\n        if err != nil {\n            log.Fatalf(&quot;Failed to list tools: %v&quot;, err)\n        }\n \n        fmt.Printf(&quot;Available tools: %d\\n&quot;, len(toolsResult.Tools))\n        for _, tool := range toolsResult.Tools {\n            fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n        }\n \n        // Call a tool\n        callRequest := mcp.CallToolRequest{}\n        callRequest.Params.Name = &quot;hello_world&quot;\n        callRequest.Params.Arguments = map[string]interface{}{\n            &quot;name&quot;: &quot;World&quot;,\n        }\n \n        result, err := c.CallTool(ctx, callRequest)\n        if err != nil {\n            log.Fatalf(&quot;Failed to call tool: %v&quot;, err)\n        }\n \n        // Print the result\n        for _, content := range result.Content {\n            if textContent, ok := content.(mcp.TextContent); ok {\n                fmt.Printf(&quot;Result: %s\\n&quot;, textContent.Text)\n            }\n        }\n    }\n}\n","title":"Basic Client Example","titles":["Quick Start"]},"31":{"href":"/quick-start#streamablehttp-client-example","html":"\n<p>For StreamableHTTP-based servers, use the StreamableHTTP client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client/transport</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpTransport, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create HTTP transport: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with the transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpTransport)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ProtocolVersion </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.LATEST_PROTOCOL_VERSION</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ClientInfo </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP Client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.Capabilities </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    serverInfo, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to initialize: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connected to server: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (version </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">)</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        serverInfo.ServerInfo.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        serverInfo.ServerInfo.Version)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> serverInfo.Capabilities.Tools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest.Params.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;hello_world&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        callRequest.Params.Arguments </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP World&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, callRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to call tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nFor StreamableHTTP-based servers, use the StreamableHTTP client:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/client/transport&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    // Create HTTP transport\n    httpTransport, err := transport.NewStreamableHTTP(&quot;http://localhost:8080/mcp&quot;)\n    if err != nil {\n        log.Fatalf(&quot;Failed to create HTTP transport: %v&quot;, err)\n    }\n \n    // Create client with the transport\n    c := client.NewClient(httpTransport)\n    defer c.Close()\n \n    // Initialize the client\n    initRequest := mcp.InitializeRequest{}\n    initRequest.Params.ProtocolVersion = mcp.LATEST_PROTOCOL_VERSION\n    initRequest.Params.ClientInfo = mcp.Implementation{\n        Name:    &quot;StreamableHTTP Client&quot;,\n        Version: &quot;1.0.0&quot;,\n    }\n    initRequest.Params.Capabilities = mcp.ClientCapabilities{}\n \n    serverInfo, err := c.Initialize(ctx, initRequest)\n    if err != nil {\n        log.Fatalf(&quot;Failed to initialize: %v&quot;, err)\n    }\n \n    fmt.Printf(&quot;Connected to server: %s (version %s)\\n&quot;,\n        serverInfo.ServerInfo.Name,\n        serverInfo.ServerInfo.Version)\n \n    // Call a tool\n    if serverInfo.Capabilities.Tools != nil {\n        callRequest := mcp.CallToolRequest{}\n        callRequest.Params.Name = &quot;hello_world&quot;\n        callRequest.Params.Arguments = map[string]interface{}{\n            &quot;name&quot;: &quot;StreamableHTTP World&quot;,\n        }\n \n        result, err := c.CallTool(ctx, callRequest)\n        if err != nil {\n            log.Fatalf(&quot;Failed to call tool: %v&quot;, err)\n        }\n \n        fmt.Printf(&quot;Tool result: %+v\\n&quot;, result)\n    }\n}\n","title":"StreamableHTTP Client Example","titles":["Quick Start","Basic Client Example"]},"32":{"href":"/quick-start#whats-next","html":"\n<p>Now that you have a working MCP server and client:</p>\n<ul>\n<li><strong>Learn about <a href=\"/servers/tools\">Tools</a></strong> - Create powerful tool interfaces</li>\n<li><strong>Add <a href=\"/servers/resources\">Resources</a></strong> - Expose data sources to LLMs</li>\n<li><strong>Create <a href=\"/servers/prompts\">Prompts</a></strong> - Build reusable prompt templates</li>\n<li><strong>Explore <a href=\"/servers/advanced\">Advanced Features</a></strong> - Production-ready features</li>\n</ul>\n","isPage":false,"text":"\nNow that you have a working MCP server and client:\n\nLearn about Tools - Create powerful tool interfaces\nAdd Resources - Expose data sources to LLMs\nCreate Prompts - Build reusable prompt templates\nExplore Advanced Features - Production-ready features\n\n","title":"What&#x27;s Next?","titles":["Quick Start"]},"33":{"href":"/quick-start#common-issues","html":"\n","isPage":false,"text":"\n","title":"Common Issues","titles":["Quick Start"]},"34":{"href":"/quick-start#server-wont-start","html":"\n<ul>\n<li>Check that the port isn&#x27;t already in use</li>\n<li>Verify Go module dependencies are installed</li>\n<li>Ensure proper file permissions</li>\n</ul>\n","isPage":false,"text":"\n\nCheck that the port isn&#x27;t already in use\nVerify Go module dependencies are installed\nEnsure proper file permissions\n\n","title":"Server Won&#x27;t Start","titles":["Quick Start","Common Issues"]},"35":{"href":"/quick-start#client-connection-failed","html":"\n<ul>\n<li>Verify the server is running and accessible</li>\n<li>Check network connectivity for StreamableHTTP clients</li>\n<li>Validate stdio command paths for stdio clients</li>\n</ul>\n","isPage":false,"text":"\n\nVerify the server is running and accessible\nCheck network connectivity for StreamableHTTP clients\nValidate stdio command paths for stdio clients\n\n","title":"Client Connection Failed","titles":["Quick Start","Common Issues"]},"36":{"href":"/quick-start#tool-calls-failing","html":"\n<ul>\n<li>Verify tool parameter types match the schema</li>\n<li>Check error handling in your tool functions</li>\n<li>Use the MCP Inspector for debugging</li>\n</ul>","isPage":false,"text":"\n\nVerify tool parameter types match the schema\nCheck error handling in your tool functions\nUse the MCP Inspector for debugging\n","title":"Tool Calls Failing","titles":["Quick Start","Common Issues"]},"37":{"href":"/clients/advanced-sampling#sampling","html":"</header>\n<p>Learn how to implement MCP clients that can handle sampling requests from servers, enabling bidirectional communication where clients provide LLM capabilities to servers.</p>\n","isPage":true,"text":"\nLearn how to implement MCP clients that can handle sampling requests from servers, enabling bidirectional communication where clients provide LLM capabilities to servers.\n","title":"Sampling","titles":[]},"38":{"href":"/clients/advanced-sampling#overview","html":"\n<p>Sampling allows MCP clients to respond to LLM completion requests from servers. When a server needs to generate content, answer questions, or perform reasoning tasks, it can send a sampling request to the client, which then processes it using an LLM and returns the result.</p>\n","isPage":false,"text":"\nSampling allows MCP clients to respond to LLM completion requests from servers. When a server needs to generate content, answer questions, or perform reasoning tasks, it can send a sampling request to the client, which then processes it using an LLM and returns the result.\n","title":"Overview","titles":["Sampling"]},"39":{"href":"/clients/advanced-sampling#implementing-a-sampling-handler","html":"\n<p>Create a sampling handler by implementing the <code>SamplingHandler</code> interface:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client/transport</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MySamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add fields for your LLM client (OpenAI, Anthropic, etc.)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract request parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Messages</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    systemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.SystemPrompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxTokens </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.MaxTokens</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    temperature </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Temperature</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process with your LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    response, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callLLM</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, messages, systemPrompt, maxTokens, temperature)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return MCP-formatted result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-model-name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role:  mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text: response,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;endTurn&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callLLM</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">messages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">systemPrompt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxTokens</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">temperature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Implement your LLM integration here</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // This is where you&#x27;d call OpenAI, Anthropic, or other LLM APIs</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Your LLM response here&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nCreate a sampling handler by implementing the SamplingHandler interface:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/client/transport&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \ntype MySamplingHandler struct {\n    // Add fields for your LLM client (OpenAI, Anthropic, etc.)\n}\n \nfunc (h *MySamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Extract request parameters\n    messages := request.Messages\n    systemPrompt := request.SystemPrompt\n    maxTokens := request.MaxTokens\n    temperature := request.Temperature\n    \n    // Process with your LLM\n    response, err := h.callLLM(ctx, messages, systemPrompt, maxTokens, temperature)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;LLM call failed: %w&quot;, err)\n    }\n    \n    // Return MCP-formatted result\n    return &amp;mcp.CreateMessageResult{\n        Model: &quot;your-model-name&quot;,\n        Role:  mcp.RoleAssistant,\n        Content: mcp.TextContent{\n            Type: &quot;text&quot;,\n            Text: response,\n        },\n        StopReason: &quot;endTurn&quot;,\n    }, nil\n}\n \nfunc (h *MySamplingHandler) callLLM(ctx context.Context, messages []mcp.SamplingMessage, systemPrompt string, maxTokens int, temperature float64) (string, error) {\n    // Implement your LLM integration here\n    // This is where you&#x27;d call OpenAI, Anthropic, or other LLM APIs\n    return &quot;Your LLM response here&quot;, nil\n}\n","title":"Implementing a Sampling Handler","titles":["Sampling"]},"40":{"href":"/clients/advanced-sampling#configuring-the-client","html":"\n<p>Enable sampling by providing a handler when creating the client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create sampling handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    samplingHandler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create stdio transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    stdioTransport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/mcp/server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with sampling support</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stdioTransport, client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(samplingHandler))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to connect: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // The client will now automatically handle sampling requests</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // from the server using your handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nEnable sampling by providing a handler when creating the client:\nfunc main() {\n    // Create sampling handler\n    samplingHandler := &amp;MySamplingHandler{}\n    \n    // Create stdio transport\n    stdioTransport := transport.NewStdio(&quot;/path/to/mcp/server&quot;, nil)\n    \n    // Create client with sampling support\n    mcpClient := client.NewClient(stdioTransport, client.WithSamplingHandler(samplingHandler))\n    \n    // Start the client\n    ctx := context.Background()\n    if err := mcpClient.Start(ctx); err != nil {\n        log.Fatalf(&quot;Failed to start client: %v&quot;, err)\n    }\n    defer mcpClient.Close()\n    if err := mcpClient.Connect(ctx); err != nil {\n        log.Fatalf(&quot;Failed to connect: %v&quot;, err)\n    }\n    \n    // The client will now automatically handle sampling requests\n    // from the server using your handler\n}\n","title":"Configuring the Client","titles":["Sampling"]},"41":{"href":"/clients/advanced-sampling#mock-implementation-example","html":"\n<p>Here&#x27;s a complete mock implementation for testing:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MockSamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MockSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Log the request for debugging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Mock LLM received sampling request:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  System prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, request.SystemPrompt)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Max tokens: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, request.MaxTokens)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Temperature: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, request.Temperature)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract the user&#x27;s message</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, msg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleUser {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                userMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent.Text</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  User message: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userMessage)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate a mock response</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mockResponse </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Mock LLM response to: &#x27;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;. This is a simulated response from a mock LLM handler.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        userMessage,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mock-llm-v1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role:  mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text: mockResponse,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;endTurn&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.Args) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Usage: sampling_client &lt;server_path&gt;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    serverPath </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.Args[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create stdio transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    stdioTransport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(serverPath, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with mock sampling handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stdioTransport, client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MockSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to connect: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Test server tools that use sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;What is the capital of France?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful geography assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\\\</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">n&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete mock implementation for testing:\npackage main\n \nimport (\nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;strings&quot;\n    &quot;os&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\ntype MockSamplingHandler struct{}\n \nfunc (h *MockSamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Log the request for debugging\n    log.Printf(&quot;Mock LLM received sampling request:&quot;)\n    log.Printf(&quot;  System prompt: %s&quot;, request.SystemPrompt)\n    log.Printf(&quot;  Max tokens: %d&quot;, request.MaxTokens)\n    log.Printf(&quot;  Temperature: %f&quot;, request.Temperature)\n    \n    // Extract the user&#x27;s message\n    var userMessage string\n    for _, msg := range request.Messages {\n        if msg.Role == mcp.RoleUser {\n            if textContent, ok := msg.Content.(mcp.TextContent); ok {\n                userMessage = textContent.Text\n                log.Printf(&quot;  User message: %s&quot;, userMessage)\n                break\n            }\n        }\n    }\n    \n    // Generate a mock response\n    mockResponse := fmt.Sprintf(\n        &quot;Mock LLM response to: &#x27;%s&#x27;. This is a simulated response from a mock LLM handler.&quot;,\n        userMessage,\n    )\n    \n    return &amp;mcp.CreateMessageResult{\n        Model: &quot;mock-llm-v1&quot;,\n        Role:  mcp.RoleAssistant,\n        Content: mcp.TextContent{\n            Type: &quot;text&quot;,\n            Text: mockResponse,\n        },\n        StopReason: &quot;endTurn&quot;,\n    }, nil\n}\n \nfunc main() {\n    if len(os.Args) &lt; 2 {\n        log.Fatal(&quot;Usage: sampling_client &lt;server_path&gt;&quot;)\n    }\n    \n    serverPath := os.Args[1]\n    \n    // Create stdio transport\n    stdioTransport := transport.NewStdio(serverPath, nil)\n    \n    // Create client with mock sampling handler\n    mcpClient := client.NewClient(stdioTransport, client.WithSamplingHandler(&amp;MockSamplingHandler{}))\n    \n    // Start the client\n    ctx := context.Background()\n    if err := mcpClient.Start(ctx); err != nil {\n        log.Fatalf(&quot;Failed to start client: %v&quot;, err)\n    }\n    defer mcpClient.Close()\n    if err := mcpClient.Connect(ctx); err != nil {\n        log.Fatalf(&quot;Failed to connect: %v&quot;, err)\n    }\n    \n    // Test server tools that use sampling\n    result, err := mcpClient.CallTool(ctx, &quot;ask_llm&quot;, map[string]any{\n        &quot;question&quot;: &quot;What is the capital of France?&quot;,\n        &quot;system_prompt&quot;: &quot;You are a helpful geography assistant.&quot;,\n    })\n    if err != nil {\n        log.Fatalf(&quot;Tool call failed: %v&quot;, err)\n    }\n    \n    fmt.Printf(&quot;Tool result: %+v\\\\n&quot;, result)\n}\n","title":"Mock Implementation Example","titles":["Sampling"]},"42":{"href":"/clients/advanced-sampling#real-llm-integration","html":"\n","isPage":false,"text":"\n","title":"Real LLM Integration","titles":["Sampling"]},"43":{"href":"/clients/advanced-sampling#openai-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/sashabaranov/go-openai</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> OpenAISamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewOpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">apiKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: openai.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(apiKey),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert MCP messages to OpenAI format</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add system message if provided</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.SystemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role:    openai.ChatMessageRoleSystem,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: request.SystemPrompt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert MCP messages</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, msg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Role {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleUser:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> openai.ChatMessageRoleUser</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleAssistant:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> openai.ChatMessageRoleAssistant</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role:    role,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: textContent.Text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create OpenAI request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    req </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model:       openai.GPT3Dot5Turbo,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxTokens:   request.MaxTokens,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Temperature: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(request.Temperature),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call OpenAI API</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateChatCompletion</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;OpenAI API call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Choices) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no response from OpenAI&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    choice </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Choices[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert stop reason</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> choice.FinishReason {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stop&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;endTurn&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;length&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;maxTokens&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;other&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model: resp.Model,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role:  mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text: choice.Message.Content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: stopReason,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;github.com/sashabaranov/go-openai&quot;\n)\n \ntype OpenAISamplingHandler struct {\n    client *openai.Client\n}\n \nfunc NewOpenAISamplingHandler(apiKey string) *OpenAISamplingHandler {\n    return &amp;OpenAISamplingHandler{\n        client: openai.NewClient(apiKey),\n    }\n}\n \nfunc (h *OpenAISamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Convert MCP messages to OpenAI format\n    var messages []openai.ChatCompletionMessage\n    \n    // Add system message if provided\n    if request.SystemPrompt != &quot;&quot; {\n        messages = append(messages, openai.ChatCompletionMessage{\n            Role:    openai.ChatMessageRoleSystem,\n            Content: request.SystemPrompt,\n        })\n    }\n    \n    // Convert MCP messages\n    for _, msg := range request.Messages {\n        var role string\n        switch msg.Role {\n        case mcp.RoleUser:\n            role = openai.ChatMessageRoleUser\n        case mcp.RoleAssistant:\n            role = openai.ChatMessageRoleAssistant\n        }\n        \n        if textContent, ok := msg.Content.(mcp.TextContent); ok {\n            messages = append(messages, openai.ChatCompletionMessage{\n                Role:    role,\n                Content: textContent.Text,\n            })\n        }\n    }\n    \n    // Create OpenAI request\n    req := openai.ChatCompletionRequest{\n        Model:       openai.GPT3Dot5Turbo,\n        Messages:    messages,\n        MaxTokens:   request.MaxTokens,\n        Temperature: float32(request.Temperature),\n    }\n    \n    // Call OpenAI API\n    resp, err := h.client.CreateChatCompletion(ctx, req)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;OpenAI API call failed: %w&quot;, err)\n    }\n    \n    if len(resp.Choices) == 0 {\n        return nil, fmt.Errorf(&quot;no response from OpenAI&quot;)\n    }\n    \n    choice := resp.Choices[0]\n    \n    // Convert stop reason\n    var stopReason string\n    switch choice.FinishReason {\n    case &quot;stop&quot;:\n        stopReason = &quot;endTurn&quot;\n    case &quot;length&quot;:\n        stopReason = &quot;maxTokens&quot;\n    default:\n        stopReason = &quot;other&quot;\n    }\n    \n    return &amp;mcp.CreateMessageResult{\n        Model: resp.Model,\n        Role:  mcp.RoleAssistant,\n        Content: mcp.TextContent{\n            Type: &quot;text&quot;,\n            Text: choice.Message.Content,\n        },\n        StopReason: stopReason,\n    }, nil\n}\n","title":"OpenAI Integration","titles":["Sampling","Real LLM Integration"]},"44":{"href":"/clients/advanced-sampling#anthropic-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bytes</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AnthropicSamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    apiKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAnthropicSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">apiKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AnthropicSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AnthropicSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        apiKey: apiKey,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AnthropicSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert to Anthropic format</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    anthropicReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;model&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;claude-3-sonnet-20240229&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;max_tokens&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: request.MaxTokens,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;messages&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">convertMessages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(request.Messages),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.SystemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        anthropicReq[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.SystemPrompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Temperature </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        anthropicReq[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;temperature&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Temperature</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Make API call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reqBody, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(anthropicReq)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewRequestWithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;POST&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;https://api.anthropic.com/v1/messages&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, bytes.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewBuffer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(reqBody))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content-Type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x-api-key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, h.apiKey)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;anthropic-version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2023-06-01&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Do</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpReq)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Anthropic API call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Body.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> anthropicResp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;text&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;type&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`json:&quot;content&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;model&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;stop_reason&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewDecoder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Body).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Decode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">anthropicResp); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to decode Anthropic response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract text content</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> text </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> anthropicResp.Content {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Type </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            text </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Text</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model: anthropicResp.Model,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role:  mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text: text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: anthropicResp.StopReason,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AnthropicSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">convertMessages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">messages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, msg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;role&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msg.Role),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: textContent.Text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;bytes&quot;\n    &quot;encoding/json&quot;\n    &quot;net/http&quot;\n)\n \ntype AnthropicSamplingHandler struct {\n    apiKey string\n    client *http.Client\n}\n \nfunc NewAnthropicSamplingHandler(apiKey string) *AnthropicSamplingHandler {\n    return &amp;AnthropicSamplingHandler{\n        apiKey: apiKey,\n        client: &amp;http.Client{},\n    }\n}\n \nfunc (h *AnthropicSamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Convert to Anthropic format\n    anthropicReq := map[string]any{\n        &quot;model&quot;:      &quot;claude-3-sonnet-20240229&quot;,\n        &quot;max_tokens&quot;: request.MaxTokens,\n        &quot;messages&quot;:   h.convertMessages(request.Messages),\n    }\n    \n    if request.SystemPrompt != &quot;&quot; {\n        anthropicReq[&quot;system&quot;] = request.SystemPrompt\n    }\n    \n    if request.Temperature &gt; 0 {\n        anthropicReq[&quot;temperature&quot;] = request.Temperature\n    }\n    \n    // Make API call\n    reqBody, _ := json.Marshal(anthropicReq)\n    httpReq, _ := http.NewRequestWithContext(ctx, &quot;POST&quot;, \n        &quot;https://api.anthropic.com/v1/messages&quot;, bytes.NewBuffer(reqBody))\n    \n    httpReq.Header.Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n    httpReq.Header.Set(&quot;x-api-key&quot;, h.apiKey)\n    httpReq.Header.Set(&quot;anthropic-version&quot;, &quot;2023-06-01&quot;)\n    \n    resp, err := h.client.Do(httpReq)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;Anthropic API call failed: %w&quot;, err)\n    }\n    defer resp.Body.Close()\n    \n    var anthropicResp struct {\n        Content []struct {\n            Text string `json:&quot;text&quot;`\n            Type string `json:&quot;type&quot;`\n        } `json:&quot;content&quot;`\n        Model      string `json:&quot;model&quot;`\n        StopReason string `json:&quot;stop_reason&quot;`\n    }\n    \n    if err := json.NewDecoder(resp.Body).Decode(&amp;anthropicResp); err != nil {\n        return nil, fmt.Errorf(&quot;failed to decode Anthropic response: %w&quot;, err)\n    }\n    \n    // Extract text content\n    var text string\n    for _, content := range anthropicResp.Content {\n        if content.Type == &quot;text&quot; {\n            text += content.Text\n        }\n    }\n    \n    return &amp;mcp.CreateMessageResult{\n        Model: anthropicResp.Model,\n        Role:  mcp.RoleAssistant,\n        Content: mcp.TextContent{\n            Type: &quot;text&quot;,\n            Text: text,\n        },\n        StopReason: anthropicResp.StopReason,\n    }, nil\n}\n \nfunc (h *AnthropicSamplingHandler) convertMessages(messages []mcp.SamplingMessage) []map[string]any {\n    var result []map[string]any\n    for _, msg := range messages {\n        if textContent, ok := msg.Content.(mcp.TextContent); ok {\n            result = append(result, map[string]any{\n                &quot;role&quot;:    string(msg.Role),\n                &quot;content&quot;: textContent.Text,\n            })\n        }\n    }\n    return result\n}\n","title":"Anthropic Integration","titles":["Sampling","Real LLM Integration"]},"45":{"href":"/clients/advanced-sampling#automatic-capability-declaration","html":"\n<p>When you provide a sampling handler, the client automatically declares the sampling capability during initialization:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// This automatically adds sampling capability</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">stdioTransport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(serverPath, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stdioTransport, client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handler))</span></span></code></pre>\n<p>The client will include this in the initialization request:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;initialize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;protocolVersion&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;capabilities&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;sampling&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;clientInfo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nWhen you provide a sampling handler, the client automatically declares the sampling capability during initialization:\n// This automatically adds sampling capability\nstdioTransport := transport.NewStdio(serverPath, nil)\nmcpClient := client.NewClient(stdioTransport, client.WithSamplingHandler(handler))\nThe client will include this in the initialization request:\n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;method&quot;: &quot;initialize&quot;,\n  &quot;params&quot;: {\n    &quot;protocolVersion&quot;: &quot;2024-11-05&quot;,\n    &quot;capabilities&quot;: {\n      &quot;sampling&quot;: {}\n    },\n    &quot;clientInfo&quot;: {\n      &quot;name&quot;: &quot;your-client&quot;,\n      &quot;version&quot;: &quot;1.0.0&quot;\n    }\n  }\n}\n","title":"Automatic Capability Declaration","titles":["Sampling"]},"46":{"href":"/clients/advanced-sampling#error-handling","html":"\n<p>Handle errors gracefully in your sampling handler:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate request</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(request.Messages) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no messages provided&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check for context cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;request cancelled: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call LLM with error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    response, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callLLM</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, request)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Log error for debugging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Return appropriate error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit exceeded, please try again later&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM service unavailable: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> response, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHandle errors gracefully in your sampling handler:\nfunc (h *MySamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Validate request\n    if len(request.Messages) == 0 {\n        return nil, fmt.Errorf(&quot;no messages provided&quot;)\n    }\n    \n    // Check for context cancellation\n    if err := ctx.Err(); err != nil {\n        return nil, fmt.Errorf(&quot;request cancelled: %w&quot;, err)\n    }\n    \n    // Call LLM with error handling\n    response, err := h.callLLM(ctx, request)\n    if err != nil {\n        // Log error for debugging\n        log.Printf(&quot;LLM call failed: %v&quot;, err)\n        \n        // Return appropriate error\n        if strings.Contains(err.Error(), &quot;rate limit&quot;) {\n            return nil, fmt.Errorf(&quot;rate limit exceeded, please try again later&quot;)\n        }\n        return nil, fmt.Errorf(&quot;LLM service unavailable: %w&quot;, err)\n    }\n    \n    return response, nil\n}\n","title":"Error Handling","titles":["Sampling"]},"47":{"href":"/clients/advanced-sampling#best-practices","html":"\n<ol>\n<li><strong>Implement Proper Error Handling</strong>: Always handle LLM API errors gracefully</li>\n<li><strong>Respect Rate Limits</strong>: Implement rate limiting and backoff strategies</li>\n<li><strong>Validate Inputs</strong>: Check message content and parameters before processing</li>\n<li><strong>Use Context</strong>: Respect context cancellation and timeouts</li>\n<li><strong>Log Appropriately</strong>: Log requests for debugging but avoid logging sensitive data</li>\n<li><strong>Model Selection</strong>: Allow configuration of which LLM model to use</li>\n<li><strong>Content Filtering</strong>: Implement content filtering if required by your use case</li>\n</ol>\n","isPage":false,"text":"\n\nImplement Proper Error Handling: Always handle LLM API errors gracefully\nRespect Rate Limits: Implement rate limiting and backoff strategies\nValidate Inputs: Check message content and parameters before processing\nUse Context: Respect context cancellation and timeouts\nLog Appropriately: Log requests for debugging but avoid logging sensitive data\nModel Selection: Allow configuration of which LLM model to use\nContent Filtering: Implement content filtering if required by your use case\n\n","title":"Best Practices","titles":["Sampling"]},"48":{"href":"/clients/advanced-sampling#testing-your-implementation","html":"\n<p>Test your sampling handler with the sampling server example:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Build the sampling server</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> examples/sampling_server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -o</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> sampling_server</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Build your client</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -o</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> my_client</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Test the integration</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">./my_client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ./sampling_server</span></span></code></pre>\n","isPage":false,"text":"\nTest your sampling handler with the sampling server example:\n# Build the sampling server\ncd examples/sampling_server\ngo build -o sampling_server\n \n# Build your client\ngo build -o my_client\n \n# Test the integration\n./my_client ./sampling_server\n","title":"Testing Your Implementation","titles":["Sampling"]},"49":{"href":"/clients/advanced-sampling#transport-support","html":"\n<p>Sampling is available on the following transports:</p>\n","isPage":false,"text":"\nSampling is available on the following transports:\n","title":"Transport Support","titles":["Sampling"]},"50":{"href":"/clients/advanced-sampling#stdio-transport","html":"\n<p>For STDIO clients, create the transport and client separately:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">stdioTransport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stdioTransport, client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}))</span></span></code></pre>\n","isPage":false,"text":"\nFor STDIO clients, create the transport and client separately:\nstdioTransport := transport.NewStdio(&quot;/path/to/server&quot;, nil)\nmcpClient := client.NewClient(stdioTransport, client.WithSamplingHandler(&amp;MySamplingHandler{}))\n","title":"STDIO Transport","titles":["Sampling","Transport Support"]},"51":{"href":"/clients/advanced-sampling#in-process-transport","html":"\n<p>For in-process clients, use the dedicated constructor:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClientWithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer, </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>In-process sampling uses direct method calls instead of JSON-RPC serialization.</p>\n","isPage":false,"text":"\nFor in-process clients, use the dedicated constructor:\nmcpClient, err := client.NewInProcessClientWithSamplingHandler(\n    mcpServer, \n    &amp;MySamplingHandler{},\n)\nIn-process sampling uses direct method calls instead of JSON-RPC serialization.\n","title":"In-Process Transport","titles":["Sampling","Transport Support"]},"52":{"href":"/clients/advanced-sampling#unsupported-transports","html":"\n<p>SSE and StreamableHTTP transports do not support sampling due to their one-way or stateless nature.</p>\n","isPage":false,"text":"\nSSE and StreamableHTTP transports do not support sampling due to their one-way or stateless nature.\n","title":"Unsupported Transports","titles":["Sampling","Transport Support"]},"53":{"href":"/clients/advanced-sampling#next-steps","html":"\n<ul>\n<li>Learn about <a href=\"/servers/advanced-sampling\">server-side sampling implementation</a></li>\n<li>Explore <a href=\"/clients/operations\">client operations</a></li>\n<li>Check out the <a href=\"https://github.com/mark3labs/mcp-go/tree/main/examples/sampling_client\">sampling examples</a></li>\n<li>See <a href=\"/transports/inprocess\">in-process transport documentation</a> for embedded scenarios</li>\n</ul>","isPage":false,"text":"\n\nLearn about server-side sampling implementation\nExplore client operations\nCheck out the sampling examples\nSee in-process transport documentation for embedded scenarios\n","title":"Next Steps","titles":["Sampling"]},"54":{"href":"/clients/basics#client-basics","html":"</header>\n<p>Learn the fundamentals of creating and managing MCP clients, including lifecycle management, initialization, and error handling.</p>\n","isPage":true,"text":"\nLearn the fundamentals of creating and managing MCP clients, including lifecycle management, initialization, and error handling.\n","title":"Client Basics","titles":[]},"55":{"href":"/clients/basics#creating-clients","html":"\n<p>MCP-Go provides client constructors for each supported transport. The choice of transport determines how your client communicates with the server.</p>\n","isPage":false,"text":"\nMCP-Go provides client constructors for each supported transport. The choice of transport determines how your client communicates with the server.\n","title":"Creating Clients","titles":["Client Basics"]},"56":{"href":"/clients/basics#client-constructor-patterns","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// STDIO client - for command-line tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// StreamableHTTP client - for web services</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE client - for real-time web applications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// In-process client - for testing and embedded scenarios</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server)</span></span></code></pre>\n","isPage":false,"text":"\n// STDIO client - for command-line tools\nclient, err := client.NewStdioMCPClient(&quot;command&quot;, &quot;arg1&quot;, &quot;arg2&quot;)\n \n// StreamableHTTP client - for web services\nclient := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n \n// SSE client - for real-time web applications\nclient := client.NewSSEMCPClient(&quot;http://localhost:8080/mcp/sse&quot;)\n \n// In-process client - for testing and embedded scenarios\nclient := client.NewInProcessClient(server)\n","title":"Client Constructor Patterns","titles":["Client Basics","Creating Clients"]},"57":{"href":"/clients/basics#stdio-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">math</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client that spawns a subprocess</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create STDIO client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// With custom environment variables</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClientWithEnv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;LOG_LEVEL=debug&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;DATABASE_URL=sqlite://test.db&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, env, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create STDIO client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;math&quot;\n    &quot;net/http&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc createStdioClient() (client.Client, error) {\n    // Create client that spawns a subprocess\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{}, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to create STDIO client: %w&quot;, err)\n    }\n \n    return c, nil\n}\n \n// With custom environment variables\nfunc createStdioClientWithEnv() (client.Client, error) {\n    env := []string{\n        &quot;LOG_LEVEL=debug&quot;,\n        &quot;DATABASE_URL=sqlite://test.db&quot;,\n    }\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, env, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to create STDIO client: %w&quot;, err)\n    }\n \n    return c, nil\n}\n","title":"STDIO Client Creation","titles":["Client Basics","Creating Clients"]},"58":{"href":"/clients/basics#streamablehttp-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Basic StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\thttpTransport, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server.URL,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set custom headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;X-Custom-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;Y-Another-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;another-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t}),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// With custom HTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPBasicClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create StreamableHTTP transport: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpTransport)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createStreamableHTTPClient() client.Client {\n    // Basic StreamableHTTP client\n\thttpTransport, err := transport.NewStreamableHTTP(server.URL,\n\t\t// Set timeout\n\t\ttransport.WithHTTPTimeout(30*time.Second),\n\t\t// Set custom headers\n\t\ttransport.WithHTTPHeaders(map[string]string{\n\t\t\t&quot;X-Custom-Header&quot;: &quot;custom-value&quot;,\n\t\t\t&quot;Y-Another-Header&quot;: &quot;another-value&quot;,\n\t\t}),\n\t\t// With custom HTTP client\n\t\ttransport.WithHTTPBasicClient(&amp;http.Client{}),\n\t)\n    if err != nil {\n        log.Fatalf(&quot;Failed to create StreamableHTTP transport: %v&quot;, err)\n    }\n    c := client.NewClient(httpTransport)\n    return c\n}\n","title":"StreamableHTTP Client Creation","titles":["Client Basics","Creating Clients"]},"59":{"href":"/clients/basics#sse-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Basic SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tc, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(testServer.URL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set custom headers</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">\t\tWithHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;X-Custom-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;Y-Another-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;another-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createSSEClient() client.Client {\n    // Basic SSE client\n\tc, err := NewSSEMCPClient(testServer.URL+&quot;/sse&quot;,\n\t\t// Set custom headers\n\t\tWithHeaders(map[string]string{\n\t\t\t&quot;X-Custom-Header&quot;: &quot;custom-value&quot;,\n\t\t\t&quot;Y-Another-Header&quot;: &quot;another-value&quot;,\n\t\t}),\n\t)\n    return c\n}\n","title":"SSE Client Creation","titles":["Client Basics","Creating Clients"]},"60":{"href":"/clients/basics#client-lifecycle","html":"\n<p>Understanding the client lifecycle is crucial for proper resource management and error handling.</p>\n","isPage":false,"text":"\nUnderstanding the client lifecycle is crucial for proper resource management and error handling.\n","title":"Client Lifecycle","titles":["Client Basics"]},"61":{"href":"/clients/basics#lifecycle-stages","html":"\n<ol>\n<li><strong>Creation</strong> - Instantiate the client</li>\n<li><strong>Initialization</strong> - Establish connection and exchange capabilities</li>\n<li><strong>Operation</strong> - Use tools, resources, and prompts</li>\n<li><strong>Cleanup</strong> - Close connections and free resources</li>\n</ol>\n","isPage":false,"text":"\n\nCreation - Instantiate the client\nInitialization - Establish connection and exchange capabilities\nOperation - Use tools, resources, and prompts\nCleanup - Close connections and free resources\n\n","title":"Lifecycle Stages","titles":["Client Basics","Client Lifecycle"]},"62":{"href":"/clients/basics#complete-lifecycle-example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientLifecycle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 1. Creation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client creation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Ensure cleanup happens</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> closeErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); closeErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error closing client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, closeErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 2. Initialization</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 3. Operation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client operations failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 4. Cleanup (handled by defer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:      tool.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            continue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc demonstrateClientLifecycle() error {\n    // 1. Creation\n    c, err := client.NewSSEMCPClient(&quot;server-command&quot;)\n    if err != nil {\n        return fmt.Errorf(&quot;client creation failed: %w&quot;, err)\n    }\n \n    // Ensure cleanup happens\n    defer func() {\n        if closeErr := c.Close(); closeErr != nil {\n            log.Printf(&quot;Error closing client: %v&quot;, closeErr)\n        }\n    }()\n \n    ctx := context.Background()\n \n    // 2. Initialization\n    if err := c.Initialize(ctx); err != nil {\n        return fmt.Errorf(&quot;client initialization failed: %w&quot;, err)\n    }\n \n    // 3. Operation\n    if err := performClientOperations(ctx, c); err != nil {\n        return fmt.Errorf(&quot;client operations failed: %w&quot;, err)\n    }\n \n    // 4. Cleanup (handled by defer)\n    return nil\n}\n \nfunc performClientOperations(ctx context.Context, c client.Client) error {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return err\n    }\n \n    log.Printf(&quot;Found %d tools&quot;, len(tools.Tools))\n \n    // Use the tools\n    for _, tool := range tools.Tools {\n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name:      tool.Name,\n                Arguments: map[string]interface{}{\n                    &quot;input&quot;: &quot;example input&quot;,\n                    &quot;format&quot;: &quot;json&quot;,\n                },\n            },\n        })\n        if err != nil {\n            log.Printf(&quot;Tool %s failed: %v&quot;, tool.Name, err)\n            continue\n        }\n \n        log.Printf(&quot;Tool %s result: %+v&quot;, tool.Name, result)\n    }\n \n    return nil\n}\n","title":"Complete Lifecycle Example","titles":["Client Basics","Client Lifecycle"]},"63":{"href":"/clients/basics#initialization-process","html":"\n<p>The initialization process establishes the MCP connection and exchanges capabilities:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> initializeClientWithDetails</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize with custom client info</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Resources: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourcesCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Prompts:   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Application&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">InitializeWithRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initReq)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connected to server: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> v</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.ServerInfo.Name, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.ServerInfo.Version)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server capabilities: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Capabilities)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe initialization process establishes the MCP connection and exchanges capabilities:\nfunc initializeClientWithDetails(ctx context.Context, c client.Client) error {\n    // Initialize with custom client info\n    initReq := mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools:     &amp;mcp.ToolsCapability{},\n                Resources: &amp;mcp.ResourcesCapability{},\n                Prompts:   &amp;mcp.PromptsCapability{},\n            },\n            ClientInfo: mcp.ClientInfo{\n                Name:    &quot;My Application&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    }\n \n    result, err := c.InitializeWithRequest(ctx, initReq)\n    if err != nil {\n        return fmt.Errorf(&quot;initialization failed: %w&quot;, err)\n    }\n \n    log.Printf(&quot;Connected to server: %s v%s&quot;, \n        result.ServerInfo.Name, \n        result.ServerInfo.Version)\n    \n    log.Printf(&quot;Server capabilities: %+v&quot;, result.Capabilities)\n \n    return nil\n}\n","title":"Initialization Process","titles":["Client Basics","Client Lifecycle"]},"64":{"href":"/clients/basics#graceful-shutdown","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ManagedClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    done   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:    ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel: cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        done:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize in background</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mc.done)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WaitForReady</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">timeout</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.done:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(timeout):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client initialization timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for initialization to complete or timeout</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.done:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Timeout waiting for client shutdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ManagedClient struct {\n    client client.Client\n    ctx    context.Context\n    cancel context.CancelFunc\n    done   chan struct{}\n}\n \nfunc NewManagedClient(clientType, address string) (*ManagedClient, error) {\n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;stdio&quot;:\n        c, err = client.NewSSEMCPClient(&quot;server-command&quot;)\n    case &quot;streamablehttp&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return nil, fmt.Errorf(&quot;unknown client type: %s&quot;, clientType)\n    }\n \n    if err != nil {\n        return nil, err\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    mc := &amp;ManagedClient{\n        client: c,\n        ctx:    ctx,\n        cancel: cancel,\n        done:   make(chan struct{}),\n    }\n \n    // Initialize in background\n    go func() {\n        defer close(mc.done)\n        if err := c.Initialize(ctx); err != nil {\n            log.Printf(&quot;Client initialization failed: %v&quot;, err)\n        }\n    }()\n \n    return mc, nil\n}\n \nfunc (mc *ManagedClient) WaitForReady(timeout time.Duration) error {\n    select {\n    case &lt;-mc.done:\n        return nil\n    case &lt;-time.After(timeout):\n        return fmt.Errorf(&quot;client initialization timeout&quot;)\n    case &lt;-mc.ctx.Done():\n        return mc.ctx.Err()\n    }\n}\n \nfunc (mc *ManagedClient) Close() error {\n    mc.cancel()\n    \n    // Wait for initialization to complete or timeout\n    select {\n    case &lt;-mc.done:\n    case &lt;-time.After(5 * time.Second):\n        log.Println(&quot;Timeout waiting for client shutdown&quot;)\n    }\n \n    return mc.client.Close()\n}\n","title":"Graceful Shutdown","titles":["Client Basics","Client Lifecycle"]},"65":{"href":"/clients/basics#error-handling","html":"\n<p>Proper error handling is essential for robust client applications.</p>\n","isPage":false,"text":"\nProper error handling is essential for robust client applications.\n","title":"Error Handling","titles":["Client Basics"]},"66":{"href":"/clients/basics#error-types","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Connection errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionFailed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionLost   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection lost&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrTimeout          </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Protocol errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrInvalidResponse    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid response&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProtocolViolation  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;protocol violation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrUnsupportedVersion </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unsupported protocol version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Operation errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrToolNotFound       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrResourceNotFound   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrInvalidArguments   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrPermissionDenied   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;permission denied&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Connection errors\nvar (\n    ErrConnectionFailed = errors.New(&quot;connection failed&quot;)\n    ErrConnectionLost   = errors.New(&quot;connection lost&quot;)\n    ErrTimeout          = errors.New(&quot;operation timeout&quot;)\n)\n \n// Protocol errors\nvar (\n    ErrInvalidResponse    = errors.New(&quot;invalid response&quot;)\n    ErrProtocolViolation  = errors.New(&quot;protocol violation&quot;)\n    ErrUnsupportedVersion = errors.New(&quot;unsupported protocol version&quot;)\n)\n \n// Operation errors\nvar (\n    ErrToolNotFound       = errors.New(&quot;tool not found&quot;)\n    ErrResourceNotFound   = errors.New(&quot;resource not found&quot;)\n    ErrInvalidArguments   = errors.New(&quot;invalid arguments&quot;)\n    ErrPermissionDenied   = errors.New(&quot;permission denied&quot;)\n)\n","title":"Error Types","titles":["Client Basics","Error Handling"]},"67":{"href":"/clients/basics#comprehensive-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;param&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Connection errors - may be recoverable</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connection lost, attempting reconnect...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reconnectErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> reconnectClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c); reconnectErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnection failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, reconnectErr)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Retry the operation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrTimeout):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation timed out, retrying with longer timeout...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Protocol errors - usually not recoverable</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrProtocolViolation):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Protocol violation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrUnsupportedVersion):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unsupported protocol version: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Operation errors - check and fix request</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe list available tools and suggest alternatives</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            suggestAlternativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid arguments: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe get tool schema and show required parameters</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            showToolSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrPermissionDenied):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Permission denied: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe prompt for authentication</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Unknown errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process successful result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> reconnectClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Close existing connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error closing client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait before reconnecting</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Reinitialize</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> suggestAlternativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> showToolSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolName {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool schema for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Input schema: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.InputSchema)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleClientErrors(ctx context.Context, c client.Client) {\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;param&quot;: &quot;value&quot;,\n            },\n        },\n    })\n \n    if err != nil {\n        switch {\n        // Connection errors - may be recoverable\n        case errors.Is(err, client.ErrConnectionLost):\n            log.Println(&quot;Connection lost, attempting reconnect...&quot;)\n            if reconnectErr := reconnectClient(c); reconnectErr != nil {\n                log.Printf(&quot;Reconnection failed: %v&quot;, reconnectErr)\n                return\n            }\n            // Retry the operation\n            return handleClientErrors(ctx, c)\n \n        case errors.Is(err, client.ErrTimeout):\n            log.Println(&quot;Operation timed out, retrying with longer timeout...&quot;)\n            ctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n            defer cancel()\n            return handleClientErrors(ctx, c)\n \n        // Protocol errors - usually not recoverable\n        case errors.Is(err, client.ErrProtocolViolation):\n            log.Printf(&quot;Protocol violation: %v&quot;, err)\n            return\n \n        case errors.Is(err, client.ErrUnsupportedVersion):\n            log.Printf(&quot;Unsupported protocol version: %v&quot;, err)\n            return\n \n        // Operation errors - check and fix request\n        case errors.Is(err, client.ErrToolNotFound):\n            log.Printf(&quot;Tool not found: %v&quot;, err)\n            // Maybe list available tools and suggest alternatives\n            suggestAlternativeTools(ctx, c)\n            return\n \n        case errors.Is(err, client.ErrInvalidArguments):\n            log.Printf(&quot;Invalid arguments: %v&quot;, err)\n            // Maybe get tool schema and show required parameters\n            showToolSchema(ctx, c, &quot;example_tool&quot;)\n            return\n \n        case errors.Is(err, client.ErrPermissionDenied):\n            log.Printf(&quot;Permission denied: %v&quot;, err)\n            // Maybe prompt for authentication\n            return\n \n        // Unknown errors\n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n            return\n        }\n    }\n \n    // Process successful result\n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n \nfunc reconnectClient(c client.Client) error {\n    // Close existing connection\n    if err := c.Close(); err != nil {\n        log.Printf(&quot;Error closing client: %v&quot;, err)\n    }\n \n    // Wait before reconnecting\n    time.Sleep(1 * time.Second)\n \n    // Reinitialize\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    return c.Initialize(ctx)\n}\n \nfunc suggestAlternativeTools(ctx context.Context, c client.Client) {\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    log.Println(&quot;Available tools:&quot;)\n    for _, tool := range tools.Tools {\n        log.Printf(&quot;- %s: %s&quot;, tool.Name, tool.Description)\n    }\n}\n \nfunc showToolSchema(ctx context.Context, c client.Client, toolName string) {\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    for _, tool := range tools.Tools {\n        if tool.Name == toolName {\n            log.Printf(&quot;Tool schema for %s:&quot;, toolName)\n            log.Printf(&quot;Description: %s&quot;, tool.Description)\n            log.Printf(&quot;Input schema: %+v&quot;, tool.InputSchema)\n            return\n        }\n    }\n \n    log.Printf(&quot;Tool %s not found&quot;, toolName)\n}\n","title":"Comprehensive Error Handling","titles":["Client Basics","Error Handling"]},"68":{"href":"/clients/basics#retry-logic-with-exponential-backoff","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MaxRetries      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    InitialDelay    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MaxDelay        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    BackoffFactor   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RetryableErrors []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> DefaultRetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxRetries:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        InitialDelay:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxDelay:      </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BackoffFactor: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RetryableErrors: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrConnectionLost,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrTimeout,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrConnectionFailed,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsRetryable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, retryableErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.RetryableErrors {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, retryableErr) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> WithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">T</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">config</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">operation</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxRetries; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> operation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry non-retryable errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsRetryable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry on last attempt</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxRetries {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Calculate delay with exponential backoff</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.InitialDelay) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> math.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BackoffFactor, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempt)))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxDelay {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxDelay</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed, retrying in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, delay, err)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Wait with context cancellation support</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(delay):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed after </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> attempts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, config.MaxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, lastErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> DefaultRetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> WithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, config, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype RetryConfig struct {\n    MaxRetries      int\n    InitialDelay    time.Duration\n    MaxDelay        time.Duration\n    BackoffFactor   float64\n    RetryableErrors []error\n}\n \nfunc DefaultRetryConfig() RetryConfig {\n    return RetryConfig{\n        MaxRetries:    3,\n        InitialDelay:  1 * time.Second,\n        MaxDelay:      30 * time.Second,\n        BackoffFactor: 2.0,\n        RetryableErrors: []error{\n            client.ErrConnectionLost,\n            client.ErrTimeout,\n            client.ErrConnectionFailed,\n        },\n    }\n}\n \nfunc (rc RetryConfig) IsRetryable(err error) bool {\n    for _, retryableErr := range rc.RetryableErrors {\n        if errors.Is(err, retryableErr) {\n            return true\n        }\n    }\n    return false\n}\n \nfunc WithRetry[T any](ctx context.Context, config RetryConfig, operation func() (T, error)) (T, error) {\n    var lastErr error\n    var zero T\n \n    for attempt := 0; attempt &lt;= config.MaxRetries; attempt++ {\n        result, err := operation()\n        if err == nil {\n            return result, nil\n        }\n \n        lastErr = err\n \n        // Don&#x27;t retry non-retryable errors\n        if !config.IsRetryable(err) {\n            break\n        }\n \n        // Don&#x27;t retry on last attempt\n        if attempt == config.MaxRetries {\n            break\n        }\n \n        // Calculate delay with exponential backoff\n        delay := time.Duration(float64(config.InitialDelay) * math.Pow(config.BackoffFactor, float64(attempt)))\n        if delay &gt; config.MaxDelay {\n            delay = config.MaxDelay\n        }\n \n        log.Printf(&quot;Attempt %d failed, retrying in %v: %v&quot;, attempt+1, delay, err)\n \n        // Wait with context cancellation support\n        select {\n        case &lt;-time.After(delay):\n        case &lt;-ctx.Done():\n            return zero, ctx.Err()\n        }\n    }\n \n    return zero, fmt.Errorf(&quot;failed after %d attempts: %w&quot;, config.MaxRetries+1, lastErr)\n}\n \n// Usage example\nfunc callToolWithRetry(ctx context.Context, c client.Client, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    config := DefaultRetryConfig()\n    \n    return WithRetry(ctx, config, func() (*mcp.CallToolResult, error) {\n        return c.CallTool(ctx, req)\n    })\n}\n","title":"Retry Logic with Exponential Backoff","titles":["Client Basics","Error Handling"]},"69":{"href":"/clients/basics#context-and-timeout-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateContextUsage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Operation with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;long_running_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// seconds</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool completed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateCancellation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start operation in goroutine</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;long_running_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.Canceled) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call was cancelled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool completed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cancel after 5 seconds</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait a bit to see the cancellation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc demonstrateContextUsage(c client.Client) {\n    // Operation with timeout\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;long_running_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;duration&quot;: 60, // seconds\n            },\n        },\n    })\n \n    if err != nil {\n        if errors.Is(err, context.DeadlineExceeded) {\n            log.Println(&quot;Tool call timed out&quot;)\n        } else {\n            log.Printf(&quot;Tool call failed: %v&quot;, err)\n        }\n        return\n    }\n \n    log.Printf(&quot;Tool completed: %+v&quot;, result)\n}\n \nfunc demonstrateCancellation(c client.Client) {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    // Start operation in goroutine\n    go func() {\n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name: &quot;long_running_tool&quot;,\n            },\n        })\n \n        if err != nil {\n            if errors.Is(err, context.Canceled) {\n                log.Println(&quot;Tool call was cancelled&quot;)\n            } else {\n                log.Printf(&quot;Tool call failed: %v&quot;, err)\n            }\n            return\n        }\n \n        log.Printf(&quot;Tool completed: %+v&quot;, result)\n    }()\n \n    // Cancel after 5 seconds\n    time.Sleep(5 * time.Second)\n    cancel()\n    \n    // Wait a bit to see the cancellation\n    time.Sleep(1 * time.Second)\n}\n","title":"Context and Timeout Management","titles":["Client Basics","Error Handling"]},"70":{"href":"/clients/basics#connection-monitoring","html":"\n","isPage":false,"text":"\n","title":"Connection Monitoring","titles":["Client Basics"]},"71":{"href":"/clients/basics#health-checks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ClientHealthMonitor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    interval </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeout  </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    healthy  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">interval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">timeout</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:   c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        interval: interval,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeout:  timeout,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        healthy:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ticker </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(chm.interval)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ticker.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ticker.C:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            chm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">checkHealth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">checkHealth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, chm.timeout)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Try to list tools as a health check</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.healthy </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Health check failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsHealthy</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.healthy</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ClientHealthMonitor struct {\n    client   client.Client\n    interval time.Duration\n    timeout  time.Duration\n    healthy  bool\n    mutex    sync.RWMutex\n}\n \nfunc NewClientHealthMonitor(c client.Client, interval, timeout time.Duration) *ClientHealthMonitor {\n    return &amp;ClientHealthMonitor{\n        client:   c,\n        interval: interval,\n        timeout:  timeout,\n        healthy:  false,\n    }\n}\n \nfunc (chm *ClientHealthMonitor) Start(ctx context.Context) {\n    ticker := time.NewTicker(chm.interval)\n    defer ticker.Stop()\n \n    for {\n        select {\n        case &lt;-ctx.Done():\n            return\n        case &lt;-ticker.C:\n            chm.checkHealth(ctx)\n        }\n    }\n}\n \nfunc (chm *ClientHealthMonitor) checkHealth(ctx context.Context) {\n    ctx, cancel := context.WithTimeout(ctx, chm.timeout)\n    defer cancel()\n \n    // Try to list tools as a health check\n    _, err := chm.client.ListTools(ctx)\n    \n    chm.mutex.Lock()\n    chm.healthy = (err == nil)\n    chm.mutex.Unlock()\n \n    if err != nil {\n        log.Printf(&quot;Health check failed: %v&quot;, err)\n    }\n}\n \nfunc (chm *ClientHealthMonitor) IsHealthy() bool {\n    chm.mutex.RLock()\n    defer chm.mutex.RUnlock()\n    return chm.healthy\n}\n","title":"Health Checks","titles":["Client Basics","Connection Monitoring"]},"72":{"href":"/clients/basics#connection-recovery","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResilientClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">factory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        factory: factory,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rc.recovering {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Double-check after acquiring write lock</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rc.recovering {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() { rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Close existing client if any</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    newClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize new client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> newClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        newClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> newClient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Mark for recovery and retry once</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> retryErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); retryErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recovery failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, retryErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionFailed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResilientClient struct {\n    factory    func() (client.Client, error)\n    client     client.Client\n    mutex      sync.RWMutex\n    recovering bool\n}\n \nfunc NewResilientClient(factory func() (client.Client, error)) *ResilientClient {\n    return &amp;ResilientClient{\n        factory: factory,\n    }\n}\n \nfunc (rc *ResilientClient) ensureConnected(ctx context.Context) error {\n    rc.mutex.RLock()\n    if rc.client != nil &amp;&amp; !rc.recovering {\n        rc.mutex.RUnlock()\n        return nil\n    }\n    rc.mutex.RUnlock()\n \n    rc.mutex.Lock()\n    defer rc.mutex.Unlock()\n \n    // Double-check after acquiring write lock\n    if rc.client != nil &amp;&amp; !rc.recovering {\n        return nil\n    }\n \n    rc.recovering = true\n    defer func() { rc.recovering = false }()\n \n    // Close existing client if any\n    if rc.client != nil {\n        rc.client.Close()\n    }\n \n    // Create new client\n    newClient, err := rc.factory()\n    if err != nil {\n        return fmt.Errorf(&quot;failed to create client: %w&quot;, err)\n    }\n \n    // Initialize new client\n    if err := newClient.Initialize(ctx); err != nil {\n        newClient.Close()\n        return fmt.Errorf(&quot;failed to initialize client: %w&quot;, err)\n    }\n \n    rc.client = newClient\n    return nil\n}\n \nfunc (rc *ResilientClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    if err := rc.ensureConnected(ctx); err != nil {\n        return nil, err\n    }\n \n    rc.mutex.RLock()\n    client := rc.client\n    rc.mutex.RUnlock()\n \n    result, err := client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isConnectionError(err) {\n        // Mark for recovery and retry once\n        rc.mutex.Lock()\n        rc.recovering = true\n        rc.mutex.Unlock()\n \n        if retryErr := rc.ensureConnected(ctx); retryErr != nil {\n            return nil, fmt.Errorf(&quot;recovery failed: %w&quot;, retryErr)\n        }\n \n        rc.mutex.RLock()\n        client = rc.client\n        rc.mutex.RUnlock()\n \n        return client.CallTool(ctx, req)\n    }\n \n    return result, err\n}\n \nfunc isConnectionError(err error) bool {\n    return errors.Is(err, client.ErrConnectionLost) ||\n           errors.Is(err, client.ErrConnectionFailed)\n}\n","title":"Connection Recovery","titles":["Client Basics","Connection Monitoring"]},"73":{"href":"/clients/basics#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Learn to use tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Explore transport-specific features</li>\n</ul>","isPage":false,"text":"\n\nClient Operations - Learn to use tools, resources, and prompts\nClient Transports - Explore transport-specific features\n","title":"Next Steps","titles":["Client Basics"]},"74":{"href":"/clients#building-mcp-clients","html":"</header>\n<p>Learn how to build MCP clients that connect to and interact with MCP servers. This section covers client creation, operations, and transport-specific implementations.</p>\n","isPage":true,"text":"\nLearn how to build MCP clients that connect to and interact with MCP servers. This section covers client creation, operations, and transport-specific implementations.\n","title":"Building MCP Clients","titles":[]},"75":{"href":"/clients#overview","html":"\n<p>MCP clients connect to servers to access tools, resources, and prompts. MCP-Go provides client implementations for all supported transports, making it easy to integrate MCP functionality into your applications.</p>\n","isPage":false,"text":"\nMCP clients connect to servers to access tools, resources, and prompts. MCP-Go provides client implementations for all supported transports, making it easy to integrate MCP functionality into your applications.\n","title":"Overview","titles":["Building MCP Clients"]},"76":{"href":"/clients#what-youll-learn","html":"\n<ul>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Creating and managing client lifecycle</li>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Using tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Transport-specific client implementations</li>\n</ul>\n","isPage":false,"text":"\n\nClient Basics - Creating and managing client lifecycle\nClient Operations - Using tools, resources, and prompts\nClient Transports - Transport-specific client implementations\n\n","title":"What You&#x27;ll Learn","titles":["Building MCP Clients"]},"77":{"href":"/clients#quick-example","html":"\n<p>Here&#x27;s a complete example showing how to create and use an MCP client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} , </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Discover available capabilities</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Available resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool if available</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Calling tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name: tool.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read a resource if available</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Reading resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI: resource.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource read failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource content: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete example showing how to create and use an MCP client:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    // Create STDIO client\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{} , &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize the connection\n    if err := c.Initialize(ctx, initRequest); err != nil {\n        log.Fatal(err)\n    }\n \n    // Discover available capabilities\n    if err := demonstrateClientOperations(ctx, c); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc demonstrateClientOperations(ctx context.Context, c client.Client) error {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list tools: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;Available tools: %d\\n&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n    }\n \n    // List available resources\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list resources: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;\\nAvailable resources: %d\\n&quot;, len(resources.Resources))\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, resource.URI, resource.Name)\n    }\n \n    // Call a tool if available\n    if len(tools.Tools) &gt; 0 {\n        tool := tools.Tools[0]\n        fmt.Printf(&quot;\\nCalling tool: %s\\n&quot;, tool.Name)\n \n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name: tool.Name,\n                Arguments: map[string]interface{}{\n                    &quot;input&quot;: &quot;example input&quot;,\n                    &quot;format&quot;: &quot;text&quot;,\n                },\n            },\n        })\n        if err != nil {\n            return fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n        }\n \n        fmt.Printf(&quot;Tool result: %+v\\n&quot;, result)\n    }\n \n    // Read a resource if available\n    if len(resources.Resources) &gt; 0 {\n        resource := resources.Resources[0]\n        fmt.Printf(&quot;\\nReading resource: %s\\n&quot;, resource.URI)\n \n        content, err := c.ReadResource(ctx, mcp.ReadResourceRequest{\n            Params: mcp.ReadResourceRequestParams{\n                URI: resource.URI,\n            },\n        })\n        if err != nil {\n            return fmt.Errorf(&quot;resource read failed: %w&quot;, err)\n        }\n \n        fmt.Printf(&quot;Resource content: %+v\\n&quot;, content)\n    }\n \n    return nil\n}\n","title":"Quick Example","titles":["Building MCP Clients"]},"78":{"href":"/clients#client-types-by-transport","html":"\n","isPage":false,"text":"\n","title":"Client Types by Transport","titles":["Building MCP Clients"]},"79":{"href":"/clients#stdio-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Command-line applications</li>\n<li>Desktop software integration</li>\n<li>Local development and testing</li>\n<li>Single-server connections</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nCommand-line applications\nDesktop software integration\nLocal development and testing\nSingle-server connections\n\n// Create STDIO client\nclient, err := client.NewStdioMCPClient(&quot;server-command&quot;, &quot;arg1&quot;, &quot;arg2&quot;)\n","title":"STDIO Client","titles":["Building MCP Clients","Client Types by Transport"]},"80":{"href":"/clients#streamablehttp-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Web applications</li>\n<li>Microservice architectures</li>\n<li>Load-balanced deployments</li>\n<li>REST-like interactions</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nWeb applications\nMicroservice architectures\nLoad-balanced deployments\nREST-like interactions\n\n// Create StreamableHTTP client\nclient := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n","title":"StreamableHTTP Client","titles":["Building MCP Clients","Client Types by Transport"]},"81":{"href":"/clients#sse-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Real-time web applications</li>\n<li>Browser-based interfaces</li>\n<li>Streaming data scenarios</li>\n<li>Multi-client environments</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nReal-time web applications\nBrowser-based interfaces\nStreaming data scenarios\nMulti-client environments\n\n// Create SSE client\nclient := client.NewSSEMCPClient(&quot;http://localhost:8080/mcp/sse&quot;)\n","title":"SSE Client","titles":["Building MCP Clients","Client Types by Transport"]},"82":{"href":"/clients#in-process-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Testing and development</li>\n<li>Embedded scenarios</li>\n<li>High-performance applications</li>\n<li>Library integrations</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nTesting and development\nEmbedded scenarios\nHigh-performance applications\nLibrary integrations\n\n// Create in-process client\nclient := client.NewInProcessClient(server)\n","title":"In-Process Client","titles":["Building MCP Clients","Client Types by Transport"]},"83":{"href":"/clients#common-client-patterns","html":"\n","isPage":false,"text":"\n","title":"Common Client Patterns","titles":["Building MCP Clients"]},"84":{"href":"/clients#connection-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MCPClientManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewMCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    manager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:    ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel: cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> manager, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;context&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \ntype MCPClientManager struct {\n    client client.Client\n    ctx    context.Context\n    cancel context.CancelFunc\n}\n \nfunc NewMCPClientManager(clientType, address string) (*MCPClientManager, error) {\n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;stdio&quot;:\n        c, err = client.NewStdioMCPClient(&quot;server-command&quot;)\n    case &quot;http&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return nil, fmt.Errorf(&quot;unknown client type: %s&quot;, clientType)\n    }\n \n    if err != nil {\n        return nil, err\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    manager := &amp;MCPClientManager{\n        client: c,\n        ctx:    ctx,\n        cancel: cancel,\n    }\n \n    // Initialize connection\n    if err := c.Initialize(ctx); err != nil {\n        cancel()\n        return nil, fmt.Errorf(&quot;failed to initialize client: %w&quot;, err)\n    }\n \n    return manager, nil\n}\n \nfunc (m *MCPClientManager) Close() error {\n    m.cancel()\n    return m.client.Close()\n}\n","title":"Connection Management","titles":["Building MCP Clients","Common Client Patterns"]},"85":{"href":"/clients#error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Tool call with error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;param&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connection lost, attempting reconnect...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Implement reconnection logic</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid arguments: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process successful result</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    processToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleClientErrors(ctx context.Context, c client.Client) {\n    // Tool call with error handling\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;param&quot;: &quot;value&quot;,\n            },\n        },\n    })\n \n    if err != nil {\n        switch {\n        case errors.Is(err, client.ErrConnectionLost):\n            log.Println(&quot;Connection lost, attempting reconnect...&quot;)\n            // Implement reconnection logic\n        case errors.Is(err, client.ErrToolNotFound):\n            log.Printf(&quot;Tool not found: %v&quot;, err)\n        case errors.Is(err, client.ErrInvalidArguments):\n            log.Printf(&quot;Invalid arguments: %v&quot;, err)\n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n        }\n        return\n    }\n \n    // Process successful result\n    processToolResult(result)\n}\n","title":"Error Handling","titles":["Building MCP Clients","Common Client Patterns"]},"86":{"href":"/clients#retry-logic","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxRetries; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry certain errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Exponential backoff</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxRetries {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            backoff </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">attempt) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed, retrying in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, backoff, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(backoff):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed after </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> attempts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, maxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, lastErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc callToolWithRetry(ctx context.Context, c client.Client, req mcp.CallToolRequest, maxRetries int) (*mcp.CallToolResult, error) {\n    var lastErr error\n \n    for attempt := 0; attempt &lt;= maxRetries; attempt++ {\n        result, err := c.CallTool(ctx, req)\n        if err == nil {\n            return result, nil\n        }\n \n        lastErr = err\n \n        // Don&#x27;t retry certain errors\n        if errors.Is(err, client.ErrInvalidArguments) ||\n           errors.Is(err, client.ErrToolNotFound) {\n            break\n        }\n \n        // Exponential backoff\n        if attempt &lt; maxRetries {\n            backoff := time.Duration(1&lt;&lt;attempt) * time.Second\n            log.Printf(&quot;Attempt %d failed, retrying in %v: %v&quot;, attempt+1, backoff, err)\n            \n            select {\n            case &lt;-time.After(backoff):\n            case &lt;-ctx.Done():\n                return nil, ctx.Err()\n            }\n        }\n    }\n \n    return nil, fmt.Errorf(&quot;failed after %d attempts: %w&quot;, maxRetries+1, lastErr)\n}\n","title":"Retry Logic","titles":["Building MCP Clients","Common Client Patterns"]},"87":{"href":"/clients#integration-patterns","html":"\n","isPage":false,"text":"\n","title":"Integration Patterns","titles":["Building MCP Clients"]},"88":{"href":"/clients#llm-application-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> LLMApplication</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    llmClient </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mcpAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpAddress)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcpClient: mcpClient,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        llmClient: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewLLMClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessUserQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get available tools for the LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send query to LLM with available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    response, toolCalls, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.llmClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Chat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, tools.Tools)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute any tool calls</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, toolCall </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolCalls {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:      toolCall.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: toolCall.Arguments,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send tool result back to LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        response, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.llmClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ContinueWithToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, toolCall.ID, result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> response, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype LLMApplication struct {\n    mcpClient client.Client\n    llmClient LLMClient\n}\n \nfunc NewLLMApplication(mcpAddress string) (*LLMApplication, error) {\n    mcpClient := client.NewStreamableHttpClient(mcpAddress)\n    \n    ctx := context.Background()\n    if err := mcpClient.Initialize(ctx); err != nil {\n        return nil, err\n    }\n \n    return &amp;LLMApplication{\n        mcpClient: mcpClient,\n        llmClient: NewLLMClient(),\n    }, nil\n}\n \nfunc (app *LLMApplication) ProcessUserQuery(ctx context.Context, query string) (string, error) {\n    // Get available tools for the LLM\n    tools, err := app.mcpClient.ListTools(ctx)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    // Send query to LLM with available tools\n    response, toolCalls, err := app.llmClient.Chat(ctx, query, tools.Tools)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    // Execute any tool calls\n    for _, toolCall := range toolCalls {\n        result, err := app.mcpClient.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name:      toolCall.Name,\n                Arguments: toolCall.Arguments,\n            },\n        })\n        if err != nil {\n            return &quot;&quot;, fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n        }\n \n        // Send tool result back to LLM\n        response, err = app.llmClient.ContinueWithToolResult(ctx, toolCall.ID, result)\n        if err != nil {\n            return &quot;&quot;, err\n        }\n    }\n \n    return response, nil\n}\n","title":"LLM Application Integration","titles":["Building MCP Clients","Integration Patterns"]},"89":{"href":"/clients#multi-server-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MultiServerClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewMultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        clients: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unsupported client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.clients[name] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">serverName</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.clients[serverName]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, serverName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetAllTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> serverName, c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.clients {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to get tools from </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, serverName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        allTools[serverName] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> allTools, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype MultiServerClient struct {\n    clients map[string]client.Client\n    mutex   sync.RWMutex\n}\n \nfunc NewMultiServerClient() *MultiServerClient {\n    return &amp;MultiServerClient{\n        clients: make(map[string]client.Client),\n    }\n}\n \nfunc (msc *MultiServerClient) AddServer(name, address string, clientType string) error {\n    msc.mutex.Lock()\n    defer msc.mutex.Unlock()\n \n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;http&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return fmt.Errorf(&quot;unsupported client type: %s&quot;, clientType)\n    }\n \n    ctx := context.Background()\n    if err := c.Initialize(ctx); err != nil {\n        return fmt.Errorf(&quot;failed to initialize client for %s: %w&quot;, name, err)\n    }\n \n    msc.clients[name] = c\n    return nil\n}\n \nfunc (msc *MultiServerClient) CallTool(ctx context.Context, serverName, toolName string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    msc.mutex.RLock()\n    c, exists := msc.clients[serverName]\n    msc.mutex.RUnlock()\n \n    if !exists {\n        return nil, fmt.Errorf(&quot;server not found: %s&quot;, serverName)\n    }\n \n    return c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      toolName,\n            Arguments: args,\n        },\n    })\n}\n \nfunc (msc *MultiServerClient) GetAllTools(ctx context.Context) (map[string][]mcp.Tool, error) {\n    msc.mutex.RLock()\n    defer msc.mutex.RUnlock()\n \n    allTools := make(map[string][]mcp.Tool)\n \n    for serverName, c := range msc.clients {\n        tools, err := c.ListTools(ctx)\n        if err != nil {\n            return nil, fmt.Errorf(&quot;failed to get tools from %s: %w&quot;, serverName, err)\n        }\n        allTools[serverName] = tools.Tools\n    }\n \n    return allTools, nil\n}\n","title":"Multi-Server Client","titles":["Building MCP Clients","Integration Patterns"]},"90":{"href":"/clients#next-steps","html":"\n<p>Explore each client topic in detail:</p>\n<ul>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Client lifecycle and error handling</li>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Transport-specific implementations</li>\n</ul>","isPage":false,"text":"\nExplore each client topic in detail:\n\nClient Basics - Client lifecycle and error handling\nClient Operations - Tools, resources, and prompts\nClient Transports - Transport-specific implementations\n","title":"Next Steps","titles":["Building MCP Clients"]},"91":{"href":"/clients/operations#client-operations","html":"</header>\n<p>Learn how to use MCP clients to interact with servers through tools, resources, prompts, and subscriptions.</p>\n","isPage":true,"text":"\nLearn how to use MCP clients to interact with servers through tools, resources, prompts, and subscriptions.\n","title":"Client Operations","titles":[]},"92":{"href":"/clients/operations#listing-resources","html":"\n<p>Resources provide read-only access to data. Before reading resources, you typically need to discover what&#x27;s available.</p>\n","isPage":false,"text":"\nResources provide read-only access to data. Before reading resources, you typically need to discover what&#x27;s available.\n","title":"Listing Resources","titles":["Client Operations"]},"93":{"href":"/clients/operations#basic-resource-listing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">base64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reflect</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">regexp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List all available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.URI, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.MIMEType, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resource.Description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;base64&quot;\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;reflect&quot;\n    &quot;regexp&quot;\n    &quot;strings&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc listResources(ctx context.Context, c client.Client) error {\n    // List all available resources\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list resources: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;Available resources: %d\\n&quot;, len(resources.Resources))\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;- %s (%s): %s\\n&quot;, \n            resource.URI, \n            resource.MIMEType, \n            resource.Name)\n        \n        if resource.Description != &quot;&quot; {\n            fmt.Printf(&quot;  Description: %s\\n&quot;, resource.Description)\n        }\n    }\n \n    return nil\n}\n","title":"Basic Resource Listing","titles":["Client Operations","Listing Resources"]},"94":{"href":"/clients/operations#filtered-resource-listing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mimeType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resource.MIMEType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mimeType {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByPattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pattern</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    regex, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regexp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Compile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(pattern)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid pattern: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MatchString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resource.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateResourceFiltering</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Find all JSON resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonResources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error listing JSON resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON resources</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonResources))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Find all user-related resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userResources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByPattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`users?://.*`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error listing user resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> user resources</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userResources))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc listResourcesByType(ctx context.Context, c client.Client, mimeType string) ([]mcp.Resource, error) {\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return nil, err\n    }\n \n    var filtered []mcp.Resource\n    for _, resource := range resources.Resources {\n        if resource.MIMEType == mimeType {\n            filtered = append(filtered, resource)\n        }\n    }\n \n    return filtered, nil\n}\n \nfunc listResourcesByPattern(ctx context.Context, c client.Client, pattern string) ([]mcp.Resource, error) {\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return nil, err\n    }\n \n    regex, err := regexp.Compile(pattern)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;invalid pattern: %w&quot;, err)\n    }\n \n    var filtered []mcp.Resource\n    for _, resource := range resources.Resources {\n        if regex.MatchString(resource.URI) {\n            filtered = append(filtered, resource)\n        }\n    }\n \n    return filtered, nil\n}\n \n// Usage examples\nfunc demonstrateResourceFiltering(ctx context.Context, c client.Client) {\n    // Find all JSON resources\n    jsonResources, err := listResourcesByType(ctx, c, &quot;application/json&quot;)\n    if err != nil {\n        log.Printf(&quot;Error listing JSON resources: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Found %d JSON resources\\n&quot;, len(jsonResources))\n    }\n \n    // Find all user-related resources\n    userResources, err := listResourcesByPattern(ctx, c, `users?://.*`)\n    if err != nil {\n        log.Printf(&quot;Error listing user resources: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Found %d user resources\\n&quot;, len(userResources))\n    }\n}\n","title":"Filtered Resource Listing","titles":["Client Operations","Listing Resources"]},"95":{"href":"/clients/operations#reading-resources","html":"\n<p>Once you know what resources are available, you can read their content.</p>\n","isPage":false,"text":"\nOnce you know what resources are available, you can read their content.\n","title":"Reading Resources","titles":["Client Operations"]},"96":{"href":"/clients/operations#basic-resource-reading","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI: uri,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateResourceReading</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List resources first</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read each resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Reading resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, resource.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to read resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            continue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Process resource contents</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  URI: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  MIME Type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Text </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Text: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">truncateString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Blob </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Blob: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> bytes</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Blob))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> truncateString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxLen</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxLen {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s[:maxLen] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;...&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc readResource(ctx context.Context, c client.Client, uri string) (*mcp.ReadResourceResult, error) {\n    result, err := c.ReadResource(ctx, mcp.ReadResourceRequest{\n        Params: mcp.ReadResourceRequestParams{\n            URI: uri,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read resource %s: %w&quot;, uri, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstrateResourceReading(ctx context.Context, c client.Client) {\n    // List resources first\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list resources: %v&quot;, err)\n        return\n    }\n \n    // Read each resource\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;\\nReading resource: %s\\n&quot;, resource.URI)\n        \n        result, err := readResource(ctx, c, resource.URI)\n        if err != nil {\n            log.Printf(&quot;Failed to read resource %s: %v&quot;, resource.URI, err)\n            continue\n        }\n \n        // Process resource contents\n        for i, content := range result.Contents {\n            fmt.Printf(&quot;Content %d:\\n&quot;, i+1)\n            fmt.Printf(&quot;  URI: %s\\n&quot;, content.URI)\n            fmt.Printf(&quot;  MIME Type: %s\\n&quot;, content.MIMEType)\n            \n            if content.Text != &quot;&quot; {\n                fmt.Printf(&quot;  Text: %s\\n&quot;, truncateString(content.Text, 100))\n            }\n            \n            if content.Blob != &quot;&quot; {\n                fmt.Printf(&quot;  Blob: %d bytes\\n&quot;, len(content.Blob))\n            }\n        }\n    }\n}\n \nfunc truncateString(s string, maxLen int) string {\n    if len(s) &lt;= maxLen {\n        return s\n    }\n    return s[:maxLen] + &quot;...&quot;\n}\n","title":"Basic Resource Reading","titles":["Client Operations","Reading Resources"]},"97":{"href":"/clients/operations#typed-resource-reading","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for common resource types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readJSONResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.MIMEType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected JSON, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Text), </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">data); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to parse JSON: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readTextResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.MIMEType, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected text, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readBinaryResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Blob </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no binary data in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Blob)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to decode binary data: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Helper functions for common resource types\nfunc readJSONResource(ctx context.Context, c client.Client, uri string) (map[string]interface{}, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    if len(result.Contents) == 0 {\n        return nil, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if content.MIMEType != &quot;application/json&quot; {\n        return nil, fmt.Errorf(&quot;expected JSON, got %s&quot;, content.MIMEType)\n    }\n \n    var data map[string]interface{}\n    if err := json.Unmarshal([]byte(content.Text), &amp;data); err != nil {\n        return nil, fmt.Errorf(&quot;failed to parse JSON: %w&quot;, err)\n    }\n \n    return data, nil\n}\n \nfunc readTextResource(ctx context.Context, c client.Client, uri string) (string, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    if len(result.Contents) == 0 {\n        return &quot;&quot;, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if !strings.HasPrefix(content.MIMEType, &quot;text/&quot;) {\n        return &quot;&quot;, fmt.Errorf(&quot;expected text, got %s&quot;, content.MIMEType)\n    }\n \n    return content.Text, nil\n}\n \nfunc readBinaryResource(ctx context.Context, c client.Client, uri string) ([]byte, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    if len(result.Contents) == 0 {\n        return nil, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if content.Blob == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;no binary data in resource&quot;)\n    }\n \n    data, err := base64.StdEncoding.DecodeString(content.Blob)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to decode binary data: %w&quot;, err)\n    }\n \n    return data, nil\n}\n","title":"Typed Resource Reading","titles":["Client Operations","Reading Resources"]},"98":{"href":"/clients/operations#resource-caching","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResourceCache</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ttl   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ttl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cache: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ttl:   ttl,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.cache[uri]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.ttl {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">result</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.cache[uri] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result:    result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check cache first</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, found </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri); found {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read from server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cache the result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResourceCache struct {\n    cache map[string]cacheEntry\n    mutex sync.RWMutex\n    ttl   time.Duration\n}\n \ntype cacheEntry struct {\n    result    *mcp.ReadResourceResult\n    timestamp time.Time\n}\n \nfunc NewResourceCache(ttl time.Duration) *ResourceCache {\n    return &amp;ResourceCache{\n        cache: make(map[string]cacheEntry),\n        ttl:   ttl,\n    }\n}\n \nfunc (rc *ResourceCache) Get(uri string) (*mcp.ReadResourceResult, bool) {\n    rc.mutex.RLock()\n    defer rc.mutex.RUnlock()\n \n    entry, exists := rc.cache[uri]\n    if !exists || time.Since(entry.timestamp) &gt; rc.ttl {\n        return nil, false\n    }\n \n    return entry.result, true\n}\n \nfunc (rc *ResourceCache) Set(uri string, result *mcp.ReadResourceResult) {\n    rc.mutex.Lock()\n    defer rc.mutex.Unlock()\n \n    rc.cache[uri] = cacheEntry{\n        result:    result,\n        timestamp: time.Now(),\n    }\n}\n \nfunc (rc *ResourceCache) ReadResource(ctx context.Context, c client.Client, uri string) (*mcp.ReadResourceResult, error) {\n    // Check cache first\n    if cached, found := rc.Get(uri); found {\n        return cached, nil\n    }\n \n    // Read from server\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    // Cache the result\n    rc.Set(uri, result)\n    return result, nil\n}\n","title":"Resource Caching","titles":["Client Operations","Reading Resources"]},"99":{"href":"/clients/operations#calling-tools","html":"\n<p>Tools provide functionality that can be invoked with parameters.</p>\n","isPage":false,"text":"\nTools provide functionality that can be invoked with parameters.\n","title":"Calling Tools","titles":["Client Operations"]},"100":{"href":"/clients/operations#basic-tool-calling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateToolCalling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a specific tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Calling tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, tool.Name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Content {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.Type, content.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc callTool(ctx context.Context, c client.Client, name string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstrateToolCalling(ctx context.Context, c client.Client) {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Available tools: %d\\n&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n    }\n \n    // Call a specific tool\n    if len(tools.Tools) &gt; 0 {\n        tool := tools.Tools[0]\n        fmt.Printf(&quot;\\nCalling tool: %s\\n&quot;, tool.Name)\n \n        result, err := callTool(ctx, c, tool.Name, map[string]interface{}{\n            &quot;input&quot;: &quot;example input&quot;,\n            &quot;format&quot;: &quot;text&quot;,\n        })\n        if err != nil {\n            log.Printf(&quot;Tool call failed: %v&quot;, err)\n            return\n        }\n \n        fmt.Printf(&quot;Tool result:\\n&quot;)\n        for i, content := range result.Content {\n            fmt.Printf(&quot;Content %d (%s): %s\\n&quot;, i+1, content.Type, content.Text)\n        }\n    }\n}\n","title":"Basic Tool Calling","titles":["Client Operations","Calling Tools"]},"101":{"href":"/clients/operations#tool-schema-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToolArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tool</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    schema </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool.InputSchema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check required properties</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Required </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, required </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Required {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[required]; </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;missing required argument: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, required)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate argument types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Properties </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> name, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            propSchema, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Properties[name]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown argument: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value, propSchema); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid argument </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">value</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">schema</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    schemaType, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;schema missing type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schemaType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected string, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected number, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;integer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected integer, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;boolean&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected boolean, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;array&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected array, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected object, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithValidation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get tool schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, t </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> t.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolName {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">t</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToolArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool, args); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;argument validation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, toolName, args)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc validateToolArguments(tool mcp.Tool, args map[string]interface{}) error {\n    schema := tool.InputSchema\n    \n    // Check required properties\n    if schema.Required != nil {\n        for _, required := range schema.Required {\n            if _, exists := args[required]; !exists {\n                return fmt.Errorf(&quot;missing required argument: %s&quot;, required)\n            }\n        }\n    }\n \n    // Validate argument types\n    if schema.Properties != nil {\n        for name, value := range args {\n            propSchema, exists := schema.Properties[name]\n            if !exists {\n                return fmt.Errorf(&quot;unknown argument: %s&quot;, name)\n            }\n \n            if err := validateValue(value, propSchema); err != nil {\n                return fmt.Errorf(&quot;invalid argument %s: %w&quot;, name, err)\n            }\n        }\n    }\n \n    return nil\n}\n \nfunc validateValue(value interface{}, schema map[string]any) error {\n    schemaType, ok := schema[&quot;type&quot;].(string)\n    if !ok {\n        return fmt.Errorf(&quot;schema missing type&quot;)\n    }\n    \n    switch schemaType {\n    case &quot;string&quot;:\n        if _, ok := value.(string); !ok {\n            return fmt.Errorf(&quot;expected string, got %T&quot;, value)\n        }\n    case &quot;number&quot;:\n        if _, ok := value.(float64); !ok {\n            return fmt.Errorf(&quot;expected number, got %T&quot;, value)\n        }\n    case &quot;integer&quot;:\n        if _, ok := value.(float64); !ok {\n            return fmt.Errorf(&quot;expected integer, got %T&quot;, value)\n        }\n    case &quot;boolean&quot;:\n        if _, ok := value.(bool); !ok {\n            return fmt.Errorf(&quot;expected boolean, got %T&quot;, value)\n        }\n    case &quot;array&quot;:\n        if _, ok := value.([]interface{}); !ok {\n            return fmt.Errorf(&quot;expected array, got %T&quot;, value)\n        }\n    case &quot;object&quot;:\n        if _, ok := value.(map[string]interface{}); !ok {\n            return fmt.Errorf(&quot;expected object, got %T&quot;, value)\n        }\n    }\n \n    return nil\n}\n \nfunc callToolWithValidation(ctx context.Context, c client.Client, toolName string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    // Get tool schema\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to list tools: %w&quot;, err)\n    }\n \n    var tool *mcp.Tool\n    for _, t := range tools.Tools {\n        if t.Name == toolName {\n            tool = &amp;t\n            break\n        }\n    }\n \n    if tool == nil {\n        return nil, fmt.Errorf(&quot;tool not found: %s&quot;, toolName)\n    }\n \n    // Validate arguments\n    if err := validateToolArguments(*tool, args); err != nil {\n        return nil, fmt.Errorf(&quot;argument validation failed: %w&quot;, err)\n    }\n \n    // Call tool\n    return callTool(ctx, c, toolName, args)\n}\n","title":"Tool Schema Validation","titles":["Client Operations","Calling Tools"]},"102":{"href":"/clients/operations#batch-tool-operations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolCall</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Arguments </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolResult</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Call   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Error  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolsBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">calls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(calls))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use goroutines for concurrent calls</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wg </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, call </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> calls {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">index</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolCall</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, toolCall.Name, toolCall.Arguments)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            results[index] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Call:   toolCall,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Result: result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Error:  err,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }(i, call)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateBatchToolCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    calls </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_weather&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New York&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_weather&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;London&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolsBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, calls)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Call.Name)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Error </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Error)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Success: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ToolCall struct {\n    Name      string\n    Arguments map[string]interface{}\n}\n \ntype ToolResult struct {\n    Call   ToolCall\n    Result *mcp.CallToolResult\n    Error  error\n}\n \nfunc callToolsBatch(ctx context.Context, c client.Client, calls []ToolCall) []ToolResult {\n    results := make([]ToolResult, len(calls))\n    \n    // Use goroutines for concurrent calls\n    var wg sync.WaitGroup\n    for i, call := range calls {\n        wg.Add(1)\n        go func(index int, toolCall ToolCall) {\n            defer wg.Done()\n            \n            result, err := callTool(ctx, c, toolCall.Name, toolCall.Arguments)\n            results[index] = ToolResult{\n                Call:   toolCall,\n                Result: result,\n                Error:  err,\n            }\n        }(i, call)\n    }\n    \n    wg.Wait()\n    return results\n}\n \nfunc demonstrateBatchToolCalls(ctx context.Context, c client.Client) {\n    calls := []ToolCall{\n        {\n            Name: &quot;get_weather&quot;,\n            Arguments: map[string]interface{}{\n                &quot;location&quot;: &quot;New York&quot;,\n            },\n        },\n        {\n            Name: &quot;get_weather&quot;,\n            Arguments: map[string]interface{}{\n                &quot;location&quot;: &quot;London&quot;,\n            },\n        },\n        {\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: &quot;add&quot;,\n                &quot;x&quot;:         10,\n                &quot;y&quot;:         20,\n            },\n        },\n    }\n \n    results := callToolsBatch(ctx, c, calls)\n    \n    for i, result := range results {\n        fmt.Printf(&quot;Call %d (%s):\\n&quot;, i+1, result.Call.Name)\n        if result.Error != nil {\n            fmt.Printf(&quot;  Error: %v\\n&quot;, result.Error)\n        } else {\n            fmt.Printf(&quot;  Success: %+v\\n&quot;, result.Result)\n        }\n    }\n}\n","title":"Batch Tool Operations","titles":["Client Operations","Calling Tools"]},"103":{"href":"/clients/operations#using-prompts","html":"\n<p>Prompts provide reusable templates for LLM interactions.</p>\n","isPage":false,"text":"\nPrompts provide reusable templates for LLM interactions.\n","title":"Using Prompts","titles":["Client Operations"]},"104":{"href":"/clients/operations#basic-prompt-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to get prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstratePromptUsage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    prompts, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list prompts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available prompts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompts.Prompts))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompts.Prompts {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, prompt.Name, prompt.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt.Arguments) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Arguments:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, arg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompt.Arguments {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;    - </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, arg.Name, arg.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use a specific prompt</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompts.Prompts) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompts.Prompts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Using prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, prompt.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, prompt.Name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Add appropriate arguments based on prompt schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to get prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Prompt result:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Messages: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Messages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Message </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message.Role, message.Content.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc getPrompt(ctx context.Context, c client.Client, name string, args map[string]interface{}) (*mcp.GetPromptResult, error) {\n    result, err := c.GetPrompt(ctx, mcp.GetPromptRequest{\n        Params: mcp.GetPromptRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to get prompt: %w&quot;, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstratePromptUsage(ctx context.Context, c client.Client) {\n    // List available prompts\n    prompts, err := c.ListPrompts(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list prompts: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Available prompts: %d\\n&quot;, len(prompts.Prompts))\n    for _, prompt := range prompts.Prompts {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, prompt.Name, prompt.Description)\n        \n        if len(prompt.Arguments) &gt; 0 {\n            fmt.Printf(&quot;  Arguments:\\n&quot;)\n            for _, arg := range prompt.Arguments {\n                fmt.Printf(&quot;    - %s: %s\\n&quot;, arg.Name, arg.Description)\n            }\n        }\n    }\n \n    // Use a specific prompt\n    if len(prompts.Prompts) &gt; 0 {\n        prompt := prompts.Prompts[0]\n        fmt.Printf(&quot;\\nUsing prompt: %s\\n&quot;, prompt.Name)\n \n        result, err := getPrompt(ctx, c, prompt.Name, map[string]interface{}{\n            // Add appropriate arguments based on prompt schema\n        })\n        if err != nil {\n            log.Printf(&quot;Failed to get prompt: %v&quot;, err)\n            return\n        }\n \n        fmt.Printf(&quot;Prompt result:\\n&quot;)\n        fmt.Printf(&quot;Description: %s\\n&quot;, result.Description)\n        fmt.Printf(&quot;Messages: %d\\n&quot;, len(result.Messages))\n        \n        for i, message := range result.Messages {\n            fmt.Printf(&quot;Message %d (%s): %s\\n&quot;, i+1, message.Role, message.Content.Text)\n        }\n    }\n}\n","title":"Basic Prompt Usage","titles":["Client Operations","Using Prompts"]},"105":{"href":"/clients/operations#prompt-template-processing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PromptProcessor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{client: c}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pp.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Messages, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BuildConversation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">promptName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userMessage</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get prompt template</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, promptName, args)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add user message</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userMessage),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FormatForLLM</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">messages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    formatted </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        formatted[i] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;role&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    message.Role,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: message.Content.Text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> formatted</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PromptProcessor struct {\n    client client.Client\n}\n \nfunc NewPromptProcessor(c client.Client) *PromptProcessor {\n    return &amp;PromptProcessor{client: c}\n}\n \nfunc (pp *PromptProcessor) ProcessPrompt(ctx context.Context, name string, args map[string]interface{}) ([]mcp.PromptMessage, error) {\n    result, err := pp.client.GetPrompt(ctx, mcp.GetPromptRequest{\n        Params: mcp.GetPromptRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, err\n    }\n \n    return result.Messages, nil\n}\n \nfunc (pp *PromptProcessor) BuildConversation(ctx context.Context, promptName string, args map[string]interface{}, userMessage string) ([]mcp.PromptMessage, error) {\n    // Get prompt template\n    messages, err := pp.ProcessPrompt(ctx, promptName, args)\n    if err != nil {\n        return nil, err\n    }\n \n    // Add user message\n    messages = append(messages, mcp.PromptMessage{\n        Role: &quot;user&quot;,\n        Content: mcp.TextContent(userMessage),\n    })\n \n    return messages, nil\n}\n \nfunc (pp *PromptProcessor) FormatForLLM(messages []mcp.PromptMessage) []map[string]interface{} {\n    formatted := make([]map[string]interface{}, len(messages))\n    \n    for i, message := range messages {\n        formatted[i] = map[string]interface{}{\n            &quot;role&quot;:    message.Role,\n            &quot;content&quot;: message.Content.Text,\n        }\n    }\n    \n    return formatted\n}\n","title":"Prompt Template Processing","titles":["Client Operations","Using Prompts"]},"106":{"href":"/clients/operations#dynamic-prompt-generation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateCodeReviewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">code</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">language</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    processor </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> processor.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     code,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: language,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateDataAnalysisPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">datasetURI</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">analysisType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    processor </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> processor.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   datasetURI,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: analysisType,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;trends&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;outliers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;correlations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateDynamicPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    codeReviewMessages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateCodeReviewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;func main() { fmt.Println(</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Hello</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">) }&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to generate code review prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code review prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> messages</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(codeReviewMessages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate data analysis prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisMessages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateDataAnalysisPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dataset://sales_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to generate analysis prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Data analysis prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> messages</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(analysisMessages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc generateCodeReviewPrompt(ctx context.Context, c client.Client, code, language string) ([]mcp.PromptMessage, error) {\n    processor := NewPromptProcessor(c)\n    \n    return processor.ProcessPrompt(ctx, &quot;code_review&quot;, map[string]interface{}{\n        &quot;code&quot;:     code,\n        &quot;language&quot;: language,\n        &quot;focus&quot;:    &quot;best-practices&quot;,\n    })\n}\n \nfunc generateDataAnalysisPrompt(ctx context.Context, c client.Client, datasetURI string, analysisType string) ([]mcp.PromptMessage, error) {\n    processor := NewPromptProcessor(c)\n    \n    return processor.ProcessPrompt(ctx, &quot;analyze_data&quot;, map[string]interface{}{\n        &quot;dataset_uri&quot;:   datasetURI,\n        &quot;analysis_type&quot;: analysisType,\n        &quot;focus_areas&quot;:   []string{&quot;trends&quot;, &quot;outliers&quot;, &quot;correlations&quot;},\n    })\n}\n \nfunc demonstrateDynamicPrompts(ctx context.Context, c client.Client) {\n    // Generate code review prompt\n    codeReviewMessages, err := generateCodeReviewPrompt(ctx, c, \n        &quot;func main() { fmt.Println(\\&quot;Hello\\&quot;) }&quot;, \n        &quot;go&quot;)\n    if err != nil {\n        log.Printf(&quot;Failed to generate code review prompt: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Code review prompt: %d messages\\n&quot;, len(codeReviewMessages))\n    }\n \n    // Generate data analysis prompt\n    analysisMessages, err := generateDataAnalysisPrompt(ctx, c, \n        &quot;dataset://sales_data&quot;, \n        &quot;exploratory&quot;)\n    if err != nil {\n        log.Printf(&quot;Failed to generate analysis prompt: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Data analysis prompt: %d messages\\n&quot;, len(analysisMessages))\n    }\n}\n","title":"Dynamic Prompt Generation","titles":["Client Operations","Using Prompts"]},"107":{"href":"/clients/operations#subscriptions","html":"\n<p>Some transports support subscriptions for receiving real-time notifications.</p>\n","isPage":false,"text":"\nSome transports support subscriptions for receiving real-time notifications.\n","title":"Subscriptions","titles":["Client Operations"]},"108":{"href":"/clients/operations#basic-subscription-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSubscriptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check if client supports subscriptions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client does not support subscriptions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Subscribe to notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> subscriber.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to subscribe: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle notifications</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Subscription cancelled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification.Method {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleProgressNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleMessageNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/resources/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleResourceUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/tools/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleToolUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unknown notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification.Method)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleProgressNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> progress </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ProgressNotification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification.Params, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">progress); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to parse progress notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Progress: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> - </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Progress, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Total, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMessageNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> message </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MessageNotification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification.Params, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">message); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to parse message notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server message: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resources updated, refreshing cache...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Invalidate resource cache or refresh resource list</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tools updated, refreshing tool list...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Refresh tool list</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleSubscriptions(ctx context.Context, c client.Client) {\n    // Check if client supports subscriptions\n    subscriber, ok := c.(client.Subscriber)\n    if !ok {\n        log.Println(&quot;Client does not support subscriptions&quot;)\n        return\n    }\n \n    // Subscribe to notifications\n    notifications, err := subscriber.Subscribe(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to subscribe: %v&quot;, err)\n        return\n    }\n \n    // Handle notifications\n    for {\n        select {\n        case notification := &lt;-notifications:\n            handleNotification(notification)\n        case &lt;-ctx.Done():\n            log.Println(&quot;Subscription cancelled&quot;)\n            return\n        }\n    }\n}\n \nfunc handleNotification(notification mcp.Notification) {\n    switch notification.Method {\n    case &quot;notifications/progress&quot;:\n        handleProgressNotification(notification)\n    case &quot;notifications/message&quot;:\n        handleMessageNotification(notification)\n    case &quot;notifications/resources/updated&quot;:\n        handleResourceUpdateNotification(notification)\n    case &quot;notifications/tools/updated&quot;:\n        handleToolUpdateNotification(notification)\n    default:\n        log.Printf(&quot;Unknown notification: %s&quot;, notification.Method)\n    }\n}\n \nfunc handleProgressNotification(notification mcp.Notification) {\n    var progress mcp.ProgressNotification\n    if err := json.Unmarshal(notification.Params, &amp;progress); err != nil {\n        log.Printf(&quot;Failed to parse progress notification: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Progress: %d/%d - %s\\n&quot;, \n        progress.Progress, \n        progress.Total, \n        progress.Message)\n}\n \nfunc handleMessageNotification(notification mcp.Notification) {\n    var message mcp.MessageNotification\n    if err := json.Unmarshal(notification.Params, &amp;message); err != nil {\n        log.Printf(&quot;Failed to parse message notification: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Server message: %s\\n&quot;, message.Text)\n}\n \nfunc handleResourceUpdateNotification(notification mcp.Notification) {\n    log.Println(&quot;Resources updated, refreshing cache...&quot;)\n    // Invalidate resource cache or refresh resource list\n}\n \nfunc handleToolUpdateNotification(notification mcp.Notification) {\n    log.Println(&quot;Tools updated, refreshing tool list...&quot;)\n    // Refresh tool list\n}\n","title":"Basic Subscription Handling","titles":["Client Operations","Subscriptions"]},"109":{"href":"/clients/operations#advanced-subscription-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscriptionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NotificationHandler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx           </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg            </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client does not support subscriptions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:     c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        subscriber: subscriber,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handlers:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:        ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:     cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.subscriber.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to subscribe: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotifications</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.handlers[method], handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.handlers[method]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reflect.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValueOf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(h).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pointer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reflect.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValueOf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handler).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pointer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            sm.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handlers[:i], handlers[i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotifications</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sm.notifications:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">processNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sm.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">processNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.handlers[notification.Method]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Handler error for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification.Method, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create subscription manager: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add handlers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Progress notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, n)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Message notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, n)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start handling</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start subscription manager: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Let it run for a while</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stop</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SubscriptionManager struct {\n    client        client.Client\n    subscriber    client.Subscriber\n    notifications chan mcp.Notification\n    handlers      map[string][]NotificationHandler\n    ctx           context.Context\n    cancel        context.CancelFunc\n    wg            sync.WaitGroup\n    mutex         sync.RWMutex\n}\n \ntype NotificationHandler func(mcp.Notification) error\n \nfunc NewSubscriptionManager(c client.Client) (*SubscriptionManager, error) {\n    subscriber, ok := c.(client.Subscriber)\n    if !ok {\n        return nil, fmt.Errorf(&quot;client does not support subscriptions&quot;)\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    sm := &amp;SubscriptionManager{\n        client:     c,\n        subscriber: subscriber,\n        handlers:   make(map[string][]NotificationHandler),\n        ctx:        ctx,\n        cancel:     cancel,\n    }\n \n    return sm, nil\n}\n \nfunc (sm *SubscriptionManager) Start() error {\n    notifications, err := sm.subscriber.Subscribe(sm.ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to subscribe: %w&quot;, err)\n    }\n \n    sm.notifications = notifications\n \n    sm.wg.Add(1)\n    go sm.handleNotifications()\n \n    return nil\n}\n \nfunc (sm *SubscriptionManager) Stop() {\n    sm.cancel()\n    sm.wg.Wait()\n}\n \nfunc (sm *SubscriptionManager) AddHandler(method string, handler NotificationHandler) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n \n    sm.handlers[method] = append(sm.handlers[method], handler)\n}\n \nfunc (sm *SubscriptionManager) RemoveHandler(method string, handler NotificationHandler) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n \n    handlers := sm.handlers[method]\n    for i, h := range handlers {\n        if reflect.ValueOf(h).Pointer() == reflect.ValueOf(handler).Pointer() {\n            sm.handlers[method] = append(handlers[:i], handlers[i+1:]...)\n            break\n        }\n    }\n}\n \nfunc (sm *SubscriptionManager) handleNotifications() {\n    defer sm.wg.Done()\n \n    for {\n        select {\n        case notification := &lt;-sm.notifications:\n            sm.processNotification(notification)\n        case &lt;-sm.ctx.Done():\n            return\n        }\n    }\n}\n \nfunc (sm *SubscriptionManager) processNotification(notification mcp.Notification) {\n    sm.mutex.RLock()\n    handlers := sm.handlers[notification.Method]\n    sm.mutex.RUnlock()\n \n    for _, handler := range handlers {\n        if err := handler(notification); err != nil {\n            log.Printf(&quot;Handler error for %s: %v&quot;, notification.Method, err)\n        }\n    }\n}\n \n// Usage example\nfunc demonstrateSubscriptionManager(c client.Client) {\n    sm, err := NewSubscriptionManager(c)\n    if err != nil {\n        log.Printf(&quot;Failed to create subscription manager: %v&quot;, err)\n        return\n    }\n \n    // Add handlers\n    sm.AddHandler(&quot;notifications/progress&quot;, func(n mcp.Notification) error {\n        log.Printf(&quot;Progress notification: %+v&quot;, n)\n        return nil\n    })\n \n    sm.AddHandler(&quot;notifications/message&quot;, func(n mcp.Notification) error {\n        log.Printf(&quot;Message notification: %+v&quot;, n)\n        return nil\n    })\n \n    // Start handling\n    if err := sm.Start(); err != nil {\n        log.Printf(&quot;Failed to start subscription manager: %v&quot;, err)\n        return\n    }\n \n    // Let it run for a while\n    time.Sleep(30 * time.Second)\n \n    // Stop\n    sm.Stop()\n}\n","title":"Advanced Subscription Management","titles":["Client Operations","Subscriptions"]},"110":{"href":"/clients/operations#advanced-sampling-support","html":"\n<p>Sampling is an advanced feature that allows clients to respond to LLM completion requests from servers. This enables servers to leverage client-side LLM capabilities for content generation and reasoning.</p>\n<blockquote>\n<p><strong>Note</strong>: Sampling is an advanced feature that most clients don&#x27;t need. Only implement sampling if you&#x27;re building a client that provides LLM capabilities to servers.</p>\n</blockquote>\n","isPage":false,"text":"\nSampling is an advanced feature that allows clients to respond to LLM completion requests from servers. This enables servers to leverage client-side LLM capabilities for content generation and reasoning.\n\nNote: Sampling is an advanced feature that most clients don&#x27;t need. Only implement sampling if you&#x27;re building a client that provides LLM capabilities to servers.\n\n","title":"Advanced: Sampling Support","titles":["Client Operations"]},"111":{"href":"/clients/operations#when-to-implement-sampling","html":"\n<p>Consider implementing sampling when your client:</p>\n<ul>\n<li>Has access to LLM APIs (OpenAI, Anthropic, etc.)</li>\n<li>Wants to provide LLM capabilities to servers</li>\n<li>Needs to support servers that generate dynamic content</li>\n</ul>\n","isPage":false,"text":"\nConsider implementing sampling when your client:\n\nHas access to LLM APIs (OpenAI, Anthropic, etc.)\nWants to provide LLM capabilities to servers\nNeeds to support servers that generate dynamic content\n\n","title":"When to Implement Sampling","titles":["Client Operations","Advanced: Sampling Support"]},"112":{"href":"/clients/operations#basic-implementation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Implement the SamplingHandler interface</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MySamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add your LLM client here</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process the request with your LLM</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return the result in MCP format</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-model&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role:  mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your LLM response here&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;endTurn&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create client with sampling support</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;/path/to/server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MySamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>For complete sampling documentation, see <strong><a href=\"/clients/advanced-sampling\">Client Sampling Guide</a></strong>.</p>\n","isPage":false,"text":"\nimport &quot;github.com/mark3labs/mcp-go/client&quot;\n \n// Implement the SamplingHandler interface\ntype MySamplingHandler struct {\n    // Add your LLM client here\n}\n \nfunc (h *MySamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Process the request with your LLM\n    // Return the result in MCP format\n    return &amp;mcp.CreateMessageResult{\n        Model: &quot;your-model&quot;,\n        Role:  mcp.RoleAssistant,\n        Content: mcp.TextContent{\n            Type: &quot;text&quot;,\n            Text: &quot;Your LLM response here&quot;,\n        },\n        StopReason: &quot;endTurn&quot;,\n    }, nil\n}\n \n// Create client with sampling support\nmcpClient, err := client.NewStdioClient(\n    &quot;/path/to/server&quot;,\n    client.WithSamplingHandler(&amp;MySamplingHandler{}),\n)\nFor complete sampling documentation, see Client Sampling Guide.\n","title":"Basic Implementation","titles":["Client Operations","Advanced: Sampling Support"]},"113":{"href":"/clients/operations#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Learn transport-specific client features</li>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Review fundamental concepts</li>\n</ul>","isPage":false,"text":"\n\nClient Transports - Learn transport-specific client features\nClient Basics - Review fundamental concepts\n","title":"Next Steps","titles":["Client Operations"]},"114":{"href":"/clients/transports#client-transports","html":"</header>\n<p>Learn about transport-specific client implementations and how to choose the right transport for your use case.</p>\n","isPage":true,"text":"\nLearn about transport-specific client implementations and how to choose the right transport for your use case.\n","title":"Client Transports","titles":[]},"115":{"href":"/clients/transports#transport-overview","html":"\n<p>MCP-Go provides client implementations for all supported transports. Each transport has different characteristics and is optimized for specific scenarios.</p>\n<table><thead><tr><th>Transport</th><th>Best For</th><th>Connection</th><th>Real-time</th><th>Multi-client</th></tr></thead><tbody><tr><td><strong>STDIO</strong></td><td>CLI tools, desktop apps</td><td>Process pipes</td><td>No</td><td>No</td></tr><tr><td><strong>StreamableHTTP</strong></td><td>Web services, APIs</td><td>HTTP requests</td><td>No</td><td>Yes</td></tr><tr><td><strong>SSE</strong></td><td>Web apps, real-time</td><td>HTTP + EventSource</td><td>Yes</td><td>Yes</td></tr><tr><td><strong>In-Process</strong></td><td>Testing, embedded</td><td>Direct calls</td><td>Yes</td><td>No</td></tr></tbody></table>\n","isPage":false,"text":"\nMCP-Go provides client implementations for all supported transports. Each transport has different characteristics and is optimized for specific scenarios.\nTransportBest ForConnectionReal-timeMulti-clientSTDIOCLI tools, desktop appsProcess pipesNoNoStreamableHTTPWeb services, APIsHTTP requestsNoYesSSEWeb apps, real-timeHTTP + EventSourceYesYesIn-ProcessTesting, embeddedDirect callsYesNo\n","title":"Transport Overview","titles":["Client Transports"]},"116":{"href":"/clients/transports#stdio-client","html":"\n<p>STDIO clients communicate with servers through standard input/output, typically by spawning a subprocess.</p>\n","isPage":false,"text":"\nSTDIO clients communicate with servers through standard input/output, typically by spawning a subprocess.\n","title":"STDIO Client","titles":["Client Transports"]},"117":{"href":"/clients/transports#basic-stdio-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">crypto/tls</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client that spawns a subprocess</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, listToolsRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;crypto/tls&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;net/http&quot;\n    &quot;os&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc createStdioClient() {\n    // Create client that spawns a subprocess\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{}, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize connection\n    if err := c.Initialize(ctx, initRequest); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use the client\n    tools, err := c.ListTools(ctx, listToolsRequest)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic STDIO Client","titles":["Client Transports","STDIO Client"]},"118":{"href":"/clients/transports#stdio-client-with-custom-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createCustomStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create custom logger for debugging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> myCustomLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create STDIO client with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;GOCACHE=/tmp/gocache&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Custom environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCommandLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logger),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCommandFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">command</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">env</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">exec</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cmd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            cmd </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> exec.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CommandContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, command, args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            cmd.Env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Environ</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), env</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            cmd.Dir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;/path/to/working/directory&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cmd, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createCustomStdioClient() {\n    // Create custom logger for debugging\n    logger := myCustomLogger{}\n \n    // Create STDIO client with custom options\n    c, err := client.NewStdioMCPClientWithOptions(\n        &quot;go&quot;,\n        []string{&quot;GOCACHE=/tmp/gocache&quot;}, // Custom environment\n        []string{&quot;run&quot;, &quot;/path/to/server/main.go&quot;},\n        transport.WithCommandLogger(logger),\n        transport.WithCommandFunc(func(ctx context.Context, command string, args []string, env []string) (*exec.Cmd, error) {\n            cmd := exec.CommandContext(ctx, command, args...)\n            cmd.Env = append(os.Environ(), env...)\n            cmd.Dir = &quot;/path/to/working/directory&quot;\n            return cmd, nil\n        }),\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize connection\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use the client...\n}\n","title":"STDIO Client with Custom Configuration","titles":["Client Transports","STDIO Client"]},"119":{"href":"/clients/transports#stdio-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define error constants for STDIO client errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProcessExited  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process exited&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProcessTimeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrBrokenPipe     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;broken pipe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStdioErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessExited):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server process exited unexpectedly&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Attempt to restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessTimeout):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server process timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Kill and restart process</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Kill</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrBrokenPipe):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Communication pipe broken&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Process likely crashed, restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Define error constants for STDIO client errors\nvar (\n    ErrProcessExited  = errors.New(&quot;process exited&quot;)\n    ErrProcessTimeout = errors.New(&quot;process timeout&quot;)\n    ErrBrokenPipe     = errors.New(&quot;broken pipe&quot;)\n)\n \nfunc handleStdioErrors(c *client.StdioClient) {\n    ctx := context.Background()\n \n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n        },\n    })\n \n    if err != nil {\n        switch {\n        case errors.Is(err, ErrProcessExited):\n            log.Println(&quot;Server process exited unexpectedly&quot;)\n            // Attempt to restart\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        case errors.Is(err, ErrProcessTimeout):\n            log.Println(&quot;Server process timed out&quot;)\n            // Kill and restart process\n            c.Kill()\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        case errors.Is(err, ErrBrokenPipe):\n            log.Println(&quot;Communication pipe broken&quot;)\n            // Process likely crashed, restart\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n        }\n        return\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"STDIO Error Handling","titles":["Client Transports","STDIO Client"]},"120":{"href":"/clients/transports#stdio-process-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ManagedStdioClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    options     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg          </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">options</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options:     options,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        restartChan: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:         ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:      cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">monitorProcess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msc.options)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msc.ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">monitorProcess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">msc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">msc.restartChan:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Restarting STDIO client...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Wait before restarting</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // Try again after delay</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client restarted successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not available&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isProcessError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Trigger restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process error, restarting: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isProcessError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessExited) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrBrokenPipe) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessTimeout)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define connection error constants</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionLost   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection lost&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionFailed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrUnauthorized     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unauthorized&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrForbidden        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;forbidden&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\ntype ManagedStdioClient struct {\n    client      *client.StdioClient\n    options     client.StdioOptions\n    restartChan chan struct{}\n    ctx         context.Context\n    cancel      context.CancelFunc\n    wg          sync.WaitGroup\n}\n \nfunc NewManagedStdioClient(options client.StdioOptions) (*ManagedStdioClient, error) {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    msc := &amp;ManagedStdioClient{\n        options:     options,\n        restartChan: make(chan struct{}, 1),\n        ctx:         ctx,\n        cancel:      cancel,\n    }\n \n    if err := msc.start(); err != nil {\n        cancel()\n        return nil, err\n    }\n \n    msc.wg.Add(1)\n    go msc.monitorProcess()\n \n    return msc, nil\n}\n \nfunc (msc *ManagedStdioClient) start() error {\n    client, err := client.NewStdioClientWithOptions(msc.options)\n    if err != nil {\n        return err\n    }\n \n    if err := client.Initialize(msc.ctx); err != nil {\n        client.Close()\n        return err\n    }\n \n    msc.client = client\n    return nil\n}\n \nfunc (msc *ManagedStdioClient) monitorProcess() {\n    defer msc.wg.Done()\n \n    for {\n        select {\n        case &lt;-msc.ctx.Done():\n            return\n        case &lt;-msc.restartChan:\n            log.Println(&quot;Restarting STDIO client...&quot;)\n \n            if msc.client != nil {\n                msc.client.Close()\n            }\n \n            // Wait before restarting\n            time.Sleep(1 * time.Second)\n \n            if err := msc.start(); err != nil {\n                log.Printf(&quot;Failed to restart client: %v&quot;, err)\n                // Try again after delay\n                time.Sleep(5 * time.Second)\n                select {\n                case msc.restartChan &lt;- struct{}{}:\n                default:\n                }\n            } else {\n                log.Println(&quot;Client restarted successfully&quot;)\n            }\n        }\n    }\n}\n \nfunc (msc *ManagedStdioClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    if msc.client == nil {\n        return nil, fmt.Errorf(&quot;client not available&quot;)\n    }\n \n    result, err := msc.client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isProcessError(err) {\n        // Trigger restart\n        select {\n        case msc.restartChan &lt;- struct{}{}:\n        default:\n        }\n        return nil, fmt.Errorf(&quot;process error, restarting: %w&quot;, err)\n    }\n \n    return result, err\n}\n \nfunc (msc *ManagedStdioClient) Close() error {\n    msc.cancel()\n    msc.wg.Wait()\n \n    if msc.client != nil {\n        return msc.client.Close()\n    }\n \n    return nil\n}\n \nfunc isProcessError(err error) bool {\n    return errors.Is(err, ErrProcessExited) ||\n           errors.Is(err, ErrBrokenPipe) ||\n           errors.Is(err, ErrProcessTimeout)\n}\n// Define connection error constants\nvar (\n    ErrConnectionLost   = errors.New(&quot;connection lost&quot;)\n    ErrConnectionFailed = errors.New(&quot;connection failed&quot;)\n    ErrUnauthorized     = errors.New(&quot;unauthorized&quot;)\n    ErrForbidden        = errors.New(&quot;forbidden&quot;)\n)\n","title":"STDIO Process Management","titles":["Client Transports","STDIO Client"]},"121":{"href":"/clients/transports#streamablehttp-client","html":"\n<p>StreamableHTTP clients communicate with servers using traditional HTTP requests.</p>\n","isPage":false,"text":"\nStreamableHTTP clients communicate with servers using traditional HTTP requests.\n","title":"StreamableHTTP Client","titles":["Client Transports"]},"122":{"href":"/clients/transports#basic-streamablehttp-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createStreamableHTTPClient() {\n    // Create StreamableHTTP client\n    c := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic StreamableHTTP Client","titles":["Client Transports","StreamableHTTP Client"]},"123":{"href":"/clients/transports#streamablehttp-client-with-custom-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createCustomStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create custom logger for debugging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> myCustomLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client with options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://api.example.com/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logger),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MyApp/1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Accept&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPBasicClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Transport: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxIdleConns:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxIdleConnsPerHost: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                IdleConnTimeout:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">90</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                TLSClientConfig: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    InsecureSkipVerify: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createCustomStreamableHTTPClient() {\n    // Create custom logger for debugging\n    logger := myCustomLogger{}\n \n    // Create StreamableHTTP client with options\n    c := client.NewStreamableHttpClient(&quot;https://api.example.com/mcp&quot;,\n        transport.WithLogger(logger),\n        transport.WithHTTPTimeout(30*time.Second),\n        transport.WithHTTPHeaders(map[string]string{\n            &quot;User-Agent&quot;: &quot;MyApp/1.0&quot;,\n            &quot;Accept&quot;:     &quot;application/json&quot;,\n        }),\n        transport.WithHTTPBasicClient(&amp;http.Client{\n            Transport: &amp;http.Transport{\n                MaxIdleConns:        100,\n                MaxIdleConnsPerHost: 10,\n                IdleConnTimeout:     90 * time.Second,\n                TLSClientConfig: &amp;tls.Config{\n                    InsecureSkipVerify: false,\n                },\n            },\n        }),\n    )\n    defer c.Close()\n \n    ctx := context.Background()\n \n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client...\n}\n","title":"StreamableHTTP Client with Custom Configuration","titles":["Client Transports","StreamableHTTP Client"]},"124":{"href":"/clients/transports#streamablehttp-authentication","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createAuthenticatedStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client with OAuth</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPOAuth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OAuthConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientID:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-client-id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientSecret: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-client-secret&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            TokenURL:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://auth.example.com/token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Scopes:       []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp:read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp:write&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isAuthError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrUnauthorized) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrForbidden)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createAuthenticatedStreamableHTTPClient() {\n    // Create StreamableHTTP client with OAuth\n    c := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;,\n        transport.WithHTTPOAuth(transport.OAuthConfig{\n            ClientID:     &quot;your-client-id&quot;,\n            ClientSecret: &quot;your-client-secret&quot;,\n            TokenURL:     &quot;https://auth.example.com/token&quot;,\n            Scopes:       []string{&quot;mcp:read&quot;, &quot;mcp:write&quot;},\n        }),\n    )\n    defer c.Close()\n \n    ctx := context.Background()\n \n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client...\n}\n \nfunc isAuthError(err error) bool {\n    return errors.Is(err, ErrUnauthorized) ||\n           errors.Is(err, ErrForbidden)\n}\n","title":"StreamableHTTP Authentication","titles":["Client Transports","StreamableHTTP Client"]},"125":{"href":"/clients/transports#streamablehttp-connection-pooling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> StreamableHTTPClientPool</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxSize </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewStreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxSize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        clients: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, maxSize),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        maxSize: maxSize,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        factory: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(baseURL)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Pre-populate pool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxSize; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        pool.clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">pool.clients:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Put</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Pool full, close client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Put</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype StreamableHTTPClientPool struct {\n    clients chan *client.Client\n    factory func() *client.Client\n    maxSize int\n}\n \nfunc NewStreamableHTTPClientPool(baseURL string, maxSize int) *StreamableHTTPClientPool {\n    pool := &amp;StreamableHTTPClientPool{\n        clients: make(chan *client.Client, maxSize),\n        maxSize: maxSize,\n        factory: func() *client.Client {\n            return client.NewStreamableHttpClient(baseURL)\n        },\n    }\n \n    // Pre-populate pool\n    for i := 0; i &lt; maxSize; i++ {\n        pool.clients &lt;- pool.factory()\n    }\n \n    return pool\n}\n \nfunc (pool *StreamableHTTPClientPool) Get() *client.Client {\n    select {\n    case c := &lt;-pool.clients:\n        return c\n    default:\n        return pool.factory()\n    }\n}\n \nfunc (pool *StreamableHTTPClientPool) Put(c *client.Client) {\n    select {\n    case pool.clients &lt;- c:\n    default:\n        // Pool full, close client\n        c.Close()\n    }\n}\n \nfunc (pool *StreamableHTTPClientPool) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    c := pool.Get()\n    defer pool.Put(c)\n \n    return c.CallTool(ctx, req)\n}\n","title":"StreamableHTTP Connection Pooling","titles":["Client Transports","StreamableHTTP Client"]},"126":{"href":"/clients/transports#streamablehttp-with-preconfigured-session","html":"\n<p>You can also create a StreamableHTTP client with a preconfigured session, which allows you to reuse the same session across multiple requests</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStreamableHTTPClientWithSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client with options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // fetch existing session ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://api.example.com/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // If the session is terminated, you must reinitialize the client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, transport.ErrSessionTerminated) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Reinitialize if session is terminated</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // The session ID should change after reinitialization</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Update session ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can also create a StreamableHTTP client with a preconfigured session, which allows you to reuse the same session across multiple requests\nfunc createStreamableHTTPClientWithSession() {\n    // Create StreamableHTTP client with options\n    sessionID := // fetch existing session ID\n    c := client.NewStreamableHttpClient(&quot;https://api.example.com/mcp&quot;,\n        transport.WithSession(sessionID),\n    )\n    defer c.Close()\n \n    ctx := context.Background()\n    // Use client...\n    _, err := c.ListTools(ctx)\n    // If the session is terminated, you must reinitialize the client\n    if errors.Is(err, transport.ErrSessionTerminated) {\n        c.Initialize(ctx) // Reinitialize if session is terminated\n        // The session ID should change after reinitialization\n        sessionID = c.GetSessionId() // Update session ID\n    }\n}\n","title":"StreamableHTTP With Preconfigured Session","titles":["Client Transports","StreamableHTTP Client"]},"127":{"href":"/clients/transports#sse-client","html":"\n<p>SSE (Server-Sent Events) clients provide real-time communication with servers.</p>\n","isPage":false,"text":"\nSSE (Server-Sent Events) clients provide real-time communication with servers.\n","title":"SSE Client","titles":["Client Transports"]},"128":{"href":"/clients/transports#basic-sse-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set authentication</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer your-token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Subscribe to notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle notifications in background</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client for regular operations</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createSSEClient() {\n    // Create SSE client\n    c := client.NewSSEClient(&quot;http://localhost:8080/mcp/sse&quot;)\n    defer c.Close()\n \n    // Set authentication\n    c.SetHeader(&quot;Authorization&quot;, &quot;Bearer your-token&quot;)\n \n    ctx := context.Background()\n \n    // Initialize\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Subscribe to notifications\n    notifications, err := c.Subscribe(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Handle notifications in background\n    go func() {\n        for notification := range notifications {\n            log.Printf(&quot;Notification: %+v&quot;, notification)\n        }\n    }()\n \n    // Use client for regular operations\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic SSE Client","titles":["Client Transports","SSE Client"]},"129":{"href":"/clients/transports#sse-client-with-custom-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createCustomSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create custom logger for debugging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> myCustomLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create SSE client with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSELogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logger),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer your-token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MyApp/1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createCustomSSEClient() {\n    // Create custom logger for debugging\n    logger := myCustomLogger{}\n \n    // Create SSE client with custom options\n    c, err := client.NewSSEMCPClient(&quot;http://localhost:8080/mcp/sse&quot;,\n        transport.WithSSELogger(logger),\n        transport.WithHeaders(map[string]string{\n            &quot;Authorization&quot;: &quot;Bearer your-token&quot;,\n            &quot;User-Agent&quot;:    &quot;MyApp/1.0&quot;,\n        }),\n        transport.WithHTTPClient(&amp;http.Client{\n            Timeout: 30 * time.Second,\n        }),\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client...\n}\n","title":"SSE Client with Custom Configuration","titles":["Client Transports","SSE Client"]},"130":{"href":"/clients/transports#sse-client-with-reconnection","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResilientSSEClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    baseURL     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    headers     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reconnectCh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex       </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        baseURL:     baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        headers:     </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:         ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:      cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        reconnectCh: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">reconnectLoop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">value</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.headers[key] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rsc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rsc.baseURL)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.headers {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(key, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rsc.ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">reconnectLoop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.reconnectCh:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnecting SSE client...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnection attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt, err)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    backoff </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempt) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(backoff):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnected successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Trigger reconnection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.reconnectCh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper function to check if an error is a connection error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrConnectionLost) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrConnectionFailed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResilientSSEClient struct {\n    baseURL     string\n    headers     map[string]string\n    client      *client.SSEClient\n    ctx         context.Context\n    cancel      context.CancelFunc\n    reconnectCh chan struct{}\n    mutex       sync.RWMutex\n}\n \nfunc NewResilientSSEClient(baseURL string) *ResilientSSEClient {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    rsc := &amp;ResilientSSEClient{\n        baseURL:     baseURL,\n        headers:     make(map[string]string),\n        ctx:         ctx,\n        cancel:      cancel,\n        reconnectCh: make(chan struct{}, 1),\n    }\n \n    go rsc.reconnectLoop()\n    return rsc\n}\n \nfunc (rsc *ResilientSSEClient) SetHeader(key, value string) {\n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n    rsc.headers[key] = value\n}\n \nfunc (rsc *ResilientSSEClient) connect() error {\n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n \n    if rsc.client != nil {\n        rsc.client.Close()\n    }\n \n    client := client.NewSSEClient(rsc.baseURL)\n \n    // Set headers\n    for key, value := range rsc.headers {\n        client.SetHeader(key, value)\n    }\n \n    if err := client.Initialize(rsc.ctx); err != nil {\n        return err\n    }\n \n    rsc.client = client\n    return nil\n}\n \nfunc (rsc *ResilientSSEClient) reconnectLoop() {\n    for {\n        select {\n        case &lt;-rsc.ctx.Done():\n            return\n        case &lt;-rsc.reconnectCh:\n            log.Println(&quot;Reconnecting SSE client...&quot;)\n \n            for attempt := 1; attempt &lt;= 5; attempt++ {\n                if err := rsc.connect(); err != nil {\n                    log.Printf(&quot;Reconnection attempt %d failed: %v&quot;, attempt, err)\n \n                    backoff := time.Duration(attempt) * time.Second\n                    select {\n                    case &lt;-time.After(backoff):\n                    case &lt;-rsc.ctx.Done():\n                        return\n                    }\n                } else {\n                    log.Println(&quot;Reconnected successfully&quot;)\n                    break\n                }\n            }\n        }\n    }\n}\n \nfunc (rsc *ResilientSSEClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    rsc.mutex.RLock()\n    client := rsc.client\n    rsc.mutex.RUnlock()\n \n    if client == nil {\n        return nil, fmt.Errorf(&quot;client not connected&quot;)\n    }\n \n    result, err := client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isConnectionError(err) {\n        // Trigger reconnection\n        select {\n        case rsc.reconnectCh &lt;- struct{}{}:\n        default:\n        }\n        return nil, fmt.Errorf(&quot;connection error: %w&quot;, err)\n    }\n \n    return result, err\n}\n \nfunc (rsc *ResilientSSEClient) Subscribe(ctx context.Context) (&lt;-chan mcp.Notification, error) {\n    rsc.mutex.RLock()\n    client := rsc.client\n    rsc.mutex.RUnlock()\n \n    if client == nil {\n        return nil, fmt.Errorf(&quot;client not connected&quot;)\n    }\n \n    return client.Subscribe(ctx)\n}\n \nfunc (rsc *ResilientSSEClient) Close() error {\n    rsc.cancel()\n \n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n \n    if rsc.client != nil {\n        return rsc.client.Close()\n    }\n \n    return nil\n}\n \n// Helper function to check if an error is a connection error\nfunc isConnectionError(err error) bool {\n    return errors.Is(err, ErrConnectionLost) ||\n           errors.Is(err, ErrConnectionFailed)\n}\n","title":"SSE Client with Reconnection","titles":["Client Transports","SSE Client"]},"131":{"href":"/clients/transports#sse-event-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SSEEventHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex       </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg          </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:   c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handlers: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:      ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:   cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(seh.ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">seh.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnProgress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnResourceUpdate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/resources/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolUpdate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/tools/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(seh.handlers[method], handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.handlers[notification.Method]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        go</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SSEEventHandler struct {\n    client      *client.SSEClient\n    handlers    map[string][]func(mcp.Notification)\n    mutex       sync.RWMutex\n    ctx         context.Context\n    cancel      context.CancelFunc\n    wg          sync.WaitGroup\n}\n \nfunc NewSSEEventHandler(c *client.SSEClient) *SSEEventHandler {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    return &amp;SSEEventHandler{\n        client:   c,\n        handlers: make(map[string][]func(mcp.Notification)),\n        ctx:      ctx,\n        cancel:   cancel,\n    }\n}\n \nfunc (seh *SSEEventHandler) Start() error {\n    notifications, err := seh.client.Subscribe(seh.ctx)\n    if err != nil {\n        return err\n    }\n \n    seh.wg.Add(1)\n    go func() {\n        defer seh.wg.Done()\n \n        for {\n            select {\n            case notification := &lt;-notifications:\n                seh.handleNotification(notification)\n            case &lt;-seh.ctx.Done():\n                return\n            }\n        }\n    }()\n \n    return nil\n}\n \nfunc (seh *SSEEventHandler) Stop() {\n    seh.cancel()\n    seh.wg.Wait()\n}\n \nfunc (seh *SSEEventHandler) OnProgress(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/progress&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnMessage(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/message&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnResourceUpdate(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/resources/updated&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnToolUpdate(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/tools/updated&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) addHandler(method string, handler func(mcp.Notification)) {\n    seh.mutex.Lock()\n    defer seh.mutex.Unlock()\n \n    seh.handlers[method] = append(seh.handlers[method], handler)\n}\n \nfunc (seh *SSEEventHandler) handleNotification(notification mcp.Notification) {\n    seh.mutex.RLock()\n    handlers := seh.handlers[notification.Method]\n    seh.mutex.RUnlock()\n \n    for _, handler := range handlers {\n        go handler(notification)\n    }\n}\n","title":"SSE Event Handling","titles":["Client Transports","SSE Client"]},"132":{"href":"/clients/transports#in-process-client","html":"\n<p>In-process clients provide direct communication with servers in the same process.</p>\n","isPage":false,"text":"\nIn-process clients provide direct communication with servers in the same process.\n","title":"In-Process Client","titles":["Client Transports"]},"133":{"href":"/clients/transports#basic-in-process-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools to server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            input </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed: &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize (no network overhead)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createInProcessClient() {\n    // Create server\n    s := server.NewMCPServer(&quot;Test Server&quot;, &quot;1.0.0&quot;)\n \n    // Add tools to server\n    s.AddTool(\n        mcp.NewTool(&quot;test_tool&quot;,\n            mcp.WithDescription(&quot;Test tool&quot;),\n            mcp.WithString(&quot;input&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            input := req.Params.Arguments[&quot;input&quot;].(string)\n            return mcp.NewToolResultText(&quot;Processed: &quot; + input), nil\n        },\n    )\n \n    // Create in-process client\n    c := client.NewInProcessClient(s)\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize (no network overhead)\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;test_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;input&quot;: &quot;test data&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"Basic In-Process Client","titles":["Client Transports","In-Process Client"]},"134":{"href":"/clients/transports#in-process-client-for-testing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TestClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InProcessClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithAllCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server: s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">description</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(description))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resource, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI: uri,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage in tests</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> TestWithInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">t</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">testing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add test tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        input </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(input), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    require.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NoError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, err)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Test tool call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    require.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NoError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    assert.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Equal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype TestClient struct {\n    server *server.MCPServer\n    client *client.InProcessClient\n}\n \nfunc NewTestClient() *TestClient {\n    s := server.NewMCPServer(&quot;Test Server&quot;, &quot;1.0.0&quot;,\n        server.WithAllCapabilities(),\n    )\n \n    return &amp;TestClient{\n        server: s,\n        client: client.NewInProcessClient(s),\n    }\n}\n \nfunc (tc *TestClient) AddTool(name, description string, handler server.ToolHandler) {\n    tool := mcp.NewTool(name, mcp.WithDescription(description))\n    tc.server.AddTool(tool, handler)\n}\n \nfunc (tc *TestClient) AddResource(uri, name string, handler server.ResourceHandler) {\n    resource := mcp.NewResource(uri, name)\n    tc.server.AddResource(resource, handler)\n}\n \nfunc (tc *TestClient) Initialize(ctx context.Context) error {\n    return tc.client.Initialize(ctx)\n}\n \nfunc (tc *TestClient) CallTool(ctx context.Context, name string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    return tc.client.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n}\n \nfunc (tc *TestClient) ReadResource(ctx context.Context, uri string) (*mcp.ReadResourceResult, error) {\n    return tc.client.ReadResource(ctx, mcp.ReadResourceRequest{\n        Params: mcp.ReadResourceRequestParams{\n            URI: uri,\n        },\n    })\n}\n \nfunc (tc *TestClient) Close() error {\n    return tc.client.Close()\n}\n \n// Usage in tests\nfunc TestWithInProcessClient(t *testing.T) {\n    tc := NewTestClient()\n    defer tc.Close()\n \n    // Add test tool\n    tc.AddTool(&quot;echo&quot;, &quot;Echo input&quot;, func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        input := req.Params.Arguments[&quot;input&quot;].(string)\n        return mcp.NewToolResultText(input), nil\n    })\n \n    ctx := context.Background()\n    err := tc.Initialize(ctx)\n    require.NoError(t, err)\n \n    // Test tool call\n    result, err := tc.CallTool(ctx, &quot;echo&quot;, map[string]interface{}{\n        &quot;input&quot;: &quot;hello world&quot;,\n    })\n    require.NoError(t, err)\n    assert.Equal(t, &quot;hello world&quot;, result.Content[0].Text)\n}\n","title":"In-Process Client for Testing","titles":["Client Transports","In-Process Client"]},"135":{"href":"/clients/transports#transport-selection","html":"\n","isPage":false,"text":"\n","title":"Transport Selection","titles":["Client Transports"]},"136":{"href":"/clients/transports#decision-matrix","html":"\n<p>Choose your transport based on these factors:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RealTime        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MultiClient     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Performance     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // &quot;high&quot;, &quot;medium&quot;, &quot;low&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Complexity      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Performance </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;inprocess&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.RealTime </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Default fallback</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateTransportSelection</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // High-performance testing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    testReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Testing: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(testReq))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Real-time web application</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    webReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Web app: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(webReq))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // CLI tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cliReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;CLI tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(cliReq))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nChoose your transport based on these factors:\ntype TransportRequirements struct {\n    RealTime        bool\n    MultiClient     bool\n    NetworkRequired bool\n    Performance     string // &quot;high&quot;, &quot;medium&quot;, &quot;low&quot;\n    Complexity      string // &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;\n}\n \nfunc SelectTransport(req TransportRequirements) string {\n    switch {\n    case !req.NetworkRequired &amp;&amp; req.Performance == &quot;high&quot;:\n        return &quot;inprocess&quot;\n \n    case !req.NetworkRequired &amp;&amp; !req.MultiClient:\n        return &quot;stdio&quot;\n \n    case req.RealTime &amp;&amp; req.MultiClient:\n        return &quot;sse&quot;\n \n    case req.NetworkRequired &amp;&amp; req.MultiClient:\n        return &quot;streamablehttp&quot;\n \n    default:\n        return &quot;stdio&quot; // Default fallback\n    }\n}\n \n// Usage examples\nfunc demonstrateTransportSelection() {\n    // High-performance testing\n    testReq := TransportRequirements{\n        RealTime:        false,\n        MultiClient:     false,\n        NetworkRequired: false,\n        Performance:     &quot;high&quot;,\n        Complexity:      &quot;low&quot;,\n    }\n    fmt.Printf(&quot;Testing: %s\\n&quot;, SelectTransport(testReq))\n \n    // Real-time web application\n    webReq := TransportRequirements{\n        RealTime:        true,\n        MultiClient:     true,\n        NetworkRequired: true,\n        Performance:     &quot;medium&quot;,\n        Complexity:      &quot;medium&quot;,\n    }\n    fmt.Printf(&quot;Web app: %s\\n&quot;, SelectTransport(webReq))\n \n    // CLI tool\n    cliReq := TransportRequirements{\n        RealTime:        false,\n        MultiClient:     false,\n        NetworkRequired: false,\n        Performance:     &quot;medium&quot;,\n        Complexity:      &quot;low&quot;,\n    }\n    fmt.Printf(&quot;CLI tool: %s\\n&quot;, SelectTransport(cliReq))\n}\n","title":"Decision Matrix","titles":["Client Transports","Transport Selection"]},"137":{"href":"/clients/transports#multi-transport-client-factory","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ClientFactory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        configs: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStdioConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">command</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ...</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Command: command,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Args:    args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStreamableHTTPConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">headers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL: baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers: headers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetSSEConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">headers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL: baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers: headers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPCOption</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(options, transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BaseURL, options</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientOption</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(options, transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BaseURL, options</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown transport: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, transport)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure transports</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStdioConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStreamableHTTPConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetSSEConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transport)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ClientFactory struct {\n    configs map[string]interface{}\n}\n \nfunc NewClientFactory() *ClientFactory {\n    return &amp;ClientFactory{\n        configs: make(map[string]interface{}),\n    }\n}\n \nfunc (cf *ClientFactory) SetStdioConfig(command string, args ...string) {\n    cf.configs[&quot;stdio&quot;] = client.StdioOptions{\n        Command: command,\n        Args:    args,\n    }\n}\n \nfunc (cf *ClientFactory) SetStreamableHTTPConfig(baseURL string, headers map[string]string) {\n    cf.configs[&quot;streamablehttp&quot;] = struct {\n        BaseURL string\n        Headers map[string]string\n    }{\n        BaseURL: baseURL,\n        Headers: headers,\n    }\n}\n \nfunc (cf *ClientFactory) SetSSEConfig(baseURL string, headers map[string]string) {\n    cf.configs[&quot;sse&quot;] = struct {\n        BaseURL string\n        Headers map[string]string\n    }{\n        BaseURL: baseURL,\n        Headers: headers,\n    }\n}\n \nfunc (cf *ClientFactory) CreateClient(transport string) (client.Client, error) {\n    switch transport {\n    case &quot;stdio&quot;:\n        config, ok := cf.configs[&quot;stdio&quot;].(client.StdioOptions)\n        if !ok {\n            return nil, fmt.Errorf(&quot;stdio config not set&quot;)\n        }\n        return client.NewStdioClientWithOptions(config)\n \n    case &quot;streamablehttp&quot;:\n        config, ok := cf.configs[&quot;streamablehttp&quot;].(struct {\n            BaseURL string\n            Headers map[string]string\n        })\n        if !ok {\n            return nil, fmt.Errorf(&quot;streamablehttp config not set&quot;)\n        }\n \n        options := []transport.StreamableHTTPCOption{}\n        if len(config.Headers) &gt; 0 {\n            options = append(options, transport.WithHTTPHeaders(config.Headers))\n        }\n \n        return client.NewStreamableHttpClient(config.BaseURL, options...), nil\n \n    case &quot;sse&quot;:\n        config, ok := cf.configs[&quot;sse&quot;].(struct {\n            BaseURL string\n            Headers map[string]string\n        })\n        if !ok {\n            return nil, fmt.Errorf(&quot;sse config not set&quot;)\n        }\n \n        options := []transport.ClientOption{}\n        if len(config.Headers) &gt; 0 {\n            options = append(options, transport.WithHeaders(config.Headers))\n        }\n \n        return client.NewSSEMCPClient(config.BaseURL, options...)\n \n    default:\n        return nil, fmt.Errorf(&quot;unknown transport: %s&quot;, transport)\n    }\n}\n \n// Usage\nfunc demonstrateClientFactory() {\n    factory := NewClientFactory()\n \n    // Configure transports\n    factory.SetStdioConfig(&quot;go&quot;, &quot;run&quot;, &quot;server.go&quot;)\n    factory.SetStreamableHTTPConfig(&quot;http://localhost:8080/mcp&quot;, map[string]string{\n        &quot;Authorization&quot;: &quot;Bearer token&quot;,\n    })\n    factory.SetSSEConfig(&quot;http://localhost:8080/mcp/sse&quot;, map[string]string{\n        &quot;Authorization&quot;: &quot;Bearer token&quot;,\n    })\n \n    // Create client based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    if transport == &quot;&quot; {\n        transport = &quot;stdio&quot;\n    }\n \n    client, err := factory.CreateClient(transport)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer client.Close()\n \n    // Use client...\n}\n","title":"Multi-Transport Client Factory","titles":["Client Transports","Transport Selection"]},"138":{"href":"/clients/transports#logging-configuration","html":"\n<p>All client transports support custom logging.\nEach transport provides a logger option that accepts any implementation of the <code>util.Logger</code> interface.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> myCustomLogger</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">myCustomLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Infof</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">format</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ...</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // TODO</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">myCustomLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">format</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ...</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // TODO</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\nAll client transports support custom logging.\nEach transport provides a logger option that accepts any implementation of the util.Logger interface.\ntype myCustomLogger struct {}\n \nfunc (myCustomLogger) Infof(format string, args ...any) {\n    // TODO\n}\n \nfunc (myCustomLogger) Errorf(format string, args ...any) {\n    // TODO\n}","title":"Logging Configuration","titles":["Client Transports"]},"139":{"href":"/transports/http#streamablehttp-transport","html":"</header>\n<p>StreamableHTTP transport provides traditional request/response communication for MCP servers, perfect for REST-like interactions, stateless clients, and integration with existing web infrastructure.</p>\n","isPage":true,"text":"\nStreamableHTTP transport provides traditional request/response communication for MCP servers, perfect for REST-like interactions, stateless clients, and integration with existing web infrastructure.\n","title":"StreamableHTTP Transport","titles":[]},"140":{"href":"/transports/http#use-cases","html":"\n<p>StreamableHTTP transport excels in scenarios requiring:</p>\n<ul>\n<li><strong>Web services</strong>: Traditional REST API patterns</li>\n<li><strong>Stateless interactions</strong>: Each request is independent</li>\n<li><strong>Load balancing</strong>: Distribute requests across multiple servers</li>\n<li><strong>Caching</strong>: Leverage HTTP caching mechanisms</li>\n<li><strong>Integration</strong>: Work with existing HTTP infrastructure</li>\n<li><strong>Public APIs</strong>: Expose MCP functionality as web APIs</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Microservice architectures</li>\n<li>Public API endpoints</li>\n<li>Integration with API gateways</li>\n<li>Cached data services</li>\n<li>Rate-limited services</li>\n<li>Multi-tenant applications</li>\n</ul>\n","isPage":false,"text":"\nStreamableHTTP transport excels in scenarios requiring:\n\nWeb services: Traditional REST API patterns\nStateless interactions: Each request is independent\nLoad balancing: Distribute requests across multiple servers\nCaching: Leverage HTTP caching mechanisms\nIntegration: Work with existing HTTP infrastructure\nPublic APIs: Expose MCP functionality as web APIs\n\nExample applications:\n\nMicroservice architectures\nPublic API endpoints\nIntegration with API gateways\nCached data services\nRate-limited services\nMulti-tenant applications\n\n","title":"Use Cases","titles":["StreamableHTTP Transport"]},"141":{"href":"/transports/http#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["StreamableHTTP Transport"]},"142":{"href":"/transports/http#basic-streamablehttp-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP API Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add RESTful tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleGetUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Min</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCreateUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search users with filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Max</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Min</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSearchUsers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleUserResource,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start StreamableHTTP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id is required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simulate database lookup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user.ID, user.Name, user.Email, user.Age)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    email </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> email </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name and email are required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate input</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid email format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, email)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create user</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:       age,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> saveUserToDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create user: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;message&quot;:&quot;User created successfully&quot;,&quot;user&quot;:{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user.ID, user.ID, user.Name, user.Email, user.Age)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions and types for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> User</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">       `json:&quot;age&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;created_at&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:    userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isValidEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">email</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;@&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">UnixNano</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> saveUserToDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">user</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSearchUsers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    offset </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Search users with pagination</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    users, total, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchUsersInDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query, limit, offset)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;users&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;John Doe&quot;,&quot;email&quot;:&quot;john@example.com&quot;,&quot;age&quot;:30},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Jane Smith&quot;,&quot;email&quot;:&quot;jane@example.com&quot;,&quot;age&quot;:25}],&quot;total&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;limit&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;offset&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;query&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        total, limit, offset, query)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUserResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserIDFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user.ID, user.Name, user.Email, user.Age),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Additional helper functions</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchUsersInDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">limit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">offset</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    users </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Jane Smith&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jane@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">25</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> users, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(users), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserIDFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract user ID from URI like &quot;users://123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 8</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri[:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;users://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;net/http&quot;\n    &quot;strings&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;StreamableHTTP API Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add RESTful tools\n    s.AddTool(\n        mcp.NewTool(&quot;get_user&quot;,\n            mcp.WithDescription(&quot;Get user information&quot;),\n            mcp.WithString(&quot;user_id&quot;, mcp.Required()),\n        ),\n        handleGetUser,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;create_user&quot;,\n            mcp.WithDescription(&quot;Create a new user&quot;),\n            mcp.WithString(&quot;name&quot;, mcp.Required()),\n            mcp.WithString(&quot;email&quot;, mcp.Required()),\n            mcp.WithNumber(&quot;age&quot;, mcp.Min(0)),\n        ),\n        handleCreateUser,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;search_users&quot;,\n            mcp.WithDescription(&quot;Search users with filters&quot;),\n            mcp.WithString(&quot;query&quot;, mcp.Description(&quot;Search query&quot;)),\n            mcp.WithNumber(&quot;limit&quot;, mcp.DefaultNumber(10), mcp.Max(100)),\n            mcp.WithNumber(&quot;offset&quot;, mcp.DefaultNumber(0), mcp.Min(0)),\n        ),\n        handleSearchUsers,\n    )\n \n    // Add resources\n    s.AddResource(\n        mcp.NewResource(\n            &quot;users://{user_id}&quot;,\n            &quot;User Profile&quot;,\n            mcp.WithResourceDescription(&quot;User profile data&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleUserResource,\n    )\n \n    // Start StreamableHTTP server\n    log.Println(&quot;Starting StreamableHTTP server on :8080&quot;)\n    httpServer := server.NewStreamableHTTPServer(s)\n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleGetUser(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    userID := req.GetString(&quot;user_id&quot;, &quot;&quot;)\n    if userID == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;user_id is required&quot;)\n    }\n    \n    // Simulate database lookup\n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %s&quot;, userID)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}`, \n        user.ID, user.Name, user.Email, user.Age)), nil\n}\n \nfunc handleCreateUser(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    name := req.GetString(&quot;name&quot;, &quot;&quot;)\n    email := req.GetString(&quot;email&quot;, &quot;&quot;)\n    age := req.GetInt(&quot;age&quot;, 0)\n \n    if name == &quot;&quot; || email == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;name and email are required&quot;)\n    }\n \n    // Validate input\n    if !isValidEmail(email) {\n        return nil, fmt.Errorf(&quot;invalid email format: %s&quot;, email)\n    }\n \n    // Create user\n    user := &amp;User{\n        ID:        generateID(),\n        Name:      name,\n        Email:     email,\n        Age:       age,\n        CreatedAt: time.Now(),\n    }\n \n    if err := saveUserToDB(user); err != nil {\n        return nil, fmt.Errorf(&quot;failed to create user: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;message&quot;:&quot;User created successfully&quot;,&quot;user&quot;:{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}}`,\n        user.ID, user.ID, user.Name, user.Email, user.Age)), nil\n}\n \n// Helper functions and types for the examples\ntype User struct {\n    ID        string    `json:&quot;id&quot;`\n    Name      string    `json:&quot;name&quot;`\n    Email     string    `json:&quot;email&quot;`\n    Age       int       `json:&quot;age&quot;`\n    CreatedAt time.Time `json:&quot;created_at&quot;`\n}\n \nfunc getUserFromDB(userID string) (*User, error) {\n    // Placeholder implementation\n    return &amp;User{\n        ID:    userID,\n        Name:  &quot;John Doe&quot;,\n        Email: &quot;john@example.com&quot;,\n        Age:   30,\n    }, nil\n}\n \nfunc isValidEmail(email string) bool {\n    return strings.Contains(email, &quot;@&quot;) &amp;&amp; strings.Contains(email, &quot;.&quot;)\n}\n \nfunc generateID() string {\n    // Placeholder implementation\n    return fmt.Sprintf(&quot;user_%d&quot;, time.Now().UnixNano())\n}\n \nfunc saveUserToDB(user *User) error {\n    // Placeholder implementation\n    return nil\n}\n \nfunc handleSearchUsers(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    query := req.GetString(&quot;query&quot;, &quot;&quot;)\n    limit := req.GetInt(&quot;limit&quot;, 10)\n    offset := req.GetInt(&quot;offset&quot;, 0)\n \n    // Search users with pagination\n    users, total, err := searchUsersInDB(query, limit, offset)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;search failed: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;users&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;John Doe&quot;,&quot;email&quot;:&quot;john@example.com&quot;,&quot;age&quot;:30},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Jane Smith&quot;,&quot;email&quot;:&quot;jane@example.com&quot;,&quot;age&quot;:25}],&quot;total&quot;:%d,&quot;limit&quot;:%d,&quot;offset&quot;:%d,&quot;query&quot;:&quot;%s&quot;}`,\n        total, limit, offset, query)), nil\n}\n \nfunc handleUserResource(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    userID := extractUserIDFromURI(req.Params.URI)\n    \n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %s&quot;, userID)\n    }\n \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}`, user.ID, user.Name, user.Email, user.Age),\n        },\n    }, nil\n}\n \n// Additional helper functions\n \nfunc searchUsersInDB(query string, limit, offset int) ([]*User, int, error) {\n    // Placeholder implementation\n    users := []*User{\n        {ID: &quot;1&quot;, Name: &quot;John Doe&quot;, Email: &quot;john@example.com&quot;, Age: 30},\n        {ID: &quot;2&quot;, Name: &quot;Jane Smith&quot;, Email: &quot;jane@example.com&quot;, Age: 25},\n    }\n    return users, len(users), nil\n}\n \nfunc extractUserIDFromURI(uri string) string {\n    // Extract user ID from URI like &quot;users://123&quot;\n    if len(uri) &gt; 8 &amp;&amp; uri[:8] == &quot;users://&quot; {\n        return uri[8:]\n    }\n    return uri\n}\n","title":"Basic StreamableHTTP Server","titles":["StreamableHTTP Transport","Implementation"]},"143":{"href":"/transports/http#advanced-streamablehttp-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced StreamableHTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add comprehensive tools and resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addCRUDTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addBatchTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addAnalyticsTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting advanced StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithEndpointPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/v1/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHeartbeatInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStateLess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addCRUDTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add CRUD tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addBatchTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add batch processing tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addAnalyticsTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add analytics tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> completed in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logResourceRead</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> completed in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addStreamableHTTPMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Authentication middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Extract and validate auth token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractAuthToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Add user to context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Rate limiting middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            clientIP </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getClientIP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rateLimiter.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Allow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clientIP) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit exceeded&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Caching middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResourceMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Check cache first</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getFromCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI); cached </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // Cache successful results</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                setCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI, result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Minute)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced StreamableHTTP Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add comprehensive tools and resources\n    addCRUDTools(s)\n    addBatchTools(s)\n    addAnalyticsTools(s)\n \n    log.Println(&quot;Starting advanced StreamableHTTP server on :8080&quot;)\n    httpServer := server.NewStreamableHTTPServer(s,\n        server.WithEndpointPath(&quot;/api/v1/mcp&quot;),\n        server.WithHeartbeatInterval(30*time.Second),\n        server.WithStateLess(false),\n    )\n    \n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \n// Helper functions for the advanced example\nfunc addCRUDTools(s *server.MCPServer) {\n    // Placeholder implementation - would add CRUD tools\n}\n \nfunc addBatchTools(s *server.MCPServer) {\n    // Placeholder implementation - would add batch processing tools\n}\n \nfunc addAnalyticsTools(s *server.MCPServer) {\n    // Placeholder implementation - would add analytics tools\n}\n \nfunc logToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    // Placeholder implementation\n    if err != nil {\n        log.Printf(&quot;Tool %s failed: %v&quot;, toolName, err)\n    } else {\n        log.Printf(&quot;Tool %s completed in %v&quot;, toolName, duration)\n    }\n}\n \nfunc logResourceRead(sessionID, uri string, duration time.Duration, err error) {\n    // Placeholder implementation\n    if err != nil {\n        log.Printf(&quot;Resource read %s failed: %v&quot;, uri, err)\n    } else {\n        log.Printf(&quot;Resource read %s completed in %v&quot;, uri, duration)\n    }\n}\n \nfunc addStreamableHTTPMiddleware(s *server.MCPServer) {\n    // Authentication middleware\n    s.AddToolMiddleware(func(next server.ToolHandler) server.ToolHandler {\n        return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            // Extract and validate auth token\n            token := extractAuthToken(ctx)\n            if token == &quot;&quot; {\n                return nil, fmt.Errorf(&quot;authentication required&quot;)\n            }\n            \n            user, err := validateToken(token)\n            if err != nil {\n                return nil, fmt.Errorf(&quot;invalid token: %w&quot;, err)\n            }\n            \n            // Add user to context\n            ctx = context.WithValue(ctx, &quot;user&quot;, user)\n            return next(ctx, req)\n        }\n    })\n \n    // Rate limiting middleware\n    s.AddToolMiddleware(func(next server.ToolHandler) server.ToolHandler {\n        return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            clientIP := getClientIP(ctx)\n            if !rateLimiter.Allow(clientIP) {\n                return nil, fmt.Errorf(&quot;rate limit exceeded&quot;)\n            }\n            return next(ctx, req)\n        }\n    })\n \n    // Caching middleware\n    s.AddResourceMiddleware(func(next server.ResourceHandler) server.ResourceHandler {\n        return func(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n            // Check cache first\n            if cached := getFromCache(req.Params.URI); cached != nil {\n                return cached, nil\n            }\n            \n            result, err := next(ctx, req)\n            if err == nil {\n                // Cache successful results\n                setCache(req.Params.URI, result, 5*time.Minute)\n            }\n            \n            return result, err\n        }\n    })\n}\n","title":"Advanced StreamableHTTP Configuration","titles":["StreamableHTTP Transport","Implementation"]},"144":{"href":"/transports/http#endpoints","html":"\n","isPage":false,"text":"\n","title":"Endpoints","titles":["StreamableHTTP Transport"]},"145":{"href":"/transports/http#standard-mcp-endpoints","html":"\n<p>When you start a StreamableHTTP MCP server, it automatically creates these endpoints:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/initialize     - Initialize MCP session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/list     - List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/call     - Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/resources/list - List available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/resources/read - Read a resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/prompts/list   - List available prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/prompts/get    - Get a prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GET  /mcp/health         - Health check</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GET  /mcp/capabilities   - Server capabilities</span></span></code></pre>\n","isPage":false,"text":"\nWhen you start a StreamableHTTP MCP server, it automatically creates these endpoints:\nPOST /mcp/initialize     - Initialize MCP session\nPOST /mcp/tools/list     - List available tools\nPOST /mcp/tools/call     - Call a tool\nPOST /mcp/resources/list - List available resources\nPOST /mcp/resources/read - Read a resource\nPOST /mcp/prompts/list   - List available prompts\nPOST /mcp/prompts/get    - Get a prompt\nGET  /mcp/health         - Health check\nGET  /mcp/capabilities   - Server capabilities\n","title":"Standard MCP Endpoints","titles":["StreamableHTTP Transport","Endpoints"]},"146":{"href":"/transports/http#custom-endpoints","html":"\n<p>Add custom HTTP endpoints alongside MCP:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Custom StreamableHTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP server with custom routes</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewServeMux</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add MCP endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Handle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add custom endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleStatus)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleMetrics)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleUsersAPI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/upload&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleFileUpload)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mux)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting custom StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListenAndServe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;healthy&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;uptime&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(startTime).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    w.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Header</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content-Type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewEncoder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Encode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(status)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    w.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Header</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content-Type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewEncoder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Encode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUsersAPI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r.Method {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;GET&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleListUsers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;POST&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleCreateUserAPI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;PUT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleUpdateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;DELETE&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleDeleteUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Method not allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusMethodNotAllowed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAdd custom HTTP endpoints alongside MCP:\nfunc main() {\n    s := server.NewMCPServer(&quot;Custom StreamableHTTP Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create HTTP server with custom routes\n    mux := http.NewServeMux()\n    \n    // Add MCP endpoints\n    mux.Handle(&quot;/mcp&quot;, server.NewStreamableHTTPServer(s))\n    \n    // Add custom endpoints\n    mux.HandleFunc(&quot;/api/status&quot;, handleStatus)\n    mux.HandleFunc(&quot;/api/metrics&quot;, handleMetrics)\n    mux.HandleFunc(&quot;/api/users&quot;, handleUsersAPI)\n    mux.HandleFunc(&quot;/api/upload&quot;, handleFileUpload)\n    \n    // Add middleware\n    handler := addMiddleware(mux)\n    \n    log.Println(&quot;Starting custom StreamableHTTP server on :8080&quot;)\n    if err := http.ListenAndServe(&quot;:8080&quot;, handler); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleStatus(w http.ResponseWriter, r *http.Request) {\n    status := map[string]interface{}{\n        &quot;status&quot;:    &quot;healthy&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;version&quot;:   &quot;1.0.0&quot;,\n        &quot;uptime&quot;:    time.Since(startTime).String(),\n    }\n    \n    w.Header().Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n    json.NewEncoder(w).Encode(status)\n}\n \nfunc handleMetrics(w http.ResponseWriter, r *http.Request) {\n    metrics := collectMetrics()\n    \n    w.Header().Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n    json.NewEncoder(w).Encode(metrics)\n}\n \nfunc handleUsersAPI(w http.ResponseWriter, r *http.Request) {\n    switch r.Method {\n    case &quot;GET&quot;:\n        handleListUsers(w, r)\n    case &quot;POST&quot;:\n        handleCreateUserAPI(w, r)\n    case &quot;PUT&quot;:\n        handleUpdateUser(w, r)\n    case &quot;DELETE&quot;:\n        handleDeleteUser(w, r)\n    default:\n        http.Error(w, &quot;Method not allowed&quot;, http.StatusMethodNotAllowed)\n    }\n}\n","title":"Custom Endpoints","titles":["StreamableHTTP Transport","Endpoints"]},"147":{"href":"/transports/http#requestresponse-patterns","html":"\n","isPage":false,"text":"\n","title":"Request/Response Patterns","titles":["StreamableHTTP Transport","Endpoints"]},"148":{"href":"/transports/http#standard-mcp-request","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Content-Type: application/json</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools/call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nPOST /mcp/tools/call\nContent-Type: application/json\n \n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;method&quot;: &quot;tools/call&quot;,\n  &quot;params&quot;: {\n    &quot;name&quot;: &quot;search_users&quot;,\n    &quot;arguments&quot;: {\n      &quot;query&quot;: &quot;john&quot;,\n      &quot;limit&quot;: 10,\n      &quot;offset&quot;: 0\n    }\n  }\n}\n","title":"Standard MCP Request","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"149":{"href":"/transports/http#standard-mcp-response","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;{</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">users</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:[...],</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">total</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:25,</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">limit</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:10,</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">offset</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:0}&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;result&quot;: {\n    &quot;content&quot;: [\n      {\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;text&quot;: &quot;{\\&quot;users\\&quot;:[...],\\&quot;total\\&quot;:25,\\&quot;limit\\&quot;:10,\\&quot;offset\\&quot;:0}&quot;\n      }\n    ]\n  }\n}\n","title":"Standard MCP Response","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"150":{"href":"/transports/http#error-response","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;error&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-32602</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;details&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id is required&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;error&quot;: {\n    &quot;code&quot;: -32602,\n    &quot;message&quot;: &quot;Invalid params&quot;,\n    &quot;data&quot;: {\n      &quot;details&quot;: &quot;user_id is required&quot;\n    }\n  }\n}\n","title":"Error Response","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"151":{"href":"/transports/http#session-management","html":"\n","isPage":false,"text":"\n","title":"Session Management","titles":["StreamableHTTP Transport"]},"152":{"href":"/transports/http#stateful-vs-stateless","html":"\n","isPage":false,"text":"\n","title":"Stateful vs Stateless","titles":["StreamableHTTP Transport","Session Management"]},"153":{"href":"/transports/http#stateless-design-recommended","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Each request is independent</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStatelessTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract all needed information from request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserFromToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    params </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process without relying on server state</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID, params)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Use external storage for persistence</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserPreferences</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Load from database, cache, etc.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> loadFromRedis</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:prefs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Each request is independent\nfunc handleStatelessTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Extract all needed information from request\n    userID := extractUserFromToken(ctx)\n    params := req.Params.Arguments\n    \n    // Process without relying on server state\n    result, err := processRequest(userID, params)\n    if err != nil {\n        return nil, err\n    }\n    \n    return mcp.NewToolResultJSON(result)\n}\n \n// Use external storage for persistence\nfunc getUserPreferences(userID string) (map[string]interface{}, error) {\n    // Load from database, cache, etc.\n    return loadFromRedis(fmt.Sprintf(&quot;user:%s:prefs&quot;, userID))\n}\n","title":"Stateless Design (Recommended)","titles":["StreamableHTTP Transport","Session Management","Stateful vs Stateless"]},"154":{"href":"/transports/http#stateful-design-when-needed","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> HTTPSessionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cleanup  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ticker</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> HTTPSession</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID          </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    LastAccess  </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Data        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ExpiresAt   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewHTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cleanup:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupExpiredSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:         </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        UserID:     userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        LastAccess: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Data:       </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ExpiresAt:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.sessions[session.ID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.ExpiresAt) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Update last access</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session.LastAccess </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session.ExpiresAt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupExpiredSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.cleanup.C {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        now </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> id, session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> now.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.ExpiresAt) {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.sessions, id)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype HTTPSessionManager struct {\n    sessions map[string]*HTTPSession\n    mutex    sync.RWMutex\n    cleanup  *time.Ticker\n}\n \ntype HTTPSession struct {\n    ID          string\n    UserID      string\n    CreatedAt   time.Time\n    LastAccess  time.Time\n    Data        map[string]interface{}\n    ExpiresAt   time.Time\n}\n \nfunc NewHTTPSessionManager() *HTTPSessionManager {\n    sm := &amp;HTTPSessionManager{\n        sessions: make(map[string]*HTTPSession),\n        cleanup:  time.NewTicker(1 * time.Minute),\n    }\n    \n    go sm.cleanupExpiredSessions()\n    return sm\n}\n \nfunc (sm *HTTPSessionManager) CreateSession(userID string) *HTTPSession {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    session := &amp;HTTPSession{\n        ID:         generateSessionID(),\n        UserID:     userID,\n        CreatedAt:  time.Now(),\n        LastAccess: time.Now(),\n        Data:       make(map[string]interface{}),\n        ExpiresAt:  time.Now().Add(30 * time.Minute),\n    }\n    \n    sm.sessions[session.ID] = session\n    return session\n}\n \nfunc (sm *HTTPSessionManager) GetSession(sessionID string) (*HTTPSession, bool) {\n    sm.mutex.RLock()\n    defer sm.mutex.RUnlock()\n    \n    session, exists := sm.sessions[sessionID]\n    if !exists || time.Now().After(session.ExpiresAt) {\n        return nil, false\n    }\n    \n    // Update last access\n    session.LastAccess = time.Now()\n    session.ExpiresAt = time.Now().Add(30 * time.Minute)\n    \n    return session, true\n}\n \nfunc (sm *HTTPSessionManager) cleanupExpiredSessions() {\n    for range sm.cleanup.C {\n        sm.mutex.Lock()\n        now := time.Now()\n        \n        for id, session := range sm.sessions {\n            if now.After(session.ExpiresAt) {\n                delete(sm.sessions, id)\n            }\n        }\n        \n        sm.mutex.Unlock()\n    }\n}\n","title":"Stateful Design (When Needed)","titles":["StreamableHTTP Transport","Session Management","Stateful vs Stateless"]},"155":{"href":"/transports/http#authentication-and-authorization","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AuthMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jwtSecret []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userStore </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserStore</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">secret</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">store</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserStore</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        jwtSecret: secret,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        userStore: store,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Middleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Extract token from Authorization header</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        authHeader </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authHeader, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Missing or invalid authorization header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authHeader, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Validate JWT token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        claims, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">validateJWT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Load user information</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.userStore.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(claims.UserID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add user to request context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        next.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">validateJWT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tokenString</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Note: This example uses a hypothetical JWT library</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // In practice, you would use a real JWT library like github.com/golang-jwt/jwt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    token, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> jwt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ParseWithClaims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tokenString, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">jwt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.jwtSecret, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> claims, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token.Claims.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token.Valid {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> claims, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Claims</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;user_id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Role   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;role&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    jwt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StandardClaims</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype AuthMiddleware struct {\n    jwtSecret []byte\n    userStore UserStore\n}\n \nfunc NewAuthMiddleware(secret []byte, store UserStore) *AuthMiddleware {\n    return &amp;AuthMiddleware{\n        jwtSecret: secret,\n        userStore: store,\n    }\n}\n \nfunc (m *AuthMiddleware) Middleware(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        // Extract token from Authorization header\n        authHeader := r.Header.Get(&quot;Authorization&quot;)\n        if !strings.HasPrefix(authHeader, &quot;Bearer &quot;) {\n            http.Error(w, &quot;Missing or invalid authorization header&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        token := strings.TrimPrefix(authHeader, &quot;Bearer &quot;)\n        \n        // Validate JWT token\n        claims, err := m.validateJWT(token)\n        if err != nil {\n            http.Error(w, &quot;Invalid token&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        // Load user information\n        user, err := m.userStore.GetUser(claims.UserID)\n        if err != nil {\n            http.Error(w, &quot;User not found&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        // Add user to request context\n        ctx := context.WithValue(r.Context(), &quot;user&quot;, user)\n        next.ServeHTTP(w, r.WithContext(ctx))\n    })\n}\n \nfunc (m *AuthMiddleware) validateJWT(tokenString string) (*Claims, error) {\n    // Note: This example uses a hypothetical JWT library\n    // In practice, you would use a real JWT library like github.com/golang-jwt/jwt\n    token, err := jwt.ParseWithClaims(tokenString, &amp;Claims{}, func(token *jwt.Token) (interface{}, error) {\n        return m.jwtSecret, nil\n    })\n    \n    if err != nil {\n        return nil, err\n    }\n    \n    if claims, ok := token.Claims.(*Claims); ok &amp;&amp; token.Valid {\n        return claims, nil\n    }\n    \n    return nil, fmt.Errorf(&quot;invalid token&quot;)\n}\n \ntype Claims struct {\n    UserID string `json:&quot;user_id&quot;`\n    Role   string `json:&quot;role&quot;`\n    jwt.StandardClaims\n}\n","title":"Authentication and Authorization","titles":["StreamableHTTP Transport","Session Management"]},"156":{"href":"/transports/http#request-headers","html":"\n<p>The StreamableHTTP transport now passes HTTP request headers to MCP handlers. This allows you to access the original HTTP headers that were sent with the request in your tool and resource handlers.</p>\n","isPage":false,"text":"\nThe StreamableHTTP transport now passes HTTP request headers to MCP handlers. This allows you to access the original HTTP headers that were sent with the request in your tool and resource handlers.\n","title":"Request Headers","titles":["StreamableHTTP Transport","Session Management"]},"157":{"href":"/transports/http#accessing-headers-in-handlers","html":"\n<p>Headers are available in all MCP request objects:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access request headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Header</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use headers for authentication, tracing, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access other headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requestID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;X-Request-ID&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userAgent </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Rest of your handler code...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>This works for all MCP request types including:</p>\n<ul>\n<li><code>CallToolRequest</code></li>\n<li><code>ReadResourceRequest</code></li>\n<li><code>ListToolsRequest</code></li>\n<li><code>ListResourcesRequest</code></li>\n<li><code>InitializeRequest</code></li>\n<li>And other MCP request types</li>\n</ul>\n<p>The headers are automatically populated by the transport layer and are available in your handlers without any additional configuration.</p>\n","isPage":false,"text":"\nHeaders are available in all MCP request objects:\nfunc handleGetUser(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Access request headers\n    headers := req.Header\n \n    // Use headers for authentication, tracing, etc.\n    authToken := headers.Get(&quot;Authorization&quot;)\n    if authToken == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;authentication required&quot;)\n    }\n    \n    // Access other headers\n    requestID := headers.Get(&quot;X-Request-ID&quot;)\n    userAgent := headers.Get(&quot;User-Agent&quot;)\n    \n    // Rest of your handler code...\n}\nThis works for all MCP request types including:\n\nCallToolRequest\nReadResourceRequest\nListToolsRequest\nListResourcesRequest\nInitializeRequest\nAnd other MCP request types\n\nThe headers are automatically populated by the transport layer and are available in your handlers without any additional configuration.\n","title":"Accessing Headers in Handlers","titles":["StreamableHTTP Transport","Session Management","Request Headers"]},"158":{"href":"/transports/http#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Learn about embedded scenarios</li>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for HTTP transport</li>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Review fundamental server concepts</li>\n</ul>","isPage":false,"text":"\n\nIn-Process Transport - Learn about embedded scenarios\nClient Development - Build MCP clients for HTTP transport\nServer Basics - Review fundamental server concepts\n","title":"Next Steps","titles":["StreamableHTTP Transport"]},"159":{"href":"/transports#transport-options","html":"</header>\n<p>MCP-Go supports multiple transport methods to fit different deployment scenarios and integration patterns. Choose the right transport based on your use case, performance requirements, and client capabilities.</p>\n","isPage":true,"text":"\nMCP-Go supports multiple transport methods to fit different deployment scenarios and integration patterns. Choose the right transport based on your use case, performance requirements, and client capabilities.\n","title":"Transport Options","titles":[]},"160":{"href":"/transports#overview","html":"\n<p>Transport layers handle the communication between MCP clients and servers. Each transport has different characteristics and is optimized for specific scenarios:</p>\n<ul>\n<li><strong><a href=\"/transports/stdio\">STDIO</a></strong> - Standard input/output for command-line tools</li>\n<li><strong><a href=\"/transports/sse\">SSE</a></strong> - Server-Sent Events for web applications</li>\n<li><strong><a href=\"/transports/http\">StreamableHTTP</a></strong> - Traditional HTTP for REST-like interactions</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process</a></strong> - Direct integration for embedded scenarios</li>\n</ul>\n","isPage":false,"text":"\nTransport layers handle the communication between MCP clients and servers. Each transport has different characteristics and is optimized for specific scenarios:\n\nSTDIO - Standard input/output for command-line tools\nSSE - Server-Sent Events for web applications\nStreamableHTTP - Traditional HTTP for REST-like interactions\nIn-Process - Direct integration for embedded scenarios\n\n","title":"Overview","titles":["Transport Options"]},"161":{"href":"/transports#transport-comparison","html":"\n<table><thead><tr><th>Transport</th><th>Use Case</th><th>Pros</th><th>Cons</th><th>Sampling Support</th></tr></thead><tbody><tr><td><strong>STDIO</strong></td><td>CLI tools, desktop apps</td><td>Simple, secure, no network</td><td>Single client, local only</td><td>✅ Full support</td></tr><tr><td><strong>SSE</strong></td><td>Web apps, real-time</td><td>Multi-client, real-time, web-friendly</td><td>HTTP overhead, one-way streaming</td><td>❌ Not supported</td></tr><tr><td><strong>StreamableHTTP</strong></td><td>Web services, APIs</td><td>Standard protocol, caching, load balancing</td><td>No real-time, more complex</td><td>❌ Not supported</td></tr><tr><td><strong>In-Process</strong></td><td>Embedded, testing</td><td>No serialization, fastest</td><td>Same process only</td><td>✅ Full support</td></tr></tbody></table>\n","isPage":false,"text":"\nTransportUse CaseProsConsSampling SupportSTDIOCLI tools, desktop appsSimple, secure, no networkSingle client, local only✅ Full supportSSEWeb apps, real-timeMulti-client, real-time, web-friendlyHTTP overhead, one-way streaming❌ Not supportedStreamableHTTPWeb services, APIsStandard protocol, caching, load balancingNo real-time, more complex❌ Not supportedIn-ProcessEmbedded, testingNo serialization, fastestSame process only✅ Full support\n","title":"Transport Comparison","titles":["Transport Options"]},"162":{"href":"/transports#quick-example","html":"\n<p>The same server code works with any transport:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server (transport-agnostic)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Transport Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo back the input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleEcho,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Choose transport based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on port </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, port)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on port </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, port)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleEcho</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    message, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe same server code works with any transport:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;os&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n    &quot;github.com/mark3labs/mcp-go/client&quot;\n)\n \nfunc main() {\n    // Create server (transport-agnostic)\n    s := server.NewMCPServer(&quot;Multi-Transport Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add a simple tool\n    s.AddTool(\n        mcp.NewTool(&quot;echo&quot;,\n            mcp.WithDescription(&quot;Echo back the input&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n        ),\n        handleEcho,\n    )\n \n    // Choose transport based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    port := os.Getenv(&quot;PORT&quot;)\n    if port == &quot;&quot; {\n        port = &quot;8080&quot;\n    }\n \n    switch transport {\n    case &quot;sse&quot;:\n        fmt.Printf(&quot;Starting SSE server on port %s\\n&quot;, port)\n        sseServer := server.NewSSEServer(s)\n        sseServer.Start(&quot;:&quot; + port)\n    case &quot;streamablehttp&quot;:\n        fmt.Printf(&quot;Starting StreamableHTTP server on port %s\\n&quot;, port)\n        httpServer := server.NewStreamableHTTPServer(s)\n        httpServer.Start(&quot;:&quot; + port)\n    default:\n        fmt.Println(&quot;Starting STDIO server&quot;)\n        server.ServeStdio(s)\n    }\n}\n \nfunc handleEcho(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    message, err := req.RequireString(&quot;message&quot;)\n    if err != nil {\n        return nil, err\n    }\n    return mcp.NewToolResultText(fmt.Sprintf(&quot;Echo: %s&quot;, message)), nil\n}\n","title":"Quick Example","titles":["Transport Options"]},"163":{"href":"/transports#choosing-the-right-transport","html":"\n","isPage":false,"text":"\n","title":"Choosing the Right Transport","titles":["Transport Options"]},"164":{"href":"/transports#stdio-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Command-line tools and utilities</li>\n<li>Desktop application integrations</li>\n<li>Local development and testing</li>\n<li>Single-user scenarios</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>File system tools for IDEs</li>\n<li>Local database utilities</li>\n<li>Development workflow automation</li>\n<li>System administration tools</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nCommand-line tools and utilities\nDesktop application integrations\nLocal development and testing\nSingle-user scenarios\n\nExample use cases:\n\nFile system tools for IDEs\nLocal database utilities\nDevelopment workflow automation\nSystem administration tools\n\n","title":"STDIO Transport","titles":["Transport Options","Choosing the Right Transport"]},"165":{"href":"/transports#sse-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Web applications requiring real-time updates</li>\n<li>Browser-based LLM interfaces</li>\n<li>Multi-user collaborative tools</li>\n<li>Dashboard and monitoring applications</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Web-based chat interfaces</li>\n<li>Real-time data visualization</li>\n<li>Collaborative document editing</li>\n<li>Live system monitoring</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nWeb applications requiring real-time updates\nBrowser-based LLM interfaces\nMulti-user collaborative tools\nDashboard and monitoring applications\n\nExample use cases:\n\nWeb-based chat interfaces\nReal-time data visualization\nCollaborative document editing\nLive system monitoring\n\n","title":"SSE Transport","titles":["Transport Options","Choosing the Right Transport"]},"166":{"href":"/transports#streamablehttp-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Traditional web services</li>\n<li>REST API integrations</li>\n<li>Load-balanced deployments</li>\n<li>Stateless interactions</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Microservice architectures</li>\n<li>Public API endpoints</li>\n<li>Integration with existing HTTP infrastructure</li>\n<li>Cached or rate-limited services</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nTraditional web services\nREST API integrations\nLoad-balanced deployments\nStateless interactions\n\nExample use cases:\n\nMicroservice architectures\nPublic API endpoints\nIntegration with existing HTTP infrastructure\nCached or rate-limited services\n\n","title":"StreamableHTTP Transport","titles":["Transport Options","Choosing the Right Transport"]},"167":{"href":"/transports#in-process-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Embedded MCP servers</li>\n<li>Testing and development</li>\n<li>High-performance scenarios</li>\n<li>Library integrations</li>\n<li>Sampling-enabled applications</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Testing MCP implementations</li>\n<li>Embedded analytics engines</li>\n<li>High-frequency trading systems</li>\n<li>Real-time game servers</li>\n<li>LLM-powered applications with bidirectional communication</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nEmbedded MCP servers\nTesting and development\nHigh-performance scenarios\nLibrary integrations\nSampling-enabled applications\n\nExample use cases:\n\nTesting MCP implementations\nEmbedded analytics engines\nHigh-frequency trading systems\nReal-time game servers\nLLM-powered applications with bidirectional communication\n\n","title":"In-Process Transport","titles":["Transport Options","Choosing the Right Transport"]},"168":{"href":"/transports#transport-configuration","html":"\n","isPage":false,"text":"\n","title":"Transport Configuration","titles":["Transport Options"]},"169":{"href":"/transports#environment-based-selection","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> startServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;inprocess&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Note: In-process transport doesn&#x27;t use network ports</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // This would typically be used differently in practice</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Keep the process running</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;:8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc startServer(s *server.MCPServer) error {\n    switch os.Getenv(&quot;MCP_TRANSPORT&quot;) {\n    case &quot;sse&quot;:\n        sseServer := server.NewSSEServer(s)\n        return sseServer.Start(getPort())\n    case &quot;streamablehttp&quot;:\n        httpServer := server.NewStreamableHTTPServer(s)\n        return httpServer.Start(getPort())\n    case &quot;inprocess&quot;:\n        // Note: In-process transport doesn&#x27;t use network ports\n        // This would typically be used differently in practice\n        client := client.NewInProcessClient(s)\n        defer client.Close()\n        // Keep the process running\n        select {}\n    default:\n        return server.ServeStdio(s)\n    }\n}\n \nfunc getPort() string {\n    if port := os.Getenv(&quot;PORT&quot;); port != &quot;&quot; {\n        return &quot;:&quot; + port\n    }\n    return &quot;:8080&quot;\n}\n","title":"Environment-Based Selection","titles":["Transport Options","Transport Configuration"]},"170":{"href":"/transports#multi-transport-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Transport&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add your tools, resources, prompts...</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start multiple transports concurrently with proper error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;STDIO server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;STDIO server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on :8080...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on :8081...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8081&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for any server to fail</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">errChan:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper function for the multi-transport example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add tools, resources, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Multi-Transport&quot;, &quot;1.0.0&quot;)\n    \n    // Add your tools, resources, prompts...\n    setupServer(s)\n    \n    // Start multiple transports concurrently with proper error handling\n    errChan := make(chan error, 3)\n    \n    go func() {\n        log.Println(&quot;Starting STDIO server...&quot;)\n        if err := server.ServeStdio(s); err != nil {\n            log.Printf(&quot;STDIO server error: %v&quot;, err)\n            errChan &lt;- fmt.Errorf(&quot;STDIO server failed: %w&quot;, err)\n        }\n    }()\n    \n    go func() {\n        log.Println(&quot;Starting SSE server on :8080...&quot;)\n        sseServer := server.NewSSEServer(s)\n        if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n            log.Printf(&quot;SSE server error: %v&quot;, err)\n            errChan &lt;- fmt.Errorf(&quot;SSE server failed: %w&quot;, err)\n        }\n    }()\n    \n    log.Println(&quot;Starting StreamableHTTP server on :8081...&quot;)\n    httpServer := server.NewStreamableHTTPServer(s)\n    if err := httpServer.Start(&quot;:8081&quot;); err != nil {\n        log.Printf(&quot;StreamableHTTP server error: %v&quot;, err)\n        errChan &lt;- fmt.Errorf(&quot;StreamableHTTP server failed: %w&quot;, err)\n    }\n    \n    // Wait for any server to fail\n    select {\n    case err := &lt;-errChan:\n        log.Printf(&quot;Server failed: %v&quot;, err)\n        return\n    }\n}\n \n// Helper function for the multi-transport example\nfunc setupServer(s *server.MCPServer) {\n    // Placeholder implementation - would add tools, resources, etc.\n}\n","title":"Multi-Transport Server","titles":["Transport Options","Transport Configuration"]},"171":{"href":"/transports#performance-considerations","html":"\n","isPage":false,"text":"\n","title":"Performance Considerations","titles":["Transport Options"]},"172":{"href":"/transports#latency-comparison","html":"\n<ul>\n<li><strong>In-Process</strong>: ~1μs (no serialization)</li>\n<li><strong>STDIO</strong>: ~100μs (local pipes)</li>\n<li><strong>HTTP/SSE</strong>: ~1-10ms (network + HTTP overhead)</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: ~1μs (no serialization)\nSTDIO: ~100μs (local pipes)\nHTTP/SSE: ~1-10ms (network + HTTP overhead)\n\n","title":"Latency Comparison","titles":["Transport Options","Performance Considerations"]},"173":{"href":"/transports#throughput-comparison","html":"\n<ul>\n<li><strong>In-Process</strong>: Limited by CPU/memory</li>\n<li><strong>STDIO</strong>: Limited by pipe buffers (~64KB)</li>\n<li><strong>HTTP/SSE</strong>: Limited by network bandwidth</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: Limited by CPU/memory\nSTDIO: Limited by pipe buffers (~64KB)\nHTTP/SSE: Limited by network bandwidth\n\n","title":"Throughput Comparison","titles":["Transport Options","Performance Considerations"]},"174":{"href":"/transports#memory-usage","html":"\n<ul>\n<li><strong>In-Process</strong>: Shared memory space</li>\n<li><strong>STDIO</strong>: Minimal overhead</li>\n<li><strong>HTTP/SSE</strong>: Connection pooling, request buffering</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: Shared memory space\nSTDIO: Minimal overhead\nHTTP/SSE: Connection pooling, request buffering\n\n","title":"Memory Usage","titles":["Transport Options","Performance Considerations"]},"175":{"href":"/transports#security-considerations","html":"\n","isPage":false,"text":"\n","title":"Security Considerations","titles":["Transport Options"]},"176":{"href":"/transports#stdio-transport-1","html":"\n<ul>\n<li><strong>Pros</strong>: No network exposure, process isolation</li>\n<li><strong>Cons</strong>: Inherits parent process permissions</li>\n<li><strong>Best practices</strong>: Validate all inputs, use least privilege</li>\n</ul>\n","isPage":false,"text":"\n\nPros: No network exposure, process isolation\nCons: Inherits parent process permissions\nBest practices: Validate all inputs, use least privilege\n\n","title":"STDIO Transport","titles":["Transport Options","Security Considerations"]},"177":{"href":"/transports#network-transports-ssehttp","html":"\n<ul>\n<li><strong>Authentication</strong>: Implement proper auth middleware</li>\n<li><strong>Authorization</strong>: Validate permissions per request</li>\n<li><strong>Rate limiting</strong>: Prevent abuse and DoS</li>\n<li><strong>HTTPS</strong>: Always use TLS in production</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Example with security middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Secure Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rateLimitMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n\nAuthentication: Implement proper auth middleware\nAuthorization: Validate permissions per request\nRate limiting: Prevent abuse and DoS\nHTTPS: Always use TLS in production\n\n// Example with security middleware\ns := server.NewMCPServer(&quot;Secure Server&quot;, &quot;1.0.0&quot;,\n    server.WithToolMiddleware(authMiddleware),\n    server.WithToolMiddleware(rateLimitMiddleware),\n    server.WithRecovery(),\n)\n","title":"Network Transports (SSE/HTTP)","titles":["Transport Options","Security Considerations"]},"178":{"href":"/transports#next-steps","html":"\n<p>Explore each transport in detail:</p>\n<ul>\n<li><strong><a href=\"/transports/stdio\">STDIO Transport</a></strong> - Command-line integration</li>\n<li><strong><a href=\"/transports/sse\">SSE Transport</a></strong> - Real-time web applications</li>\n<li><strong><a href=\"/transports/http\">StreamableHTTP Transport</a></strong> - Traditional web services</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Embedded scenarios</li>\n</ul>","isPage":false,"text":"\nExplore each transport in detail:\n\nSTDIO Transport - Command-line integration\nSSE Transport - Real-time web applications\nStreamableHTTP Transport - Traditional web services\nIn-Process Transport - Embedded scenarios\n","title":"Next Steps","titles":["Transport Options"]},"179":{"href":"/transports/inprocess#in-process-transport","html":"</header>\n<p>In-process transport enables direct integration of MCP servers within the same process, eliminating network overhead and providing seamless integration for embedded scenarios.</p>\n","isPage":true,"text":"\nIn-process transport enables direct integration of MCP servers within the same process, eliminating network overhead and providing seamless integration for embedded scenarios.\n","title":"In-Process Transport","titles":[]},"180":{"href":"/transports/inprocess#use-cases","html":"\n<p>In-process transport is perfect for:</p>\n<ul>\n<li><strong>Embedded servers</strong>: MCP functionality within existing applications</li>\n<li><strong>Testing and development</strong>: Fast, reliable testing without network overhead</li>\n<li><strong>Library integrations</strong>: MCP as a library component</li>\n<li><strong>Single-process architectures</strong>: Monolithic applications with MCP capabilities</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Desktop applications with plugin architectures</li>\n<li>Testing frameworks</li>\n<li>Embedded analytics engines</li>\n<li>Game engines with AI tool integration</li>\n</ul>\n","isPage":false,"text":"\nIn-process transport is perfect for:\n\nEmbedded servers: MCP functionality within existing applications\nTesting and development: Fast, reliable testing without network overhead\nLibrary integrations: MCP as a library component\nSingle-process architectures: Monolithic applications with MCP capabilities\n\nExample applications:\n\nDesktop applications with plugin architectures\nTesting frameworks\nEmbedded analytics engines\nGame engines with AI tool integration\n\n","title":"Use Cases","titles":["In-Process Transport"]},"181":{"href":"/transports/inprocess#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["In-Process Transport"]},"182":{"href":"/transports/inprocess#basic-in-process-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Calculator Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add calculator tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform basic mathematical calculations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The operation to perform&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;First number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Second number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCalculate,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the calculator</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract text from the first content item</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AsTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, textContent.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown operation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, operation)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.2f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n    &quot;github.com/mark3labs/mcp-go/client&quot;\n)\n \nfunc main() {\n    // Create server\n    s := server.NewMCPServer(&quot;Calculator Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add calculator tool\n    s.AddTool(\n        mcp.NewTool(&quot;calculate&quot;,\n            mcp.WithDescription(&quot;Perform basic mathematical calculations&quot;),\n            mcp.WithString(&quot;operation&quot;, \n                mcp.Required(),\n                mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n                mcp.Description(&quot;The operation to perform&quot;),\n            ),\n            mcp.WithNumber(&quot;x&quot;, mcp.Required(), mcp.Description(&quot;First number&quot;)),\n            mcp.WithNumber(&quot;y&quot;, mcp.Required(), mcp.Description(&quot;Second number&quot;)),\n        ),\n        handleCalculate,\n    )\n \n    // Create in-process client\n    mcpClient, err := client.NewInProcessClient(s)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer mcpClient.Close()\n \n    ctx := context.Background()\n \n    // Initialize\n    _, err = mcpClient.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools: &amp;mcp.ToolsCapability{},\n            },\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;test-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Use the calculator\n    result, err := mcpClient.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: &quot;add&quot;,\n                &quot;x&quot;:         10.0,\n                &quot;y&quot;:         5.0,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Extract text from the first content item\n    if len(result.Content) &gt; 0 {\n        if textContent, ok := mcp.AsTextContent(result.Content[0]); ok {\n            fmt.Printf(&quot;Result: %s\\n&quot;, textContent.Text)\n        }\n    }\n}\n \nfunc handleCalculate(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    operation := req.GetString(&quot;operation&quot;, &quot;&quot;)\n    x := req.GetFloat(&quot;x&quot;, 0)\n    y := req.GetFloat(&quot;y&quot;, 0)\n \n    var result float64\n    switch operation {\n    case &quot;add&quot;:\n        result = x + y\n    case &quot;subtract&quot;:\n        result = x - y\n    case &quot;multiply&quot;:\n        result = x * y\n    case &quot;divide&quot;:\n        if y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = x / y\n    default:\n        return nil, fmt.Errorf(&quot;unknown operation: %s&quot;, operation)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%.2f&quot;, result)), nil\n}\n","title":"Basic In-Process Server","titles":["In-Process Transport","Implementation"]},"183":{"href":"/transports/inprocess#embedded-application-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Embedded MCP server in a larger application</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Application</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InProcessClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config: config,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create embedded MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Embedded Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add application-specific tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addApplicationTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client for internal use</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(app.mcpServer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        panic</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    AppName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Debug   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addApplicationTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Application status tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_app_status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get current application status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;app_name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;debug&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%t</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;status&quot;:&quot;running&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.AppName, app.config.Debug)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configuration tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;update_config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Update application configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            key </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Update configuration based on key</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;debug&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.Debug </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;true&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;app_name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.AppName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown config key: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, key)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Updated </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, key, value)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessWithMCP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">operation</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use MCP tools internally for processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: operation,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract text from the first content item</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AsTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;no result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        AppName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My App&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Debug:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the embedded MCP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;embedded-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use MCP functionality within the application</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessWithMCP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Application result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Embedded MCP server in a larger application\ntype Application struct {\n    mcpServer *server.MCPServer\n    mcpClient *client.InProcessClient\n    config    *Config\n}\n \nfunc NewApplication(config *Config) *Application {\n    app := &amp;Application{\n        config: config,\n    }\n \n    // Create embedded MCP server\n    app.mcpServer = server.NewMCPServer(&quot;Embedded Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add application-specific tools\n    app.addApplicationTools()\n \n    // Create in-process client for internal use\n    var err error\n    app.mcpClient, err = client.NewInProcessClient(app.mcpServer)\n    if err != nil {\n        panic(err)\n    }\n \n    return app\n}\n \ntype Config struct {\n    AppName string\n    Debug   bool\n}\n \nfunc (app *Application) addApplicationTools() {\n    // Application status tool\n    app.mcpServer.AddTool(\n        mcp.NewTool(&quot;get_app_status&quot;,\n            mcp.WithDescription(&quot;Get current application status&quot;),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            return mcp.NewToolResultText(fmt.Sprintf(`{&quot;app_name&quot;:&quot;%s&quot;,&quot;debug&quot;:%t,&quot;status&quot;:&quot;running&quot;}`, \n                app.config.AppName, app.config.Debug)), nil\n        },\n    )\n \n    // Configuration tool\n    app.mcpServer.AddTool(\n        mcp.NewTool(&quot;update_config&quot;,\n            mcp.WithDescription(&quot;Update application configuration&quot;),\n            mcp.WithString(&quot;key&quot;, mcp.Required()),\n            mcp.WithString(&quot;value&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            key := req.GetString(&quot;key&quot;, &quot;&quot;)\n            value := req.GetString(&quot;value&quot;, &quot;&quot;)\n \n            // Update configuration based on key\n            switch key {\n            case &quot;debug&quot;:\n                app.config.Debug = value == &quot;true&quot;\n            case &quot;app_name&quot;:\n                app.config.AppName = value\n            default:\n                return mcp.NewToolResultError(fmt.Sprintf(&quot;unknown config key: %s&quot;, key)), nil\n            }\n \n            return mcp.NewToolResultText(fmt.Sprintf(&quot;Updated %s to %s&quot;, key, value)), nil\n        },\n    )\n}\n \nfunc (app *Application) ProcessWithMCP(ctx context.Context, operation string) (interface{}, error) {\n    // Use MCP tools internally for processing\n    result, err := app.mcpClient.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: operation,\n                &quot;x&quot;:         10.0,\n                &quot;y&quot;:         5.0,\n            },\n        },\n    })\n    if err != nil {\n        return nil, err\n    }\n \n    // Extract text from the first content item\n    if len(result.Content) &gt; 0 {\n        if textContent, ok := mcp.AsTextContent(result.Content[0]); ok {\n            return textContent.Text, nil\n        }\n    }\n    \n    return &quot;no result&quot;, nil\n}\n \n// Usage example\nfunc main() {\n    config := &amp;Config{\n        AppName: &quot;My App&quot;,\n        Debug:   true,\n    }\n \n    app := NewApplication(config)\n    ctx := context.Background()\n \n    // Initialize the embedded MCP client\n    _, err := app.mcpClient.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools: &amp;mcp.ToolsCapability{},\n            },\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;embedded-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Use MCP functionality within the application\n    result, err := app.ProcessWithMCP(ctx, &quot;add&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Application result: %v\\n&quot;, result)\n}\n","title":"Embedded Application Integration","titles":["In-Process Transport","Implementation"]},"184":{"href":"/transports/inprocess#sampling-support","html":"\n<p>In-process transport supports sampling, allowing servers to request LLM completions from clients. This enables bidirectional communication where servers can leverage client-side LLM capabilities.</p>\n","isPage":false,"text":"\nIn-process transport supports sampling, allowing servers to request LLM completions from clients. This enables bidirectional communication where servers can leverage client-side LLM capabilities.\n","title":"Sampling Support","titles":["In-Process Transport"]},"185":{"href":"/transports/inprocess#enabling-sampling","html":"\n<p>To enable sampling in your in-process server, call <code>EnableSampling()</code> during server setup:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// MockSamplingHandler implements client.SamplingHandler for demonstration</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MockSamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MockSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract the user&#x27;s message</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, msg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleUser {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                userMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent.Text</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate a mock response</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mockResponse </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Mock LLM response to: &#x27;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userMessage)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        SamplingMessage: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: mockResponse,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mock-llm-v1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;endTurn&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server with sampling enabled</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sampling-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EnableSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a tool that uses sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Ask the LLM a question using sampling&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        InputSchema: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Properties: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The question to ask the LLM&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Optional system prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Required: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        question, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Create sampling request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                            Text: question,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                SystemPrompt: systemPrompt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxTokens:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Temperature:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Request sampling from client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                    mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error requesting sampling: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Return the LLM response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM Response (model: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        result.Model, result.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">).Text),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with sampling handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mockHandler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MockSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClientWithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer, mockHandler)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start and initialize the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ProtocolVersion </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.LATEST_PROTOCOL_VERSION</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initRequest.Params.ClientInfo </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sampling-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to initialize: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call the tool that uses sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;What is the capital of France?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful geography assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Print the result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, textContent.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo enable sampling in your in-process server, call EnableSampling() during server setup:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \n// MockSamplingHandler implements client.SamplingHandler for demonstration\ntype MockSamplingHandler struct{}\n \nfunc (h *MockSamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Extract the user&#x27;s message\n    var userMessage string\n    for _, msg := range request.Messages {\n        if msg.Role == mcp.RoleUser {\n            if textContent, ok := msg.Content.(mcp.TextContent); ok {\n                userMessage = textContent.Text\n                break\n            }\n        }\n    }\n \n    // Generate a mock response\n    mockResponse := fmt.Sprintf(&quot;Mock LLM response to: &#x27;%s&#x27;&quot;, userMessage)\n \n    return &amp;mcp.CreateMessageResult{\n        SamplingMessage: mcp.SamplingMessage{\n            Role: mcp.RoleAssistant,\n            Content: mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: mockResponse,\n            },\n        },\n        Model:      &quot;mock-llm-v1&quot;,\n        StopReason: &quot;endTurn&quot;,\n    }, nil\n}\n \nfunc main() {\n    // Create server with sampling enabled\n    mcpServer := server.NewMCPServer(&quot;sampling-server&quot;, &quot;1.0.0&quot;)\n    mcpServer.EnableSampling()\n \n    // Add a tool that uses sampling\n    mcpServer.AddTool(mcp.Tool{\n        Name:        &quot;ask_llm&quot;,\n        Description: &quot;Ask the LLM a question using sampling&quot;,\n        InputSchema: mcp.ToolInputSchema{\n            Type: &quot;object&quot;,\n            Properties: map[string]any{\n                &quot;question&quot;: map[string]any{\n                    &quot;type&quot;:        &quot;string&quot;,\n                    &quot;description&quot;: &quot;The question to ask the LLM&quot;,\n                },\n                &quot;system_prompt&quot;: map[string]any{\n                    &quot;type&quot;:        &quot;string&quot;,\n                    &quot;description&quot;: &quot;Optional system prompt&quot;,\n                },\n            },\n            Required: []string{&quot;question&quot;},\n        },\n    }, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        question, err := request.RequireString(&quot;question&quot;)\n        if err != nil {\n            return nil, err\n        }\n \n        systemPrompt := request.GetString(&quot;system_prompt&quot;, &quot;You are a helpful assistant.&quot;)\n \n        // Create sampling request\n        samplingRequest := mcp.CreateMessageRequest{\n            CreateMessageParams: mcp.CreateMessageParams{\n                Messages: []mcp.SamplingMessage{\n                    {\n                        Role: mcp.RoleUser,\n                        Content: mcp.TextContent{\n                            Type: &quot;text&quot;,\n                            Text: question,\n                        },\n                    },\n                },\n                SystemPrompt: systemPrompt,\n                MaxTokens:    1000,\n                Temperature:  0.7,\n            },\n        }\n \n        // Request sampling from client\n        result, err := mcpServer.RequestSampling(ctx, samplingRequest)\n        if err != nil {\n            return &amp;mcp.CallToolResult{\n                Content: []mcp.Content{\n                    mcp.TextContent{\n                        Type: &quot;text&quot;,\n                        Text: fmt.Sprintf(&quot;Error requesting sampling: %v&quot;, err),\n                    },\n                },\n                IsError: true,\n            }, nil\n        }\n \n        // Return the LLM response\n        return &amp;mcp.CallToolResult{\n            Content: []mcp.Content{\n                mcp.TextContent{\n                    Type: &quot;text&quot;,\n                    Text: fmt.Sprintf(&quot;LLM Response (model: %s): %s&quot;,\n                        result.Model, result.Content.(mcp.TextContent).Text),\n                },\n            },\n        }, nil\n    })\n \n    // Create client with sampling handler\n    mockHandler := &amp;MockSamplingHandler{}\n    mcpClient, err := client.NewInProcessClientWithSamplingHandler(mcpServer, mockHandler)\n    if err != nil {\n        log.Fatalf(&quot;Failed to create client: %v&quot;, err)\n    }\n    defer mcpClient.Close()\n \n    // Start and initialize the client\n    ctx := context.Background()\n    if err := mcpClient.Start(ctx); err != nil {\n        log.Fatalf(&quot;Failed to start client: %v&quot;, err)\n    }\n \n    initRequest := mcp.InitializeRequest{}\n    initRequest.Params.ProtocolVersion = mcp.LATEST_PROTOCOL_VERSION\n    initRequest.Params.ClientInfo = mcp.Implementation{\n        Name:    &quot;sampling-client&quot;,\n        Version: &quot;1.0.0&quot;,\n    }\n \n    _, err = mcpClient.Initialize(ctx, initRequest)\n    if err != nil {\n        log.Fatalf(&quot;Failed to initialize: %v&quot;, err)\n    }\n \n    // Call the tool that uses sampling\n    result, err := mcpClient.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;ask_llm&quot;,\n            Arguments: map[string]any{\n                &quot;question&quot;:      &quot;What is the capital of France?&quot;,\n                &quot;system_prompt&quot;: &quot;You are a helpful geography assistant.&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatalf(&quot;Tool call failed: %v&quot;, err)\n    }\n \n    // Print the result\n    if len(result.Content) &gt; 0 {\n        if textContent, ok := result.Content[0].(mcp.TextContent); ok {\n            fmt.Printf(&quot;Tool result: %s\\n&quot;, textContent.Text)\n        }\n    }\n}\n","title":"Enabling Sampling","titles":["In-Process Transport","Sampling Support"]},"186":{"href":"/transports/inprocess#real-llm-integration","html":"\n<p>For production use, replace the mock handler with a real LLM integration:</p>\n","isPage":false,"text":"\nFor production use, replace the mock handler with a real LLM integration:\n","title":"Real LLM Integration","titles":["In-Process Transport","Sampling Support"]},"187":{"href":"/transports/inprocess#openai-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/sashabaranov/go-openai</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> OpenAISamplingHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewOpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">apiKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: openai.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(apiKey),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert MCP messages to OpenAI format</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add system message if provided</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.SystemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role:    openai.ChatMessageRoleSystem,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: request.SystemPrompt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert MCP messages</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, msg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Role {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleUser:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> openai.ChatMessageRoleUser</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.RoleAssistant:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            role </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> openai.ChatMessageRoleAssistant</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msg.Content.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role:    role,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: textContent.Text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create OpenAI request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    req </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> openai</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChatCompletionRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model:       openai.GPT3Dot5Turbo,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxTokens:   request.MaxTokens,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Temperature: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(request.Temperature),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call OpenAI API</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateChatCompletion</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;OpenAI API call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Choices) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no response from OpenAI&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    choice </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Choices[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert stop reason</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> choice.FinishReason {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stop&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;endTurn&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;length&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;maxTokens&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        stopReason </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;other&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        SamplingMessage: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: choice.Message.Content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Model:      resp.Model,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopReason: stopReason,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create OpenAI handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    openaiHandler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewOpenAISamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-api-key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client with OpenAI sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClientWithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer, openaiHandler)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // ... rest of the setup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;github.com/sashabaranov/go-openai&quot;\n)\n \ntype OpenAISamplingHandler struct {\n    client *openai.Client\n}\n \nfunc NewOpenAISamplingHandler(apiKey string) *OpenAISamplingHandler {\n    return &amp;OpenAISamplingHandler{\n        client: openai.NewClient(apiKey),\n    }\n}\n \nfunc (h *OpenAISamplingHandler) CreateMessage(ctx context.Context, request mcp.CreateMessageRequest) (*mcp.CreateMessageResult, error) {\n    // Convert MCP messages to OpenAI format\n    var messages []openai.ChatCompletionMessage\n \n    // Add system message if provided\n    if request.SystemPrompt != &quot;&quot; {\n        messages = append(messages, openai.ChatCompletionMessage{\n            Role:    openai.ChatMessageRoleSystem,\n            Content: request.SystemPrompt,\n        })\n    }\n \n    // Convert MCP messages\n    for _, msg := range request.Messages {\n        var role string\n        switch msg.Role {\n        case mcp.RoleUser:\n            role = openai.ChatMessageRoleUser\n        case mcp.RoleAssistant:\n            role = openai.ChatMessageRoleAssistant\n        }\n \n        if textContent, ok := msg.Content.(mcp.TextContent); ok {\n            messages = append(messages, openai.ChatCompletionMessage{\n                Role:    role,\n                Content: textContent.Text,\n            })\n        }\n    }\n \n    // Create OpenAI request\n    req := openai.ChatCompletionRequest{\n        Model:       openai.GPT3Dot5Turbo,\n        Messages:    messages,\n        MaxTokens:   request.MaxTokens,\n        Temperature: float32(request.Temperature),\n    }\n \n    // Call OpenAI API\n    resp, err := h.client.CreateChatCompletion(ctx, req)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;OpenAI API call failed: %w&quot;, err)\n    }\n \n    if len(resp.Choices) == 0 {\n        return nil, fmt.Errorf(&quot;no response from OpenAI&quot;)\n    }\n \n    choice := resp.Choices[0]\n \n    // Convert stop reason\n    var stopReason string\n    switch choice.FinishReason {\n    case &quot;stop&quot;:\n        stopReason = &quot;endTurn&quot;\n    case &quot;length&quot;:\n        stopReason = &quot;maxTokens&quot;\n    default:\n        stopReason = &quot;other&quot;\n    }\n \n    return &amp;mcp.CreateMessageResult{\n        SamplingMessage: mcp.SamplingMessage{\n            Role: mcp.RoleAssistant,\n            Content: mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: choice.Message.Content,\n            },\n        },\n        Model:      resp.Model,\n        StopReason: stopReason,\n    }, nil\n}\n \n// Usage\nfunc main() {\n    // Create OpenAI handler\n    openaiHandler := NewOpenAISamplingHandler(&quot;your-api-key&quot;)\n    \n    // Create client with OpenAI sampling\n    mcpClient, err := client.NewInProcessClientWithSamplingHandler(mcpServer, openaiHandler)\n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    // ... rest of the setup\n}\n","title":"OpenAI Integration","titles":["In-Process Transport","Sampling Support","Real LLM Integration"]},"188":{"href":"/transports/inprocess#sampling-request-parameters","html":"\n<p>The <code>CreateMessageRequest</code> supports various parameters to control LLM behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Required: Messages to send to the LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: mcp.RoleUser,        </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// or mcp.RoleAssistant</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// or mcp.ImageContent</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your message here&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: System prompt for context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        SystemPrompt: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Maximum tokens to generate</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxTokens: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Temperature for randomness (0.0 to 1.0)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Temperature: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Top-p sampling parameter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        TopP: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.9</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Stop sequences</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopSequences: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\\\</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">n</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\\\</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">n&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe CreateMessageRequest supports various parameters to control LLM behavior:\nsamplingRequest := mcp.CreateMessageRequest{\n    CreateMessageParams: mcp.CreateMessageParams{\n        // Required: Messages to send to the LLM\n        Messages: []mcp.SamplingMessage{\n            {\n                Role: mcp.RoleUser,        // or mcp.RoleAssistant\n                Content: mcp.TextContent{   // or mcp.ImageContent\n                    Type: &quot;text&quot;,\n                    Text: &quot;Your message here&quot;,\n                },\n            },\n        },\n        \n        // Optional: System prompt for context\n        SystemPrompt: &quot;You are a helpful assistant.&quot;,\n        \n        // Optional: Maximum tokens to generate\n        MaxTokens: 1000,\n        \n        // Optional: Temperature for randomness (0.0 to 1.0)\n        Temperature: 0.7,\n        \n        // Optional: Top-p sampling parameter\n        TopP: 0.9,\n        \n        // Optional: Stop sequences\n        StopSequences: []string{&quot;\\\\n\\\\n&quot;},\n    },\n}\n","title":"Sampling Request Parameters","titles":["In-Process Transport","Sampling Support"]},"189":{"href":"/transports/inprocess#error-handling","html":"\n<p>Always handle sampling errors gracefully:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Log the error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Sampling request failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return appropriate error response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Sorry, I couldn&#x27;t process your request at this time.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAlways handle sampling errors gracefully:\nresult, err := mcpServer.RequestSampling(ctx, samplingRequest)\nif err != nil {\n    // Log the error\n    log.Printf(&quot;Sampling request failed: %v&quot;, err)\n    \n    // Return appropriate error response\n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: &quot;Sorry, I couldn&#x27;t process your request at this time.&quot;,\n            },\n        },\n        IsError: true,\n    }, nil\n}\n","title":"Error Handling","titles":["In-Process Transport","Sampling Support"]},"190":{"href":"/transports/inprocess#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for all transports</li>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Learn about web-based scenarios</li>\n<li><strong><a href=\"/servers/advanced\">Server Advanced Features</a></strong> - Explore production-ready features</li>\n<li><strong><a href=\"/clients/advanced-sampling\">Client Sampling</a></strong> - Learn more about client-side sampling implementation</li>\n</ul>","isPage":false,"text":"\n\nClient Development - Build MCP clients for all transports\nHTTP Transport - Learn about web-based scenarios\nServer Advanced Features - Explore production-ready features\nClient Sampling - Learn more about client-side sampling implementation\n","title":"Next Steps","titles":["In-Process Transport"]},"191":{"href":"/transports/sse#sse-transport","html":"</header>\n<p>Server-Sent Events (SSE) transport enables real-time, web-friendly communication between MCP clients and servers. Perfect for web applications that need live updates and multi-client support.</p>\n","isPage":true,"text":"\nServer-Sent Events (SSE) transport enables real-time, web-friendly communication between MCP clients and servers. Perfect for web applications that need live updates and multi-client support.\n","title":"SSE Transport","titles":[]},"192":{"href":"/transports/sse#use-cases","html":"\n<p>SSE transport is ideal for:</p>\n<ul>\n<li><strong>Web applications</strong>: Browser-based LLM interfaces</li>\n<li><strong>Real-time dashboards</strong>: Live data monitoring and visualization</li>\n<li><strong>Collaborative tools</strong>: Multi-user environments with shared state</li>\n<li><strong>Streaming responses</strong>: Long-running operations with progress updates</li>\n<li><strong>Event-driven systems</strong>: Applications that need server-initiated communication</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Web-based chat interfaces with LLMs</li>\n<li>Real-time analytics dashboards</li>\n<li>Collaborative document editing</li>\n<li>Live system monitoring tools</li>\n<li>Streaming data processing interfaces</li>\n</ul>\n","isPage":false,"text":"\nSSE transport is ideal for:\n\nWeb applications: Browser-based LLM interfaces\nReal-time dashboards: Live data monitoring and visualization\nCollaborative tools: Multi-user environments with shared state\nStreaming responses: Long-running operations with progress updates\nEvent-driven systems: Applications that need server-initiated communication\n\nExample applications:\n\nWeb-based chat interfaces with LLMs\nReal-time analytics dashboards\nCollaborative document editing\nLive system monitoring tools\nStreaming data processing interfaces\n\n","title":"Use Cases","titles":["SSE Transport"]},"193":{"href":"/transports/sse#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["SSE Transport"]},"194":{"href":"/transports/sse#basic-sse-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add real-time tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stream_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Stream data with real-time updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleStreamData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;monitor_system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Monitor system metrics in real-time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSystemMonitor,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add dynamic resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;metrics://current&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Current System Metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Real-time system metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCurrentMetrics,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start SSE server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStreamData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access request headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Header</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use headers for authentication, tracing, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access other headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requestID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;X-Request-ID&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userAgent </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    source </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get server from context for notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stream data with progress updates</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> count; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Simulate data processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(source, i)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results, data)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send progress notification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;total&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    count,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> items from </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, count, source),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;source&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;results&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;count&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        source, results, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results))), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">source</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">index</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: source,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;index&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  index,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, index),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSystemMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Monitor system for specified duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ticker </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ticker.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(duration) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> metrics []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">timeout:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;duration&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;metrics&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;samples&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                duration, metrics, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics))), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ticker.C:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Collect current metrics</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            currentMetrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics, currentMetrics)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Send real-time update</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, currentMetrics)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send system metrics notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;cpu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">50.5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;memory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">75.2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;disk&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30.1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCurrentMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;cpu&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;memory&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;disk&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;cpu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;memory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;disk&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;SSE Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add real-time tools\n    s.AddTool(\n        mcp.NewTool(&quot;stream_data&quot;,\n            mcp.WithDescription(&quot;Stream data with real-time updates&quot;),\n            mcp.WithString(&quot;source&quot;, mcp.Required()),\n            mcp.WithNumber(&quot;count&quot;, mcp.DefaultNumber(10)),\n        ),\n        handleStreamData,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;monitor_system&quot;,\n            mcp.WithDescription(&quot;Monitor system metrics in real-time&quot;),\n            mcp.WithNumber(&quot;duration&quot;, mcp.DefaultNumber(60)),\n        ),\n        handleSystemMonitor,\n    )\n \n    // Add dynamic resources\n    s.AddResource(\n        mcp.NewResource(\n            &quot;metrics://current&quot;,\n            &quot;Current System Metrics&quot;,\n            mcp.WithResourceDescription(&quot;Real-time system metrics&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleCurrentMetrics,\n    )\n \n    // Start SSE server\n    log.Println(&quot;Starting SSE server on :8080&quot;)\n    sseServer := server.NewSSEServer(s)\n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleStreamData(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Access request headers\n    headers := req.Header\n \n    // Use headers for authentication, tracing, etc.\n    authToken := headers.Get(&quot;Authorization&quot;)\n    if authToken == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;authentication required&quot;)\n    }\n    \n    // Access other headers\n    requestID := headers.Get(&quot;X-Request-ID&quot;)\n    userAgent := headers.Get(&quot;User-Agent&quot;)\n    \n    source := req.GetString(&quot;source&quot;, &quot;&quot;)\n    count := req.GetInt(&quot;count&quot;, 10)\n \n    // Get server from context for notifications\n    mcpServer := server.ServerFromContext(ctx)\n \n    // Stream data with progress updates\n    var results []map[string]interface{}\n    for i := 0; i &lt; count; i++ {\n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n \n        // Simulate data processing\n        data := generateData(source, i)\n        results = append(results, data)\n \n        // Send progress notification\n        if mcpServer != nil {\n            err := mcpServer.SendNotificationToClient(ctx, &quot;notifications/progress&quot;, map[string]interface{}{\n                &quot;progress&quot;: i + 1,\n                &quot;total&quot;:    count,\n                &quot;message&quot;:  fmt.Sprintf(&quot;Processed %d/%d items from %s&quot;, i+1, count, source),\n            })\n            if err != nil {\n                log.Printf(&quot;Failed to send notification: %v&quot;, err)\n            }\n        }\n \n        time.Sleep(100 * time.Millisecond)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;source&quot;:&quot;%s&quot;,&quot;results&quot;:%v,&quot;count&quot;:%d}`, \n        source, results, len(results))), nil\n}\n \n// Helper functions for the examples\nfunc generateData(source string, index int) map[string]interface{} {\n    return map[string]interface{}{\n        &quot;source&quot;: source,\n        &quot;index&quot;:  index,\n        &quot;value&quot;:  fmt.Sprintf(&quot;data_%d&quot;, index),\n    }\n}\n \nfunc handleSystemMonitor(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    duration := req.GetInt(&quot;duration&quot;, 60)\n    \n    mcpServer := server.ServerFromContext(ctx)\n \n    // Monitor system for specified duration\n    ticker := time.NewTicker(5 * time.Second)\n    defer ticker.Stop()\n \n    timeout := time.After(time.Duration(duration) * time.Second)\n    var metrics []map[string]interface{}\n \n    for {\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        case &lt;-timeout:\n            return mcp.NewToolResultText(fmt.Sprintf(`{&quot;duration&quot;:%d,&quot;metrics&quot;:%v,&quot;samples&quot;:%d}`,\n                duration, metrics, len(metrics))), nil\n        case &lt;-ticker.C:\n            // Collect current metrics\n            currentMetrics := collectSystemMetrics()\n            metrics = append(metrics, currentMetrics)\n \n            // Send real-time update\n            if mcpServer != nil {\n                err := mcpServer.SendNotificationToClient(ctx, &quot;system_metrics&quot;, currentMetrics)\n                if err != nil {\n                    log.Printf(&quot;Failed to send system metrics notification: %v&quot;, err)\n                }\n            }\n        }\n    }\n}\n \nfunc collectSystemMetrics() map[string]interface{} {\n    // Placeholder implementation\n    return map[string]interface{}{\n        &quot;cpu&quot;:    50.5,\n        &quot;memory&quot;: 75.2,\n        &quot;disk&quot;:   30.1,\n    }\n}\n \nfunc handleCurrentMetrics(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    metrics := collectSystemMetrics()\n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     fmt.Sprintf(`{&quot;cpu&quot;:%.1f,&quot;memory&quot;:%.1f,&quot;disk&quot;:%.1f}`, metrics[&quot;cpu&quot;], metrics[&quot;memory&quot;], metrics[&quot;disk&quot;]),\n        },\n    }, nil\n}\n","title":"Basic SSE Server","titles":["SSE Transport","Implementation"]},"195":{"href":"/transports/sse#advanced-sse-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add collaborative tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addCollaborativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addRealTimeResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting advanced SSE server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStaticBasePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAliveInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBaseURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addRealTimeResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add real-time resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addCollaborativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Shared document editing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;edit_document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Edit a shared document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;doc_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithObject</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleDocumentEdit,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Real-time chat</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;send_message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Send a message to all connected clients&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;channel&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;general&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSendMessage,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Live data updates</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subscribe_updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Subscribe to real-time data updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;topic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Optional filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSubscribeUpdates,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced SSE Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add collaborative tools\n    addCollaborativeTools(s)\n    addRealTimeResources(s)\n \n    log.Println(&quot;Starting advanced SSE server on :8080&quot;)\n    sseServer := server.NewSSEServer(s,\n        server.WithStaticBasePath(&quot;/mcp&quot;),\n        server.WithKeepAliveInterval(30*time.Second),\n        server.WithBaseURL(&quot;http://localhost:8080&quot;),\n    )\n    \n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \n// Helper functions for the advanced example\nfunc addRealTimeResources(s *server.MCPServer) {\n    // Placeholder implementation - would add real-time resources\n}\n \nfunc addCollaborativeTools(s *server.MCPServer) {\n    // Shared document editing\n    s.AddTool(\n        mcp.NewTool(&quot;edit_document&quot;,\n            mcp.WithDescription(&quot;Edit a shared document&quot;),\n            mcp.WithString(&quot;doc_id&quot;, mcp.Required()),\n            mcp.WithString(&quot;operation&quot;, mcp.Required()),\n            mcp.WithObject(&quot;data&quot;, mcp.Required()),\n        ),\n        handleDocumentEdit,\n    )\n \n    // Real-time chat\n    s.AddTool(\n        mcp.NewTool(&quot;send_message&quot;,\n            mcp.WithDescription(&quot;Send a message to all connected clients&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n            mcp.WithString(&quot;channel&quot;, mcp.DefaultString(&quot;general&quot;)),\n        ),\n        handleSendMessage,\n    )\n \n    // Live data updates\n    s.AddTool(\n        mcp.NewTool(&quot;subscribe_updates&quot;,\n            mcp.WithDescription(&quot;Subscribe to real-time data updates&quot;),\n            mcp.WithString(&quot;topic&quot;, mcp.Required()),\n            mcp.WithArray(&quot;filters&quot;, mcp.Description(&quot;Optional filters&quot;)),\n        ),\n        handleSubscribeUpdates,\n    )\n}\n","title":"Advanced SSE Configuration","titles":["SSE Transport","Implementation"]},"196":{"href":"/transports/sse#configuration","html":"\n","isPage":false,"text":"\n","title":"Configuration","titles":["SSE Transport"]},"197":{"href":"/transports/sse#sse-server-options","html":"\n<p>The SSE server can be configured with various options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set the base path for SSE endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStaticBasePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure keep-alive interval</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAliveInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set base URL for client connections</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBaseURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure SSE and message endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMessageEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add context function for request processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEContextFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add custom context values from headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>Resulting endpoints:</strong>\n<ul>\n<li>SSE stream: <code>http://localhost:8080/api/mcp/sse</code></li>\n<li>Message endpoint: <code>http://localhost:8080/api/mcp/message</code></li>\n</ul>\n","isPage":false,"text":"\nThe SSE server can be configured with various options:\nsseServer := server.NewSSEServer(s,\n    // Set the base path for SSE endpoints\n    server.WithStaticBasePath(&quot;/api/mcp&quot;),\n    \n    // Configure keep-alive interval\n    server.WithKeepAliveInterval(30*time.Second),\n    \n    // Set base URL for client connections\n    server.WithBaseURL(&quot;http://localhost:8080&quot;),\n    \n    // Configure SSE and message endpoints\n    server.WithSSEEndpoint(&quot;/sse&quot;),\n    server.WithMessageEndpoint(&quot;/message&quot;),\n    \n    // Add context function for request processing\n    server.WithSSEContextFunc(func(ctx context.Context, r *http.Request) context.Context {\n        // Add custom context values from headers\n        return ctx\n    }),\n)\nResulting endpoints:\n\nSSE stream: http://localhost:8080/api/mcp/sse\nMessage endpoint: http://localhost:8080/api/mcp/message\n\n","title":"SSE Server Options","titles":["SSE Transport","Configuration"]},"198":{"href":"/transports/sse#real-time-notifications","html":"\n<p>SSE transport enables real-time server-to-client communication through notifications. Use the server context to send notifications:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleRealtimeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get the MCP server from context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send a notification to the client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom_event&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Real-time update&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;status&quot;:&quot;notification_sent&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nSSE transport enables real-time server-to-client communication through notifications. Use the server context to send notifications:\nfunc handleRealtimeTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Get the MCP server from context\n    mcpServer := server.ServerFromContext(ctx)\n    \n    // Send a notification to the client\n    if mcpServer != nil {\n        err := mcpServer.SendNotificationToClient(ctx, &quot;custom_event&quot;, map[string]interface{}{\n            &quot;message&quot;: &quot;Real-time update&quot;,\n            &quot;timestamp&quot;: time.Now().Unix(),\n        })\n        if err != nil {\n            log.Printf(&quot;Failed to send notification: %v&quot;, err)\n        }\n    }\n    \n    return mcp.NewToolResultText(`{&quot;status&quot;:&quot;notification_sent&quot;}`), nil\n}\n","title":"Real-Time Notifications","titles":["SSE Transport"]},"199":{"href":"/transports/sse#session-management","html":"\n<p>The SSE server automatically handles session management. You can send events to specific sessions using the server&#x27;s notification methods:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send notification to current client session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress_update&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, progressData)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send notification to all connected clients (if supported)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Note: Check the server implementation for broadcast capabilities</span></span></code></pre>\n","isPage":false,"text":"\nThe SSE server automatically handles session management. You can send events to specific sessions using the server&#x27;s notification methods:\n// Send notification to current client session\nmcpServer.SendNotificationToClient(ctx, &quot;progress_update&quot;, progressData)\n \n// Send notification to all connected clients (if supported)\n// Note: Check the server implementation for broadcast capabilities\n","title":"Session Management","titles":["SSE Transport","Real-Time Notifications"]},"200":{"href":"/transports/sse#request-headers","html":"\n<p>Like the StreamableHTTP transport, the SSE transport passes HTTP request headers to MCP handlers. This allows you to access the original HTTP headers that were sent with the SSE connection in your tool and resource handlers.</p>\n","isPage":false,"text":"\nLike the StreamableHTTP transport, the SSE transport passes HTTP request headers to MCP handlers. This allows you to access the original HTTP headers that were sent with the SSE connection in your tool and resource handlers.\n","title":"Request Headers","titles":["SSE Transport","Real-Time Notifications"]},"201":{"href":"/transports/sse#accessing-headers-in-handlers","html":"\n<p>Headers from the SSE connection are available in all MCP request objects:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStreamData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access request headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Header</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use headers for authentication, tracing, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> authToken </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access other headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requestID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;X-Request-ID&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userAgent </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Rest of your handler code...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>This works for all MCP request types including:</p>\n<ul>\n<li><code>CallToolRequest</code></li>\n<li><code>ReadResourceRequest</code></li>\n<li><code>ListToolsRequest</code></li>\n<li><code>ListResourcesRequest</code></li>\n<li><code>InitializeRequest</code></li>\n<li>And other MCP request types</li>\n</ul>\n<p>The headers are automatically populated by the SSE transport layer from the initial SSE connection and are available in your handlers without any additional configuration.</p>\n<p>Note: Since SSE maintains a persistent connection, the headers are captured when the connection is established and remain the same for all requests during that connection&#x27;s lifetime.</p>\n","isPage":false,"text":"\nHeaders from the SSE connection are available in all MCP request objects:\nfunc handleStreamData(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Access request headers\n    headers := req.Header\n \n    // Use headers for authentication, tracing, etc.\n    authToken := headers.Get(&quot;Authorization&quot;)\n    if authToken == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;authentication required&quot;)\n    }\n    \n    // Access other headers\n    requestID := headers.Get(&quot;X-Request-ID&quot;)\n    userAgent := headers.Get(&quot;User-Agent&quot;)\n    \n    // Rest of your handler code...\n    mcpServer := server.ServerFromContext(ctx)\n    // ...\n}\nThis works for all MCP request types including:\n\nCallToolRequest\nReadResourceRequest\nListToolsRequest\nListResourcesRequest\nInitializeRequest\nAnd other MCP request types\n\nThe headers are automatically populated by the SSE transport layer from the initial SSE connection and are available in your handlers without any additional configuration.\nNote: Since SSE maintains a persistent connection, the headers are captured when the connection is established and remain the same for all requests during that connection&#x27;s lifetime.\n","title":"Accessing Headers in Handlers","titles":["SSE Transport","Real-Time Notifications","Request Headers"]},"202":{"href":"/transports/sse#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Learn about traditional web service patterns</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Explore embedded scenarios</li>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for different transports</li>\n</ul>","isPage":false,"text":"\n\nHTTP Transport - Learn about traditional web service patterns\nIn-Process Transport - Explore embedded scenarios\nClient Development - Build MCP clients for different transports\n","title":"Next Steps","titles":["SSE Transport"]},"203":{"href":"/transports/stdio#stdio-transport","html":"</header>\n<p>STDIO (Standard Input/Output) transport is the most common MCP transport method, perfect for command-line tools, desktop applications, and local integrations.</p>\n","isPage":true,"text":"\nSTDIO (Standard Input/Output) transport is the most common MCP transport method, perfect for command-line tools, desktop applications, and local integrations.\n","title":"STDIO Transport","titles":[]},"204":{"href":"/transports/stdio#use-cases","html":"\n<p>STDIO transport excels in scenarios where:</p>\n<ul>\n<li><strong>Command-line tools</strong>: CLI utilities that LLMs can invoke</li>\n<li><strong>Desktop applications</strong>: IDE plugins, text editors, local tools</li>\n<li><strong>Subprocess communication</strong>: Parent processes managing MCP servers</li>\n<li><strong>Local development</strong>: Testing and debugging MCP implementations</li>\n<li><strong>Single-user scenarios</strong>: Personal productivity tools</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>File system browsers for IDEs</li>\n<li>Local database query tools</li>\n<li>Git repository analyzers</li>\n<li>System monitoring utilities</li>\n<li>Development workflow automation</li>\n</ul>\n","isPage":false,"text":"\nSTDIO transport excels in scenarios where:\n\nCommand-line tools: CLI utilities that LLMs can invoke\nDesktop applications: IDE plugins, text editors, local tools\nSubprocess communication: Parent processes managing MCP servers\nLocal development: Testing and debugging MCP implementations\nSingle-user scenarios: Personal productivity tools\n\nExample applications:\n\nFile system browsers for IDEs\nLocal database query tools\nGit repository analyzers\nSystem monitoring utilities\nDevelopment workflow automation\n\n","title":"Use Cases","titles":["STDIO Transport"]},"205":{"href":"/transports/stdio#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["STDIO Transport"]},"206":{"href":"/transports/stdio#basic-stdio-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">path/filepath</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add file listing tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;list_files&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List files in a directory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Directory path to list&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBoolean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List files recursively&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleListFiles,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add file content resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;file://{path}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;File Content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Read file contents&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleFileContent,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start STDIO server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.Stderr, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleListFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    recursive, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Security: validate path</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    files, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, recursive)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list files: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;path&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;files&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;count&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;recursive&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%t</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        path, files, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(files), recursive)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleFileContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractPathFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">detectMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Clean the path to resolve any . or .. components</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clean </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Clean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check for directory traversal patterns</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For absolute paths, ensure they&#x27;re within a safe base directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsAbs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Define safe base directories (adjust as needed for your use case)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        safeBaseDirs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/tmp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/var/tmp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/home&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/Users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// macOS</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check if the path starts with any safe base directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, baseDir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> safeBaseDirs {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, baseDir) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For relative paths, ensure they don&#x27;t escape the current directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">recursive</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file1.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file2.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractPathFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> detectMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simple MIME type detection based on extension</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ext </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Ext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ext {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/plain&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/json&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.html&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/html&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/octet-stream&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;os&quot;\n    &quot;path/filepath&quot;\n    &quot;strings&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;File Tools&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add file listing tool\n    s.AddTool(\n        mcp.NewTool(&quot;list_files&quot;,\n            mcp.WithDescription(&quot;List files in a directory&quot;),\n            mcp.WithString(&quot;path&quot;, \n                mcp.Required(),\n                mcp.Description(&quot;Directory path to list&quot;),\n            ),\n            mcp.WithBoolean(&quot;recursive&quot;,\n                mcp.DefaultBool(false),\n                mcp.Description(&quot;List files recursively&quot;),\n            ),\n        ),\n        handleListFiles,\n    )\n \n    // Add file content resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;file://{path}&quot;,\n            &quot;File Content&quot;,\n            mcp.WithResourceDescription(&quot;Read file contents&quot;),\n            mcp.WithMIMEType(&quot;text/plain&quot;),\n        ),\n        handleFileContent,\n    )\n \n    // Start STDIO server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Fprintf(os.Stderr, &quot;Server error: %v\\n&quot;, err)\n        os.Exit(1)\n    }\n}\n \nfunc handleListFiles(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    recursive, err := req.RequireBool(&quot;recursive&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n \n    // Security: validate path\n    if !isValidPath(path) {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;invalid path: %s&quot;, path)), nil\n    }\n \n    files, err := listFiles(path, recursive)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to list files: %v&quot;, err)), nil\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;path&quot;:&quot;%s&quot;,&quot;files&quot;:%v,&quot;count&quot;:%d,&quot;recursive&quot;:%t}`, \n        path, files, len(files), recursive)), nil\n}\n \nfunc handleFileContent(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;\n    path := extractPathFromURI(req.Params.URI)\n    \n    if !isValidPath(path) {\n        return nil, fmt.Errorf(&quot;invalid path: %s&quot;, path)\n    }\n \n    content, err := os.ReadFile(path)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read file: %w&quot;, err)\n    }\n \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: detectMIMEType(path),\n            Text:     string(content),\n        },\n    }, nil\n}\n \nfunc isValidPath(path string) bool {\n    // Clean the path to resolve any . or .. components\n    clean := filepath.Clean(path)\n    \n    // Check for directory traversal patterns\n    if strings.Contains(clean, &quot;..&quot;) {\n        return false\n    }\n    \n    // For absolute paths, ensure they&#x27;re within a safe base directory\n    if filepath.IsAbs(clean) {\n        // Define safe base directories (adjust as needed for your use case)\n        safeBaseDirs := []string{\n            &quot;/tmp&quot;,\n            &quot;/var/tmp&quot;, \n            &quot;/home&quot;,\n            &quot;/Users&quot;, // macOS\n        }\n        \n        // Check if the path starts with any safe base directory\n        for _, baseDir := range safeBaseDirs {\n            if strings.HasPrefix(clean, baseDir) {\n                return true\n            }\n        }\n        return false\n    }\n    \n    // For relative paths, ensure they don&#x27;t escape the current directory\n    return !strings.HasPrefix(clean, &quot;..&quot;)\n}\n \n// Helper functions for the examples\nfunc listFiles(path string, recursive bool) ([]string, error) {\n    // Placeholder implementation\n    return []string{&quot;file1.txt&quot;, &quot;file2.txt&quot;}, nil\n}\n \nfunc extractPathFromURI(uri string) string {\n    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;\n    if strings.HasPrefix(uri, &quot;file://&quot;) {\n        return strings.TrimPrefix(uri, &quot;file://&quot;)\n    }\n    return uri\n}\n \nfunc detectMIMEType(path string) string {\n    // Simple MIME type detection based on extension\n    ext := filepath.Ext(path)\n    switch ext {\n    case &quot;.txt&quot;:\n        return &quot;text/plain&quot;\n    case &quot;.json&quot;:\n        return &quot;application/json&quot;\n    case &quot;.html&quot;:\n        return &quot;text/html&quot;\n    default:\n        return &quot;application/octet-stream&quot;\n    }\n}\n","title":"Basic STDIO Server","titles":["STDIO Transport","Implementation"]},"207":{"href":"/transports/stdio#advanced-stdio-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os/signal</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">syscall</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced CLI Tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add comprehensive tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addSystemTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addFileTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addGitTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addDatabaseTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start with error handling</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ERROR: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addSystemTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addFileTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addGitTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addDatabaseTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received shutdown signal&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutdown error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;os&quot;\n    &quot;os/signal&quot;\n    &quot;syscall&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced CLI Tool&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add comprehensive tools\n    addSystemTools(s)\n    addFileTools(s)\n    addGitTools(s)\n    addDatabaseTools(s)\n \n    // Handle graceful shutdown\n    setupGracefulShutdown(s)\n \n    // Start with error handling\n    if err := server.ServeStdio(s); err != nil {\n        logError(fmt.Sprintf(&quot;Server error: %v&quot;, err))\n        os.Exit(1)\n    }\n}\n \n// Helper functions for the advanced example\nfunc logToFile(message string) {\n    // Placeholder implementation\n    log.Println(message)\n}\n \nfunc logError(message string) {\n    // Placeholder implementation\n    log.Printf(&quot;ERROR: %s&quot;, message)\n}\n \nfunc addSystemTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addFileTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addGitTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addDatabaseTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc setupGracefulShutdown(s *server.MCPServer) {\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        &lt;-c\n        logToFile(&quot;Received shutdown signal&quot;)\n        \n        ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n        defer cancel()\n        \n        if err := s.Shutdown(ctx); err != nil {\n            logError(fmt.Sprintf(&quot;Shutdown error: %v&quot;, err))\n        }\n        \n        os.Exit(0)\n    }()\n}\n","title":"Advanced STDIO Server","titles":["STDIO Transport","Implementation"]},"208":{"href":"/transports/stdio#client-integration","html":"\n","isPage":false,"text":"\n","title":"Client Integration","titles":["STDIO Transport"]},"209":{"href":"/transports/stdio#how-llm-applications-connect","html":"\n<p>LLM applications typically connect to STDIO MCP servers by:</p>\n<ol>\n<li><strong>Spawning the process</strong>: Starting your server as a subprocess</li>\n<li><strong>Pipe communication</strong>: Using stdin/stdout for JSON-RPC messages</li>\n<li><strong>Lifecycle management</strong>: Handling process startup, shutdown, and errors</li>\n</ol>\n","isPage":false,"text":"\nLLM applications typically connect to STDIO MCP servers by:\n\nSpawning the process: Starting your server as a subprocess\nPipe communication: Using stdin/stdout for JSON-RPC messages\nLifecycle management: Handling process startup, shutdown, and errors\n\n","title":"How LLM Applications Connect","titles":["STDIO Transport","Client Integration"]},"210":{"href":"/transports/stdio#claude-desktop-integration","html":"\n<p>Configure your STDIO server in Claude Desktop:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;mcpServers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;file-tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;args&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/your/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;env&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;LOG_LEVEL&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;info&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>macOS</strong>: <code>~/Library/Application Support/Claude/claude_desktop_config.json</code>\n<strong>Windows</strong>: <code>%APPDATA%\\Claude\\claude_desktop_config.json</code></p>\n","isPage":false,"text":"\nConfigure your STDIO server in Claude Desktop:\n{\n  &quot;mcpServers&quot;: {\n    &quot;file-tools&quot;: {\n      &quot;command&quot;: &quot;go&quot;,\n      &quot;args&quot;: [&quot;run&quot;, &quot;/path/to/your/server/main.go&quot;],\n      &quot;env&quot;: {\n        &quot;LOG_LEVEL&quot;: &quot;info&quot;\n      }\n    }\n  }\n}\nmacOS: ~/Library/Application Support/Claude/claude_desktop_config.json\nWindows: %APPDATA%\\Claude\\claude_desktop_config.json\n","title":"Claude Desktop Integration","titles":["STDIO Transport","Client Integration"]},"211":{"href":"/transports/stdio#custom-client-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> /* inherit env */</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: mcp.LATEST_PROTOCOL_VERSION,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ListToolsRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;list_files&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    // Create STDIO client\n    c, err := client.NewStdioClient(\n        &quot;go&quot;, nil /* inherit env */, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    // Initialize connection\n    _, err = c.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: mcp.LATEST_PROTOCOL_VERSION,\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;test-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // List available tools\n    tools, err := c.ListTools(ctx, mcp.ListToolsRequest{})\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        log.Printf(&quot;- %s: %s&quot;, tool.Name, tool.Description)\n    }\n \n    // Call a tool\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;list_files&quot;,\n            Arguments: map[string]interface{}{\n                &quot;path&quot;:      &quot;.&quot;,\n                &quot;recursive&quot;: false,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"Custom Client Integration","titles":["STDIO Transport","Client Integration"]},"212":{"href":"/transports/stdio#customizing-subprocess-execution","html":"\n<p>If you need more control over how a sub-process is spawned when creating a new STDIO client, you can use\n<code>NewStdioMCPClientWithOptions</code> instead of <code>NewStdioMCPClient</code>.</p>\n<p>By passing the <code>WithCommandFunc</code> option, you can supply a custom factory function to create the <code>exec.Cmd</code> that launches\nthe server. This allows configuration of environment variables, working directories, and system-level process attributes.</p>\n<p>Referring to the previous example, we can replace the line that creates the client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>With the options-aware version:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">\tnil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t[]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCommandFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">command</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">env</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">exec</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cmd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cmd </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> exec.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CommandContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, command, args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cmd.Env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> env </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Explicit environment for the subprocess.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cmd.Dir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;/var/sandbox/mcp-server&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Working directory (not isolated unless paired with chroot or namespace).</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Apply low-level process isolation and privilege dropping.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cmd.SysProcAttr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">syscall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SysProcAttr</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Drop to non-root user (e.g., user/group ID 1001)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Credential: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">syscall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Credential</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Uid: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1001</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Gid: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1001</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // File system isolation: only works if running as root.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Chroot: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/var/sandbox/mcp-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Linux namespace isolation (Linux only):</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Prevents access to other processes, mounts, IPC, networks, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Cloneflags: syscall.CLONE_NEWIPC </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Isolate inter-process comms</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                syscall.CLONE_NEWNS  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Isolate filesystem mounts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                syscall.CLONE_NEWPID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Isolate PID namespace (child sees itself as PID 1)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                syscall.CLONE_NEWUTS </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Isolate hostname</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                syscall.CLONE_NEWNET,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Isolate networking (optional)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\treturn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cmd, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nIf you need more control over how a sub-process is spawned when creating a new STDIO client, you can use\nNewStdioMCPClientWithOptions instead of NewStdioMCPClient.\nBy passing the WithCommandFunc option, you can supply a custom factory function to create the exec.Cmd that launches\nthe server. This allows configuration of environment variables, working directories, and system-level process attributes.\nReferring to the previous example, we can replace the line that creates the client:\nc, err := client.NewStdioClient(\n    &quot;go&quot;, nil, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n)\nWith the options-aware version:\nc, err := client.NewStdioMCPClientWithOptions(\n\t&quot;go&quot;,\n\tnil,\n\t[]string {&quot;run&quot;, &quot;/path/to/server/main.go&quot;},\n\ttransport.WithCommandFunc(func(ctx context.Context, command string, args []string, env []string) (*exec.Cmd, error) {\n        cmd := exec.CommandContext(ctx, command, args...)\n        cmd.Env = env // Explicit environment for the subprocess.\n        cmd.Dir = &quot;/var/sandbox/mcp-server&quot; // Working directory (not isolated unless paired with chroot or namespace).\n \n        // Apply low-level process isolation and privilege dropping.\n        cmd.SysProcAttr = &amp;syscall.SysProcAttr{\n            // Drop to non-root user (e.g., user/group ID 1001)\n            Credential: &amp;syscall.Credential{\n                Uid: 1001,\n                Gid: 1001,\n            },\n            // File system isolation: only works if running as root.\n            Chroot: &quot;/var/sandbox/mcp-server&quot;,\n \n            // Linux namespace isolation (Linux only):\n            // Prevents access to other processes, mounts, IPC, networks, etc.\n            Cloneflags: syscall.CLONE_NEWIPC | // Isolate inter-process comms\n                syscall.CLONE_NEWNS  | // Isolate filesystem mounts\n                syscall.CLONE_NEWPID | // Isolate PID namespace (child sees itself as PID 1)\n                syscall.CLONE_NEWUTS | // Isolate hostname\n                syscall.CLONE_NEWNET,  // Isolate networking (optional)\n        }\n \n\t\treturn cmd, nil\n\t}),\n)\n","title":"Customizing Subprocess Execution","titles":["STDIO Transport","Client Integration","Custom Client Integration"]},"213":{"href":"/transports/stdio#debugging","html":"\n","isPage":false,"text":"\n","title":"Debugging","titles":["STDIO Transport"]},"214":{"href":"/transports/stdio#command-line-testing","html":"\n<p>Test your STDIO server directly from the command line:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Start your server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Send initialization request</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List tools</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n","isPage":false,"text":"\nTest your STDIO server directly from the command line:\n# Start your server\ngo run main.go\n \n# Send initialization request\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27; | go run main.go\n \n# List tools\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27; | go run main.go\n \n# Call a tool\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27; | go run main.go\n","title":"Command Line Testing","titles":["STDIO Transport","Debugging"]},"215":{"href":"/transports/stdio#interactive-testing-script","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#!/bin/bash</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># interactive_test.sh</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">SERVER_CMD</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go run main.go&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Starting MCP STDIO server test...&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Function to send JSON-RPC request</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send_request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    local</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">$1</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Sending: </span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $SERVER_CMD</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;---&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Initialize</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;resources/list&quot;,&quot;params&quot;:{}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Call tool</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:4,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Test completed.&quot;</span></span></code></pre>\n","isPage":false,"text":"\n#!/bin/bash\n \n# interactive_test.sh\nSERVER_CMD=&quot;go run main.go&quot;\n \necho &quot;Starting MCP STDIO server test...&quot;\n \n# Function to send JSON-RPC request\nsend_request() {\n    local request=&quot;$1&quot;\n    echo &quot;Sending: $request&quot;\n    echo &quot;$request&quot; | $SERVER_CMD\n    echo &quot;---&quot;\n}\n \n# Initialize\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;\n \n# List tools\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;\n \n# List resources\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;resources/list&quot;,&quot;params&quot;:{}}&#x27;\n \n# Call tool\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:4,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;\n \necho &quot;Test completed.&quot;\n","title":"Interactive Testing Script","titles":["STDIO Transport","Debugging"]},"216":{"href":"/transports/stdio#debug-logging","html":"\n<p>Add debug logging to your STDIO server:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup debug logging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logFile, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OpenFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp-server.log&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, os.O_CREATE</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">os.O_WRONLY</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">os.O_APPEND, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0666</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> logFile.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logFile, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[MCP] &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, log.LstdFlags</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">log.Lshortfile)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Debug Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools with debug logging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;debug_echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo with debug logging&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo tool called with message: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAdd debug logging to your STDIO server:\nfunc main() {\n    // Setup debug logging\n    logFile, err := os.OpenFile(&quot;mcp-server.log&quot;, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer logFile.Close()\n \n    logger := log.New(logFile, &quot;[MCP] &quot;, log.LstdFlags|log.Lshortfile)\n \n    s := server.NewMCPServer(&quot;Debug Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add tools with debug logging\n    s.AddTool(\n        mcp.NewTool(&quot;debug_echo&quot;,\n            mcp.WithDescription(&quot;Echo with debug logging&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            message := req.GetString(&quot;message&quot;, &quot;&quot;)\n            logger.Printf(&quot;Echo tool called with message: %s&quot;, message)\n            return mcp.NewToolResultText(fmt.Sprintf(&quot;Echo: %s&quot;, message)), nil\n        },\n    )\n \n    logger.Println(&quot;Starting STDIO server...&quot;)\n    if err := server.ServeStdio(s); err != nil {\n        logger.Printf(&quot;Server error: %v&quot;, err)\n    }\n}\n","title":"Debug Logging","titles":["STDIO Transport","Debugging"]},"217":{"href":"/transports/stdio#mcp-inspector-integration","html":"\n<p>Use the MCP Inspector for visual debugging:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install MCP Inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @modelcontextprotocol/inspector</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Run your server with inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp-inspector</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n<p>This opens a web interface where you can:</p>\n<ul>\n<li>View available tools and resources</li>\n<li>Test tool calls interactively</li>\n<li>Inspect request/response messages</li>\n<li>Debug protocol issues</li>\n</ul>\n","isPage":false,"text":"\nUse the MCP Inspector for visual debugging:\n# Install MCP Inspector\nnpm install -g @modelcontextprotocol/inspector\n \n# Run your server with inspector\nmcp-inspector go run main.go\nThis opens a web interface where you can:\n\nView available tools and resources\nTest tool calls interactively\nInspect request/response messages\nDebug protocol issues\n\n","title":"MCP Inspector Integration","titles":["STDIO Transport","Debugging"]},"218":{"href":"/transports/stdio#error-handling","html":"\n","isPage":false,"text":"\n","title":"Error Handling","titles":["STDIO Transport"]},"219":{"href":"/transports/stdio#robust-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate required parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path parameter is required and must be a string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate path security</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid or unsafe path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check if path exists</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path); os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsNotExist</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path does not exist: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle context cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Perform operation with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performOperation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Log error for debugging</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation failed for path </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Return user-friendly error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleToolWithErrors(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Validate required parameters\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;path parameter is required and must be a string&quot;)\n    }\n \n    // Validate path security\n    if !isValidPath(path) {\n        return nil, fmt.Errorf(&quot;invalid or unsafe path: %s&quot;, path)\n    }\n \n    // Check if path exists\n    if _, err := os.Stat(path); os.IsNotExist(err) {\n        return nil, fmt.Errorf(&quot;path does not exist: %s&quot;, path)\n    }\n \n    // Handle context cancellation\n    select {\n    case &lt;-ctx.Done():\n        return nil, ctx.Err()\n    default:\n    }\n \n    // Perform operation with timeout\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n \n    result, err := performOperation(ctx, path)\n    if err != nil {\n        // Log error for debugging\n        logError(fmt.Sprintf(&quot;Operation failed for path %s: %v&quot;, path, err))\n        \n        // Return user-friendly error\n        if errors.Is(err, context.DeadlineExceeded) {\n            return nil, fmt.Errorf(&quot;operation timed out&quot;)\n        }\n        \n        return nil, fmt.Errorf(&quot;operation failed: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%v&quot;, result)), nil\n}\n","title":"Robust Error Handling","titles":["STDIO Transport","Error Handling"]},"220":{"href":"/transports/stdio#process-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle panics gracefully</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> recover</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server panic: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, r))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Robust Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Built-in panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup signal handling</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupSignalHandling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server with retry logic</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.Second </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupSignalHandling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sig </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received signal: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sig))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    // Handle panics gracefully\n    defer func() {\n        if r := recover(); r != nil {\n            logError(fmt.Sprintf(&quot;Server panic: %v&quot;, r))\n            os.Exit(1)\n        }\n    }()\n \n    s := server.NewMCPServer(&quot;Robust Server&quot;, &quot;1.0.0&quot;,\n        server.WithRecovery(), // Built-in panic recovery\n    )\n \n    // Setup signal handling\n    setupSignalHandling()\n \n    // Start server with retry logic\n    for attempts := 0; attempts &lt; 3; attempts++ {\n        if err := server.ServeStdio(s); err != nil {\n            logError(fmt.Sprintf(&quot;Server attempt %d failed: %v&quot;, attempts+1, err))\n            if attempts == 2 {\n                os.Exit(1)\n            }\n            time.Sleep(time.Second * time.Duration(attempts+1))\n        } else {\n            break\n        }\n    }\n}\n \nfunc setupSignalHandling() {\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        sig := &lt;-c\n        logToFile(fmt.Sprintf(&quot;Received signal: %v&quot;, sig))\n        os.Exit(0)\n    }()\n}\n","title":"Process Management","titles":["STDIO Transport","Error Handling"]},"221":{"href":"/transports/stdio#performance-optimization","html":"\n","isPage":false,"text":"\n","title":"Performance Optimization","titles":["STDIO Transport"]},"222":{"href":"/transports/stdio#efficient-resource-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Use connection pooling for database tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> dbPool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sql</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">DB</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sql.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Open</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sqlite3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data.db&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetMaxOpenConns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetMaxIdleConns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetConnMaxLifetime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.Hour)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Cache frequently accessed data</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fileCache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cacheMutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getCachedFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cacheMutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cacheMutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fileCache[path]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Minute {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.content, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Use connection pooling for database tools\nvar dbPool *sql.DB\n \nfunc init() {\n    var err error\n    dbPool, err = sql.Open(&quot;sqlite3&quot;, &quot;data.db&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    dbPool.SetMaxOpenConns(10)\n    dbPool.SetMaxIdleConns(5)\n    dbPool.SetConnMaxLifetime(time.Hour)\n}\n \n// Cache frequently accessed data\nvar fileCache = make(map[string]cacheEntry)\nvar cacheMutex sync.RWMutex\n \ntype cacheEntry struct {\n    content   string\n    timestamp time.Time\n}\n \nfunc getCachedFile(path string) (string, bool) {\n    cacheMutex.RLock()\n    defer cacheMutex.RUnlock()\n    \n    entry, exists := fileCache[path]\n    if !exists || time.Since(entry.timestamp) &gt; 5*time.Minute {\n        return &quot;&quot;, false\n    }\n    \n    return entry.content, true\n}\n","title":"Efficient Resource Usage","titles":["STDIO Transport","Performance Optimization"]},"223":{"href":"/transports/stdio#memory-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleLargeFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stream large files instead of loading into memory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    file, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Open</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> file.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process in chunks</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chunkSize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 64</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1024</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    buffer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, chunkSize)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        n, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> file.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Read</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(buffer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.EOF {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Process chunk</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        processed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processChunk</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(buffer[:n])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(processed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleLargeFile(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path := req.GetString(&quot;path&quot;, &quot;&quot;)\n    \n    // Stream large files instead of loading into memory\n    file, err := os.Open(path)\n    if err != nil {\n        return nil, err\n    }\n    defer file.Close()\n \n    // Process in chunks\n    const chunkSize = 64 * 1024\n    buffer := make([]byte, chunkSize)\n    \n    var result strings.Builder\n    for {\n        n, err := file.Read(buffer)\n        if err == io.EOF {\n            break\n        }\n        if err != nil {\n            return nil, err\n        }\n        \n        // Process chunk\n        processed := processChunk(buffer[:n])\n        result.WriteString(processed)\n        \n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n    }\n \n    return mcp.NewToolResultText(result.String()), nil\n}\n","title":"Memory Management","titles":["STDIO Transport","Performance Optimization"]},"224":{"href":"/transports/stdio#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/sse\">SSE Transport</a></strong> - Learn about real-time web communication</li>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Explore traditional web service patterns</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Understand embedded scenarios</li>\n</ul>","isPage":false,"text":"\n\nSSE Transport - Learn about real-time web communication\nHTTP Transport - Explore traditional web service patterns\nIn-Process Transport - Understand embedded scenarios\n","title":"Next Steps","titles":["STDIO Transport"]},"225":{"href":"/servers/advanced-sampling#sampling","html":"</header>\n<p>Learn how to implement MCP servers that can request LLM completions from clients using the sampling capability.</p>\n","isPage":true,"text":"\nLearn how to implement MCP servers that can request LLM completions from clients using the sampling capability.\n","title":"Sampling","titles":[]},"226":{"href":"/servers/advanced-sampling#overview","html":"\n<p>Sampling allows MCP servers to request LLM completions from clients, enabling bidirectional communication where servers can leverage client-side LLM capabilities. This is particularly useful for tools that need to generate content, answer questions, or perform reasoning tasks.</p>\n","isPage":false,"text":"\nSampling allows MCP servers to request LLM completions from clients, enabling bidirectional communication where servers can leverage client-side LLM capabilities. This is particularly useful for tools that need to generate content, answer questions, or perform reasoning tasks.\n","title":"Overview","titles":["Sampling"]},"227":{"href":"/servers/advanced-sampling#enabling-sampling","html":"\n<p>To enable sampling in your server, call <code>EnableSampling()</code> during server setup:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Enable sampling capability</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EnableSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools that use sampling...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo enable sampling in your server, call EnableSampling() during server setup:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create server\n    mcpServer := server.NewMCPServer(&quot;my-server&quot;, &quot;1.0.0&quot;)\n    \n    // Enable sampling capability\n    mcpServer.EnableSampling()\n    \n    // Add tools that use sampling...\n    \n    // Start server\n    server.ServeStdio(mcpServer)\n}\n","title":"Enabling Sampling","titles":["Sampling"]},"228":{"href":"/servers/advanced-sampling#requesting-sampling","html":"\n<p>Use <code>RequestSampling()</code> within tool handlers to request LLM completions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Ask the LLM a question using sampling&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    InputSchema: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Properties: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The question to ask the LLM&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Optional system prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Required: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    question, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    systemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create sampling request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Text: question,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            SystemPrompt: systemPrompt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MaxTokens:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Temperature:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Request sampling from client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error requesting sampling: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return the LLM response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM Response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getTextFromContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nUse RequestSampling() within tool handlers to request LLM completions:\nmcpServer.AddTool(mcp.Tool{\n    Name:        &quot;ask_llm&quot;,\n    Description: &quot;Ask the LLM a question using sampling&quot;,\n    InputSchema: mcp.ToolInputSchema{\n        Type: &quot;object&quot;,\n        Properties: map[string]any{\n            &quot;question&quot;: map[string]any{\n                &quot;type&quot;:        &quot;string&quot;,\n                &quot;description&quot;: &quot;The question to ask the LLM&quot;,\n            },\n            &quot;system_prompt&quot;: map[string]any{\n                &quot;type&quot;:        &quot;string&quot;, \n                &quot;description&quot;: &quot;Optional system prompt&quot;,\n            },\n        },\n        Required: []string{&quot;question&quot;},\n    },\n}, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Extract parameters\n    question, err := request.RequireString(&quot;question&quot;)\n    if err != nil {\n        return nil, err\n    }\n    \n    systemPrompt := request.GetString(&quot;system_prompt&quot;, &quot;You are a helpful assistant.&quot;)\n    \n    // Create sampling request\n    samplingRequest := mcp.CreateMessageRequest{\n        CreateMessageParams: mcp.CreateMessageParams{\n            Messages: []mcp.SamplingMessage{\n                {\n                    Role: mcp.RoleUser,\n                    Content: mcp.TextContent{\n                        Type: &quot;text&quot;,\n                        Text: question,\n                    },\n                },\n            },\n            SystemPrompt: systemPrompt,\n            MaxTokens:    1000,\n            Temperature:  0.7,\n        },\n    }\n    \n    // Request sampling from client\n    result, err := mcpServer.RequestSampling(ctx, samplingRequest)\n    if err != nil {\n        return &amp;mcp.CallToolResult{\n            Content: []mcp.Content{\n                mcp.TextContent{\n                    Type: &quot;text&quot;,\n                    Text: fmt.Sprintf(&quot;Error requesting sampling: %v&quot;, err),\n                },\n            },\n            IsError: true,\n        }, nil\n    }\n    \n    // Return the LLM response\n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: fmt.Sprintf(&quot;LLM Response: %s&quot;, getTextFromContent(result.Content)),\n            },\n        },\n    }, nil\n})\n","title":"Requesting Sampling","titles":["Sampling"]},"229":{"href":"/servers/advanced-sampling#sampling-request-parameters","html":"\n<p>The <code>CreateMessageRequest</code> supports various parameters to control LLM behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Required: Messages to send to the LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: mcp.RoleUser,        </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// or mcp.RoleAssistant</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// or mcp.ImageContent</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your message here&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: System prompt for context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        SystemPrompt: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Maximum tokens to generate</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxTokens: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Temperature for randomness (0.0 to 1.0)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Temperature: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Top-p sampling parameter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        TopP: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.9</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Optional: Stop sequences</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StopSequences: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\\\</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">n</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\\\</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">n&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe CreateMessageRequest supports various parameters to control LLM behavior:\nsamplingRequest := mcp.CreateMessageRequest{\n    CreateMessageParams: mcp.CreateMessageParams{\n        // Required: Messages to send to the LLM\n        Messages: []mcp.SamplingMessage{\n            {\n                Role: mcp.RoleUser,        // or mcp.RoleAssistant\n                Content: mcp.TextContent{   // or mcp.ImageContent\n                    Type: &quot;text&quot;,\n                    Text: &quot;Your message here&quot;,\n                },\n            },\n        },\n        \n        // Optional: System prompt for context\n        SystemPrompt: &quot;You are a helpful assistant.&quot;,\n        \n        // Optional: Maximum tokens to generate\n        MaxTokens: 1000,\n        \n        // Optional: Temperature for randomness (0.0 to 1.0)\n        Temperature: 0.7,\n        \n        // Optional: Top-p sampling parameter\n        TopP: 0.9,\n        \n        // Optional: Stop sequences\n        StopSequences: []string{&quot;\\\\n\\\\n&quot;},\n    },\n}\n","title":"Sampling Request Parameters","titles":["Sampling"]},"230":{"href":"/servers/advanced-sampling#message-types","html":"\n<p>Sampling supports different message roles and content types:</p>\n","isPage":false,"text":"\nSampling supports different message roles and content types:\n","title":"Message Types","titles":["Sampling"]},"231":{"href":"/servers/advanced-sampling#message-roles","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// User message</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;What is the capital of France?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Assistant message (for conversation context)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Role: mcp.RoleAssistant,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The capital of France is Paris.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// User message\n{\n    Role: mcp.RoleUser,\n    Content: mcp.TextContent{\n        Type: &quot;text&quot;,\n        Text: &quot;What is the capital of France?&quot;,\n    },\n}\n \n// Assistant message (for conversation context)\n{\n    Role: mcp.RoleAssistant,\n    Content: mcp.TextContent{\n        Type: &quot;text&quot;, \n        Text: &quot;The capital of France is Paris.&quot;,\n    },\n}\n","title":"Message Roles","titles":["Sampling","Message Types"]},"232":{"href":"/servers/advanced-sampling#content-types","html":"\n","isPage":false,"text":"\n","title":"Content Types","titles":["Sampling","Message Types"]},"233":{"href":"/servers/advanced-sampling#text-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your text content here&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nmcp.TextContent{\n    Type: &quot;text&quot;,\n    Text: &quot;Your text content here&quot;,\n}\n","title":"Text Content","titles":["Sampling","Message Types","Content Types"]},"234":{"href":"/servers/advanced-sampling#image-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ImageContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;image&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Data: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;base64-encoded-image-data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MimeType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;image/jpeg&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nmcp.ImageContent{\n    Type: &quot;image&quot;,\n    Data: &quot;base64-encoded-image-data&quot;,\n    MimeType: &quot;image/jpeg&quot;,\n}\n","title":"Image Content","titles":["Sampling","Message Types","Content Types"]},"235":{"href":"/servers/advanced-sampling#error-handling","html":"\n<p>Always handle sampling errors gracefully:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Log the error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Sampling request failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return appropriate error response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Sorry, I couldn&#x27;t process your request at this time.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAlways handle sampling errors gracefully:\nresult, err := mcpServer.RequestSampling(ctx, samplingRequest)\nif err != nil {\n    // Log the error\n    log.Printf(&quot;Sampling request failed: %v&quot;, err)\n    \n    // Return appropriate error response\n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: &quot;Sorry, I couldn&#x27;t process your request at this time.&quot;,\n            },\n        },\n        IsError: true,\n    }, nil\n}\n","title":"Error Handling","titles":["Sampling"]},"236":{"href":"/servers/advanced-sampling#context-and-timeouts","html":"\n<p>Use context for timeout control:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Set a timeout for the sampling request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span></code></pre>\n","isPage":false,"text":"\nUse context for timeout control:\n// Set a timeout for the sampling request\nctx, cancel := context.WithTimeout(ctx, 30*time.Second)\ndefer cancel()\n \nresult, err := mcpServer.RequestSampling(ctx, samplingRequest)\n","title":"Context and Timeouts","titles":["Sampling"]},"237":{"href":"/servers/advanced-sampling#best-practices","html":"\n<ol>\n<li><strong>Enable Sampling Early</strong>: Call <code>EnableSampling()</code> during server initialization</li>\n<li><strong>Handle Timeouts</strong>: Set appropriate timeouts for sampling requests</li>\n<li><strong>Graceful Errors</strong>: Always provide meaningful error messages to users</li>\n<li><strong>Content Extraction</strong>: Use helper functions to extract text from responses</li>\n<li><strong>System Prompts</strong>: Use clear system prompts to guide LLM behavior</li>\n<li><strong>Parameter Validation</strong>: Validate tool parameters before making sampling requests</li>\n</ol>\n","isPage":false,"text":"\n\nEnable Sampling Early: Call EnableSampling() during server initialization\nHandle Timeouts: Set appropriate timeouts for sampling requests\nGraceful Errors: Always provide meaningful error messages to users\nContent Extraction: Use helper functions to extract text from responses\nSystem Prompts: Use clear system prompts to guide LLM behavior\nParameter Validation: Validate tool parameters before making sampling requests\n\n","title":"Best Practices","titles":["Sampling"]},"238":{"href":"/servers/advanced-sampling#complete-example","html":"\n<p>Here&#x27;s a complete example server with sampling:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sampling-example-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Enable sampling capability</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EnableSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add sampling tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Ask the LLM a question using sampling&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        InputSchema: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Properties: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The question to ask the LLM&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Optional system prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Required: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        question, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_prompt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Create sampling request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                            Text: question,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                SystemPrompt: systemPrompt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxTokens:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Temperature:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Request sampling with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        samplingCtx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(samplingCtx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                    mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error requesting sampling: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Return the LLM response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM Response (model: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        result.Model, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getTextFromContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting sampling example server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper function to extract text from content</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getTextFromContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">content</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.Text</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete example server with sampling:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n    \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create server\n    mcpServer := server.NewMCPServer(&quot;sampling-example-server&quot;, &quot;1.0.0&quot;)\n    \n    // Enable sampling capability\n    mcpServer.EnableSampling()\n    \n    // Add sampling tool\n    mcpServer.AddTool(mcp.Tool{\n        Name:        &quot;ask_llm&quot;,\n        Description: &quot;Ask the LLM a question using sampling&quot;,\n        InputSchema: mcp.ToolInputSchema{\n            Type: &quot;object&quot;,\n            Properties: map[string]any{\n                &quot;question&quot;: map[string]any{\n                    &quot;type&quot;:        &quot;string&quot;,\n                    &quot;description&quot;: &quot;The question to ask the LLM&quot;,\n                },\n                &quot;system_prompt&quot;: map[string]any{\n                    &quot;type&quot;:        &quot;string&quot;,\n                    &quot;description&quot;: &quot;Optional system prompt&quot;,\n                },\n            },\n            Required: []string{&quot;question&quot;},\n        },\n    }, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        question, err := request.RequireString(&quot;question&quot;)\n        if err != nil {\n            return nil, err\n        }\n        \n        systemPrompt := request.GetString(&quot;system_prompt&quot;, &quot;You are a helpful assistant.&quot;)\n        \n        // Create sampling request\n        samplingRequest := mcp.CreateMessageRequest{\n            CreateMessageParams: mcp.CreateMessageParams{\n                Messages: []mcp.SamplingMessage{\n                    {\n                        Role: mcp.RoleUser,\n                        Content: mcp.TextContent{\n                            Type: &quot;text&quot;,\n                            Text: question,\n                        },\n                    },\n                },\n                SystemPrompt: systemPrompt,\n                MaxTokens:    1000,\n                Temperature:  0.7,\n            },\n        }\n        \n        // Request sampling with timeout\n        samplingCtx, cancel := context.WithTimeout(ctx, 30*time.Second)\n        defer cancel()\n        \n        result, err := mcpServer.RequestSampling(samplingCtx, samplingRequest)\n        if err != nil {\n            return &amp;mcp.CallToolResult{\n                Content: []mcp.Content{\n                    mcp.TextContent{\n                        Type: &quot;text&quot;,\n                        Text: fmt.Sprintf(&quot;Error requesting sampling: %v&quot;, err),\n                    },\n                },\n                IsError: true,\n            }, nil\n        }\n        \n        // Return the LLM response\n        return &amp;mcp.CallToolResult{\n            Content: []mcp.Content{\n                mcp.TextContent{\n                    Type: &quot;text&quot;,\n                    Text: fmt.Sprintf(&quot;LLM Response (model: %s): %s&quot;, \n                        result.Model, getTextFromContent(result.Content)),\n                },\n            },\n        }, nil\n    })\n    \n    // Start server\n    log.Println(&quot;Starting sampling example server...&quot;)\n    if err := server.ServeStdio(mcpServer); err != nil {\n        log.Fatalf(&quot;Server error: %v&quot;, err)\n    }\n}\n \n// Helper function to extract text from content\nfunc getTextFromContent(content interface{}) string {\n    switch c := content.(type) {\n    case mcp.TextContent:\n        return c.Text\n    case string:\n        return c\n    default:\n        return fmt.Sprintf(&quot;%v&quot;, content)\n    }\n}\n","title":"Complete Example","titles":["Sampling"]},"239":{"href":"/servers/advanced-sampling#transport-support","html":"\n<p>Sampling is supported on the following transports:</p>\n","isPage":false,"text":"\nSampling is supported on the following transports:\n","title":"Transport Support","titles":["Sampling"]},"240":{"href":"/servers/advanced-sampling#stdio-transport","html":"\n<p>STDIO transport provides full sampling support with JSON-RPC message passing:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Start STDIO server with sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer)</span></span></code></pre>\n<p>The client must implement a <code>SamplingHandler</code> and declare sampling capability during initialization.</p>\n","isPage":false,"text":"\nSTDIO transport provides full sampling support with JSON-RPC message passing:\n// Start STDIO server with sampling\nserver.ServeStdio(mcpServer)\nThe client must implement a SamplingHandler and declare sampling capability during initialization.\n","title":"STDIO Transport","titles":["Sampling","Transport Support"]},"241":{"href":"/servers/advanced-sampling#in-process-transport","html":"\n<p>In-process transport offers the most efficient sampling implementation with direct method calls:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create in-process client with sampling handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClientWithSamplingHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpServer, samplingHandler)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Benefits of in-process sampling:</strong>\n<ul>\n<li><strong>Direct Method Calls</strong>: No JSON-RPC serialization overhead</li>\n<li><strong>Type Safety</strong>: Compile-time type checking</li>\n</ul>\n","isPage":false,"text":"\nIn-process transport offers the most efficient sampling implementation with direct method calls:\n// Create in-process client with sampling handler\nmcpClient, err := client.NewInProcessClientWithSamplingHandler(mcpServer, samplingHandler)\nif err != nil {\n    log.Fatal(err)\n}\nBenefits of in-process sampling:\n\nDirect Method Calls: No JSON-RPC serialization overhead\nType Safety: Compile-time type checking\n\n","title":"In-Process Transport","titles":["Sampling","Transport Support"]},"242":{"href":"/servers/advanced-sampling#unsupported-transports","html":"\n<p>The following transports do not currently support sampling:</p>\n<ul>\n<li><strong>SSE Transport</strong>: One-way streaming nature prevents bidirectional sampling</li>\n<li><strong>StreamableHTTP Transport</strong>: Stateless HTTP requests don&#x27;t support sampling callbacks</li>\n</ul>\n<p>For these transports, consider implementing LLM integration directly in your tool handlers rather than using sampling.</p>\n","isPage":false,"text":"\nThe following transports do not currently support sampling:\n\nSSE Transport: One-way streaming nature prevents bidirectional sampling\nStreamableHTTP Transport: Stateless HTTP requests don&#x27;t support sampling callbacks\n\nFor these transports, consider implementing LLM integration directly in your tool handlers rather than using sampling.\n","title":"Unsupported Transports","titles":["Sampling","Transport Support"]},"243":{"href":"/servers/advanced-sampling#next-steps","html":"\n<ul>\n<li>Learn about <a href=\"/clients/advanced-sampling\">client-side sampling implementation</a></li>\n<li>Explore <a href=\"/servers/advanced\">advanced server features</a></li>\n<li>Check out the <a href=\"https://github.com/mark3labs/mcp-go/tree/main/examples/sampling_server\">sampling examples</a></li>\n<li>See <a href=\"/transports/inprocess#sampling-support\">in-process sampling documentation</a> for embedded scenarios</li>\n</ul>","isPage":false,"text":"\n\nLearn about client-side sampling implementation\nExplore advanced server features\nCheck out the sampling examples\nSee in-process sampling documentation for embedded scenarios\n","title":"Next Steps","titles":["Sampling"]},"244":{"href":"/servers/advanced#advanced-server-features","html":"</header>\n<p>Explore powerful features that make MCP-Go servers production-ready: typed tools, session management, middleware, hooks, and more.</p>\n","isPage":true,"text":"\nExplore powerful features that make MCP-Go servers production-ready: typed tools, session management, middleware, hooks, and more.\n","title":"Advanced Server Features","titles":[]},"245":{"href":"/servers/advanced#typed-tools","html":"\n<p>Typed tools provide compile-time type safety and automatic parameter validation, reducing boilerplate and preventing runtime errors.</p>\n","isPage":false,"text":"\nTyped tools provide compile-time type safety and automatic parameter validation, reducing boilerplate and preventing runtime errors.\n","title":"Typed Tools","titles":["Advanced Server Features"]},"246":{"href":"/servers/advanced#basic-typed-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define input and output types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;operation&quot; validate:&quot;required,oneof=add subtract multiply divide&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    X         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;x&quot; validate:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Y         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;y&quot; validate:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateOutput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Result    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;result&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;operation&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Typed Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create typed tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool with typed handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTypedToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handleCalculateTyped))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculateTyped</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">input</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateInput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    output </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateOutput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Result:    result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Operation: input.Operation,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(output)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \n// Define input and output types\ntype CalculateInput struct {\n    Operation string  `json:&quot;operation&quot; validate:&quot;required,oneof=add subtract multiply divide&quot;`\n    X         float64 `json:&quot;x&quot; validate:&quot;required&quot;`\n    Y         float64 `json:&quot;y&quot; validate:&quot;required&quot;`\n}\n \ntype CalculateOutput struct {\n    Result    float64 `json:&quot;result&quot;`\n    Operation string  `json:&quot;operation&quot;`\n}\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Typed Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Create typed tool\n    tool := mcp.NewTool(&quot;calculate&quot;,\n        mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n        mcp.WithString(&quot;operation&quot;, mcp.Required()),\n        mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n        mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n    )\n    \n    // Add tool with typed handler\n    s.AddTool(tool, mcp.NewTypedToolHandler(handleCalculateTyped))\n \n    server.ServeStdio(s)\n}\n \nfunc handleCalculateTyped(ctx context.Context, req mcp.CallToolRequest, input CalculateInput) (*mcp.CallToolResult, error) {\n    var result float64\n    \n    switch input.Operation {\n    case &quot;add&quot;:\n        result = input.X + input.Y\n    case &quot;subtract&quot;:\n        result = input.X - input.Y\n    case &quot;multiply&quot;:\n        result = input.X * input.Y\n    case &quot;divide&quot;:\n        if input.Y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = input.X / input.Y\n    }\n \n    output := CalculateOutput{\n        Result:    result,\n        Operation: input.Operation,\n    }\n    \n    jsonData, err := json.Marshal(output)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Basic Typed Tool","titles":["Advanced Server Features","Typed Tools"]},"247":{"href":"/servers/advanced#complex-typed-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            `json:&quot;name&quot; validate:&quot;required,min=1,max=100&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            `json:&quot;email&quot; validate:&quot;required,email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">               `json:&quot;age&quot; validate:&quot;min=0,max=150&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Tags     []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          `json:&quot;tags&quot; validate:&quot;dive,min=1&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Metadata </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;metadata&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Active   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">              `json:&quot;active&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateOutput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;created_at&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Status    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;status&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">input</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateInput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validation is automatic based on struct tags</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create user in database</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      input.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     input.Email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:       input.Age,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Tags:      input.Tags,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Metadata:  input.Metadata,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Active:    input.Active,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Create</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create user: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    output </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserCreateOutput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        user.ID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      user.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     user.Email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: user.CreatedAt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Status:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;created&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(output)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype UserCreateInput struct {\n    Name     string            `json:&quot;name&quot; validate:&quot;required,min=1,max=100&quot;`\n    Email    string            `json:&quot;email&quot; validate:&quot;required,email&quot;`\n    Age      int               `json:&quot;age&quot; validate:&quot;min=0,max=150&quot;`\n    Tags     []string          `json:&quot;tags&quot; validate:&quot;dive,min=1&quot;`\n    Metadata map[string]string `json:&quot;metadata&quot;`\n    Active   bool              `json:&quot;active&quot;`\n}\n \ntype UserCreateOutput struct {\n    ID        string    `json:&quot;id&quot;`\n    Name      string    `json:&quot;name&quot;`\n    Email     string    `json:&quot;email&quot;`\n    CreatedAt time.Time `json:&quot;created_at&quot;`\n    Status    string    `json:&quot;status&quot;`\n}\n \nfunc handleCreateUser(ctx context.Context, req mcp.CallToolRequest, input UserCreateInput) (*mcp.CallToolResult, error) {\n    // Validation is automatic based on struct tags\n    \n    // Create user in database\n    user := &amp;User{\n        ID:        generateID(),\n        Name:      input.Name,\n        Email:     input.Email,\n        Age:       input.Age,\n        Tags:      input.Tags,\n        Metadata:  input.Metadata,\n        Active:    input.Active,\n        CreatedAt: time.Now(),\n    }\n \n    if err := db.Create(user); err != nil {\n        return nil, fmt.Errorf(&quot;failed to create user: %w&quot;, err)\n    }\n \n    output := &amp;UserCreateOutput{\n        ID:        user.ID,\n        Name:      user.Name,\n        Email:     user.Email,\n        CreatedAt: user.CreatedAt,\n        Status:    &quot;created&quot;,\n    }\n \n    return mcp.NewToolResultJSON(output)\n}\n","title":"Complex Typed Tool","titles":["Advanced Server Features","Typed Tools"]},"248":{"href":"/servers/advanced#custom-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">path/filepath</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/go-playground/validator/v10</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Path      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;path&quot; validate:&quot;required,filepath&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;operation&quot; validate:&quot;required,oneof=read write delete&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;content&quot; validate:&quot;required_if=Operation write&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Custom validator</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    validate </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> validator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    validate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RegisterValidation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;filepath&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, validateFilePath)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateFilePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">fl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> validator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FieldLevel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fl.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Field</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Prevent directory traversal</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Ensure path is within allowed directory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allowedDir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;/app/data&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    absPath, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Abs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(absPath, allowedDir)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;path/filepath&quot;\n    &quot;strings&quot;\n \n    &quot;github.com/go-playground/validator/v10&quot;\n)\n \ntype FileOperationInput struct {\n    Path      string `json:&quot;path&quot; validate:&quot;required,filepath&quot;`\n    Operation string `json:&quot;operation&quot; validate:&quot;required,oneof=read write delete&quot;`\n    Content   string `json:&quot;content&quot; validate:&quot;required_if=Operation write&quot;`\n}\n \n// Custom validator\nfunc init() {\n    validate := validator.New()\n    validate.RegisterValidation(&quot;filepath&quot;, validateFilePath)\n}\n \nfunc validateFilePath(fl validator.FieldLevel) bool {\n    path := fl.Field().String()\n    \n    // Prevent directory traversal\n    if strings.Contains(path, &quot;..&quot;) {\n        return false\n    }\n    \n    // Ensure path is within allowed directory\n    allowedDir := &quot;/app/data&quot;\n    absPath, err := filepath.Abs(path)\n    if err != nil {\n        return false\n    }\n    \n    return strings.HasPrefix(absPath, allowedDir)\n}\n","title":"Custom Validation","titles":["Advanced Server Features","Typed Tools"]},"249":{"href":"/servers/advanced#session-management","html":"\n<p>Handle multiple clients with per-session state and tools.</p>\n","isPage":false,"text":"\nHandle multiple clients with per-session state and tools.\n","title":"Session Management","titles":["Advanced Server Features"]},"250":{"href":"/servers/advanced#per-session-state","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionState</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Permissions []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Settings    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    StartTime   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">permissions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.sessions[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        UserID:      userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Permissions: permissions,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Settings:    </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StartTime:   time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session, exists</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.sessions, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SessionState struct {\n    UserID      string\n    Permissions []string\n    Settings    map[string]interface{}\n    StartTime   time.Time\n}\n \ntype SessionManager struct {\n    sessions map[string]*SessionState\n    mutex    sync.RWMutex\n}\n \nfunc NewSessionManager() *SessionManager {\n    return &amp;SessionManager{\n        sessions: make(map[string]*SessionState),\n    }\n}\n \nfunc (sm *SessionManager) CreateSession(sessionID, userID string, permissions []string) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    sm.sessions[sessionID] = &amp;SessionState{\n        UserID:      userID,\n        Permissions: permissions,\n        Settings:    make(map[string]interface{}),\n        StartTime:   time.Now(),\n    }\n}\n \nfunc (sm *SessionManager) GetSession(sessionID string) (*SessionState, bool) {\n    sm.mutex.RLock()\n    defer sm.mutex.RUnlock()\n    \n    session, exists := sm.sessions[sessionID]\n    return session, exists\n}\n \nfunc (sm *SessionManager) RemoveSession(sessionID string) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    delete(sm.sessions, sessionID)\n}\n","title":"Per-Session State","titles":["Advanced Server Features","Session Management"]},"251":{"href":"/servers/advanced#session-aware-tools","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnRegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Initialize session with default permissions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;anonymous&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnUnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ended&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add session-aware tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_user_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user-specific data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        createSessionAwareTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionManager),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSessionAwareTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        dataType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check permissions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermission</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.Permissions, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;insufficient permissions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Get user-specific data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.UserID, dataType)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    sessionManager := NewSessionManager()\n    \n    hooks := &amp;server.Hooks{}\n    \n    hooks.AddOnRegisterSession(func(ctx context.Context, session server.ClientSession) {\n        // Initialize session with default permissions\n        sessionManager.CreateSession(session.ID(), &quot;anonymous&quot;, []string{&quot;read&quot;})\n        log.Printf(&quot;Session %s started&quot;, session.ID())\n    })\n    \n    hooks.AddOnUnregisterSession(func(ctx context.Context, session server.ClientSession) {\n        sessionManager.RemoveSession(session.ID())\n        log.Printf(&quot;Session %s ended&quot;, session.ID())\n    })\n    \n    s := server.NewMCPServer(&quot;Session Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithHooks(hooks),\n    )\n \n    // Add session-aware tool\n    s.AddTool(\n        mcp.NewTool(&quot;get_user_data&quot;,\n            mcp.WithDescription(&quot;Get user-specific data&quot;),\n            mcp.WithString(&quot;data_type&quot;, mcp.Required()),\n        ),\n        createSessionAwareTool(sessionManager),\n    )\n \n    server.ServeStdio(s)\n}\n \nfunc createSessionAwareTool(sm *SessionManager) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        sessionID := server.GetSessionID(ctx)\n        session, exists := sm.GetSession(sessionID)\n        if !exists {\n            return nil, fmt.Errorf(&quot;invalid session&quot;)\n        }\n \n        dataType := req.Params.Arguments[&quot;data_type&quot;].(string)\n        \n        // Check permissions\n        if !hasPermission(session.Permissions, &quot;read&quot;) {\n            return nil, fmt.Errorf(&quot;insufficient permissions&quot;)\n        }\n \n        // Get user-specific data\n        data, err := getUserData(session.UserID, dataType)\n        if err != nil {\n            return nil, err\n        }\n \n        jsonData, err := json.Marshal(data)\n        if err != nil {\n            return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n        }\n        \n        return mcp.NewToolResultText(string(jsonData)), nil\n    }\n}\n","title":"Session-Aware Tools","titles":["Advanced Server Features","Session Management"]},"252":{"href":"/servers/advanced#middleware","html":"\n<p>Add cross-cutting concerns like logging, authentication, and rate limiting.</p>\n","isPage":false,"text":"\nAdd cross-cutting concerns like logging, authentication, and rate limiting.\n","title":"Middleware","titles":["Advanced Server Features"]},"253":{"href":"/servers/advanced#logging-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> LoggingMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">logger</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{logger: logger}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call started: tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> error=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.Name, duration, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call completed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.Name, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ResourceMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read started: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read failed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> error=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.URI, duration, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read completed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.URI, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype LoggingMiddleware struct {\n    logger *log.Logger\n}\n \nfunc NewLoggingMiddleware(logger *log.Logger) *LoggingMiddleware {\n    return &amp;LoggingMiddleware{logger: logger}\n}\n \nfunc (m *LoggingMiddleware) ToolMiddleware(next server.ToolHandlerFunc) server.ToolHandlerFunc {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        start := time.Now()\n        sessionID := server.GetSessionID(ctx)\n        \n        m.logger.Printf(&quot;Tool call started: tool=%s&quot;, req.Params.Name)\n        \n        result, err := next(ctx, req)\n        \n        duration := time.Since(start)\n        if err != nil {\n            m.logger.Printf(&quot;Tool call failed: session=%s tool=%s duration=%v error=%v&quot;, \n                sessionID, req.Params.Name, duration, err)\n        } else {\n            m.logger.Printf(&quot;Tool call completed: session=%s tool=%s duration=%v&quot;, \n                sessionID, req.Params.Name, duration)\n        }\n        \n        return result, err\n    }\n}\n \nfunc (m *LoggingMiddleware) ResourceMiddleware(next server.ResourceHandler) server.ResourceHandler {\n    return func(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n        start := time.Now()\n        sessionID := server.GetSessionID(ctx)\n        \n        m.logger.Printf(&quot;Resource read started: session=%s uri=%s&quot;, sessionID, req.Params.URI)\n        \n        result, err := next(ctx, req)\n        \n        duration := time.Since(start)\n        if err != nil {\n            m.logger.Printf(&quot;Resource read failed: session=%s uri=%s duration=%v error=%v&quot;, \n                sessionID, req.Params.URI, duration, err)\n        } else {\n            m.logger.Printf(&quot;Resource read completed: session=%s uri=%s duration=%v&quot;, \n                sessionID, req.Params.URI, duration)\n        }\n        \n        return result, err\n    }\n}\n","title":"Logging Middleware","titles":["Advanced Server Features","Middleware"]},"254":{"href":"/servers/advanced#rate-limiting-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RateLimitMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limiters </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rate     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limit</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    burst    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewRateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">requestsPerSecond</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">burst</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiters: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rate:     rate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Limit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(requestsPerSecond),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        burst:    burst,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limiter, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.limiters[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiter </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(m.rate, m.burst)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.limiters[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiter </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">limiter.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Allow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit exceeded for session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype RateLimitMiddleware struct {\n    limiters map[string]*rate.Limiter\n    mutex    sync.RWMutex\n    rate     rate.Limit\n    burst    int\n}\n \nfunc NewRateLimitMiddleware(requestsPerSecond float64, burst int) *RateLimitMiddleware {\n    return &amp;RateLimitMiddleware{\n        limiters: make(map[string]*rate.Limiter),\n        rate:     rate.Limit(requestsPerSecond),\n        burst:    burst,\n    }\n}\n \nfunc (m *RateLimitMiddleware) getLimiter(sessionID string) *rate.Limiter {\n    m.mutex.RLock()\n    limiter, exists := m.limiters[sessionID]\n    m.mutex.RUnlock()\n    \n    if !exists {\n        m.mutex.Lock()\n        limiter = rate.NewLimiter(m.rate, m.burst)\n        m.limiters[sessionID] = limiter\n        m.mutex.Unlock()\n    }\n    \n    return limiter\n}\n \nfunc (m *RateLimitMiddleware) ToolMiddleware(next server.ToolHandler) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        sessionID := server.GetSessionID(ctx)\n        limiter := m.getLimiter(sessionID)\n        \n        if !limiter.Allow() {\n            return nil, fmt.Errorf(&quot;rate limit exceeded for session %s&quot;, sessionID)\n        }\n        \n        return next(ctx, req)\n    }\n}\n","title":"Rate Limiting Middleware","titles":["Advanced Server Features","Middleware"]},"255":{"href":"/servers/advanced#authentication-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AuthMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tokenValidator </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TokenValidator</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">validator</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TokenValidator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{tokenValidator: validator}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Extract token from context or request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Validate token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.tokenValidator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Validate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add user to context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype AuthMiddleware struct {\n    tokenValidator TokenValidator\n}\n \nfunc NewAuthMiddleware(validator TokenValidator) *AuthMiddleware {\n    return &amp;AuthMiddleware{tokenValidator: validator}\n}\n \nfunc (m *AuthMiddleware) ToolMiddleware(next server.ToolHandler) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        // Extract token from context or request\n        token := extractToken(ctx, req)\n        if token == &quot;&quot; {\n            return nil, fmt.Errorf(&quot;authentication required&quot;)\n        }\n        \n        // Validate token\n        user, err := m.tokenValidator.Validate(token)\n        if err != nil {\n            return nil, fmt.Errorf(&quot;invalid token: %w&quot;, err)\n        }\n        \n        // Add user to context\n        ctx = context.WithValue(ctx, &quot;user&quot;, user)\n        \n        return next(ctx, req)\n    }\n}\n","title":"Authentication Middleware","titles":["Advanced Server Features","Middleware"]},"256":{"href":"/servers/advanced#hooks","html":"\n<p>Implement lifecycle callbacks for telemetry, logging, and custom behavior.</p>\n","isPage":false,"text":"\nImplement lifecycle callbacks for telemetry, logging, and custom behavior.\n","title":"Hooks","titles":["Advanced Server Features"]},"257":{"href":"/servers/advanced#comprehensive-hooks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TelemetryHooks</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MetricsCollector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">metrics</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MetricsCollector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">logger</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        metrics: metrics,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        logger:  logger,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnServerStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP Server starting&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.starts&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnServerStop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP Server stopping&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.stops&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session started: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Gauge</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.active&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getActiveSessionCount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session ended: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.ended&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Gauge</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.active&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getActiveSessionCount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.calls&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    toolName,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: sessionID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Histogram</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, duration.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Seconds</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnResourceRead</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.reads&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: sessionID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Histogram</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, duration.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Seconds</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype TelemetryHooks struct {\n    metrics MetricsCollector\n    logger  *log.Logger\n}\n \nfunc NewTelemetryHooks(metrics MetricsCollector, logger *log.Logger) *TelemetryHooks {\n    return &amp;TelemetryHooks{\n        metrics: metrics,\n        logger:  logger,\n    }\n}\n \nfunc (h *TelemetryHooks) OnServerStart() {\n    h.logger.Println(&quot;MCP Server starting&quot;)\n    h.metrics.Increment(&quot;server.starts&quot;)\n}\n \nfunc (h *TelemetryHooks) OnServerStop() {\n    h.logger.Println(&quot;MCP Server stopping&quot;)\n    h.metrics.Increment(&quot;server.stops&quot;)\n}\n \nfunc (h *TelemetryHooks) OnSessionStart(sessionID string) {\n    h.logger.Printf(&quot;Session started: %s&quot;, sessionID)\n    h.metrics.Increment(&quot;sessions.started&quot;)\n    h.metrics.Gauge(&quot;sessions.active&quot;, h.getActiveSessionCount())\n}\n \nfunc (h *TelemetryHooks) OnSessionEnd(sessionID string) {\n    h.logger.Printf(&quot;Session ended: %s&quot;, sessionID)\n    h.metrics.Increment(&quot;sessions.ended&quot;)\n    h.metrics.Gauge(&quot;sessions.active&quot;, h.getActiveSessionCount())\n}\n \nfunc (h *TelemetryHooks) OnToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    h.metrics.Increment(&quot;tools.calls&quot;, map[string]string{\n        &quot;tool&quot;:    toolName,\n        &quot;session&quot;: sessionID,\n    })\n    h.metrics.Histogram(&quot;tools.duration&quot;, duration.Seconds(), map[string]string{\n        &quot;tool&quot;: toolName,\n    })\n    \n    if err != nil {\n        h.metrics.Increment(&quot;tools.errors&quot;, map[string]string{\n            &quot;tool&quot;: toolName,\n        })\n    }\n}\n \nfunc (h *TelemetryHooks) OnResourceRead(sessionID, uri string, duration time.Duration, err error) {\n    h.metrics.Increment(&quot;resources.reads&quot;, map[string]string{\n        &quot;session&quot;: sessionID,\n    })\n    h.metrics.Histogram(&quot;resources.duration&quot;, duration.Seconds())\n    \n    if err != nil {\n        h.metrics.Increment(&quot;resources.errors&quot;)\n    }\n}\n","title":"Comprehensive Hooks","titles":["Advanced Server Features","Hooks"]},"258":{"href":"/servers/advanced#custom-business-logic-hooks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> BusinessHooks</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    auditLogger </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuditLogger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifier    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notifier</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Audit sensitive operations</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isSensitiveTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(toolName) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.auditLogger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LogToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID, toolName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Alert on errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed for session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            toolName, sessionID, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Monitor performance</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Slow tool execution: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> took </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            toolName, duration))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize user-specific resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">initializeUserResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send welcome notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendWelcome</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cleanup user resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupUserResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Log session summary</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.auditLogger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LogSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype BusinessHooks struct {\n    auditLogger AuditLogger\n    notifier    Notifier\n}\n \nfunc (h *BusinessHooks) OnToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    // Audit sensitive operations\n    if isSensitiveTool(toolName) {\n        h.auditLogger.LogToolCall(sessionID, toolName, err)\n    }\n    \n    // Alert on errors\n    if err != nil {\n        h.notifier.SendAlert(fmt.Sprintf(&quot;Tool %s failed for session %s: %v&quot;, \n            toolName, sessionID, err))\n    }\n    \n    // Monitor performance\n    if duration &gt; 30*time.Second {\n        h.notifier.SendAlert(fmt.Sprintf(&quot;Slow tool execution: %s took %v&quot;, \n            toolName, duration))\n    }\n}\n \nfunc (h *BusinessHooks) OnSessionStart(sessionID string) {\n    // Initialize user-specific resources\n    h.initializeUserResources(sessionID)\n    \n    // Send welcome notification\n    h.notifier.SendWelcome(sessionID)\n}\n \nfunc (h *BusinessHooks) OnSessionEnd(sessionID string) {\n    // Cleanup user resources\n    h.cleanupUserResources(sessionID)\n    \n    // Log session summary\n    h.auditLogger.LogSessionEnd(sessionID)\n}\n","title":"Custom Business Logic Hooks","titles":["Advanced Server Features","Hooks"]},"259":{"href":"/servers/advanced#tool-filtering","html":"\n<p>Conditionally expose tools based on context, permissions, or other criteria.</p>\n","isPage":false,"text":"\nConditionally expose tools based on context, permissions, or other criteria.\n","title":"Tool Filtering","titles":["Advanced Server Features"]},"260":{"href":"/servers/advanced#permission-based-filtering","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PermissionFilter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{sessionManager: sm}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FilterTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// No tools for invalid sessions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermissionForTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session, tool.Name) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, tool)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermissionForTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requiredPermissions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;delete_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;modify_system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;read_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;create_report&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    required, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> requiredPermissions[toolName]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Allow tools without specific requirements</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, permission </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session.Permissions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, req </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> required {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> permission </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PermissionFilter struct {\n    sessionManager *SessionManager\n}\n \nfunc NewPermissionFilter(sm *SessionManager) *PermissionFilter {\n    return &amp;PermissionFilter{sessionManager: sm}\n}\n \nfunc (f *PermissionFilter) FilterTools(ctx context.Context, tools []mcp.Tool) []mcp.Tool {\n    sessionID := server.GetSessionID(ctx)\n    session, exists := f.sessionManager.GetSession(sessionID)\n    if !exists {\n        return []mcp.Tool{} // No tools for invalid sessions\n    }\n \n    var filtered []mcp.Tool\n    for _, tool := range tools {\n        if f.hasPermissionForTool(session, tool.Name) {\n            filtered = append(filtered, tool)\n        }\n    }\n    \n    return filtered\n}\n \nfunc (f *PermissionFilter) hasPermissionForTool(session *SessionState, toolName string) bool {\n    requiredPermissions := map[string][]string{\n        &quot;delete_user&quot;:    {&quot;admin&quot;},\n        &quot;modify_system&quot;:  {&quot;admin&quot;, &quot;operator&quot;},\n        &quot;read_data&quot;:      {&quot;admin&quot;, &quot;operator&quot;, &quot;user&quot;},\n        &quot;create_report&quot;:  {&quot;admin&quot;, &quot;operator&quot;, &quot;user&quot;},\n    }\n    \n    required, exists := requiredPermissions[toolName]\n    if !exists {\n        return true // Allow tools without specific requirements\n    }\n    \n    for _, permission := range session.Permissions {\n        for _, req := range required {\n            if permission == req {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n","title":"Permission-Based Filtering","titles":["Advanced Server Features","Tool Filtering"]},"261":{"href":"/servers/advanced#context-based-filtering","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ContextFilter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ContextFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FilterTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeOfDay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Hour</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    environment </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ENVIRONMENT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">shouldIncludeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, timeOfDay, environment) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, tool)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ContextFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">shouldIncludeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tool</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">hour</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">env</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Maintenance tools only during off-hours</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maintenanceTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;backup_database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;cleanup_logs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;restart_service&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maintenanceTools[tool.Name] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> hour </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 6</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> hour </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 22</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Only between 10 PM and 6 AM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Debug tools only in development</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    debugTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;debug_session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dump_state&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> debugTools[tool.Name] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;development&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ContextFilter struct{}\n \nfunc (f *ContextFilter) FilterTools(ctx context.Context, tools []mcp.Tool) []mcp.Tool {\n    timeOfDay := time.Now().Hour()\n    environment := os.Getenv(&quot;ENVIRONMENT&quot;)\n    \n    var filtered []mcp.Tool\n    for _, tool := range tools {\n        if f.shouldIncludeTool(tool, timeOfDay, environment) {\n            filtered = append(filtered, tool)\n        }\n    }\n    \n    return filtered\n}\n \nfunc (f *ContextFilter) shouldIncludeTool(tool mcp.Tool, hour int, env string) bool {\n    // Maintenance tools only during off-hours\n    maintenanceTools := map[string]bool{\n        &quot;backup_database&quot;:  true,\n        &quot;cleanup_logs&quot;:     true,\n        &quot;restart_service&quot;:  true,\n    }\n    \n    if maintenanceTools[tool.Name] {\n        return hour &lt; 6 || hour &gt; 22 // Only between 10 PM and 6 AM\n    }\n    \n    // Debug tools only in development\n    debugTools := map[string]bool{\n        &quot;debug_session&quot;: true,\n        &quot;dump_state&quot;:    true,\n    }\n    \n    if debugTools[tool.Name] {\n        return env == &quot;development&quot;\n    }\n    \n    return true\n}\n","title":"Context-Based Filtering","titles":["Advanced Server Features","Tool Filtering"]},"262":{"href":"/servers/advanced#notifications","html":"\n<p>Send server-to-client messages for real-time updates.</p>\n","isPage":false,"text":"\nSend server-to-client messages for real-time updates.\n","title":"Notifications","titles":["Advanced Server Features"]},"263":{"href":"/servers/advanced#custom-notifications","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleLongRunningTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    srv </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simulate long-running work</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send custom notification to all clients</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;total&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processing step </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/100&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        srv.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToAllClients</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Long operation completed successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleLongRunningTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    srv := server.ServerFromContext(ctx)\n    \n    // Simulate long-running work\n    for i := 0; i &lt; 100; i++ {\n        time.Sleep(100 * time.Millisecond)\n        \n        // Send custom notification to all clients\n        notification := map[string]interface{}{\n            &quot;type&quot;:     &quot;progress&quot;,\n            &quot;progress&quot;: i + 1,\n            &quot;total&quot;:    100,\n            &quot;message&quot;:  fmt.Sprintf(&quot;Processing step %d/100&quot;, i+1),\n        }\n        \n        srv.SendNotificationToAllClients(&quot;progress&quot;, notification)\n    }\n    \n    return mcp.NewToolResultText(&quot;Long operation completed successfully&quot;), nil\n}\n","title":"Custom Notifications","titles":["Advanced Server Features","Notifications"]},"264":{"href":"/servers/advanced#custom-notifications-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CustomNotifier</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewCustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.sessions[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">UnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions[sessionID]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ch)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(n.sessions, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">severity</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions[sessionID]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;alert&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Data: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  message,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;severity&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: severity,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Channel full, drop notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BroadcastSystemMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Data: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   message,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Channel full, skip this session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype CustomNotifier struct {\n    sessions map[string]chan mcp.Notification\n    mutex    sync.RWMutex\n}\n \nfunc NewCustomNotifier() *CustomNotifier {\n    return &amp;CustomNotifier{\n        sessions: make(map[string]chan mcp.Notification),\n    }\n}\n \nfunc (n *CustomNotifier) RegisterSession(sessionID string) {\n    n.mutex.Lock()\n    defer n.mutex.Unlock()\n    \n    n.sessions[sessionID] = make(chan mcp.Notification, 100)\n}\n \nfunc (n *CustomNotifier) UnregisterSession(sessionID string) {\n    n.mutex.Lock()\n    defer n.mutex.Unlock()\n    \n    if ch, exists := n.sessions[sessionID]; exists {\n        close(ch)\n        delete(n.sessions, sessionID)\n    }\n}\n \nfunc (n *CustomNotifier) SendAlert(sessionID, message string, severity string) {\n    n.mutex.RLock()\n    defer n.mutex.RUnlock()\n    \n    if ch, exists := n.sessions[sessionID]; exists {\n        select {\n        case ch &lt;- mcp.Notification{\n            Type: &quot;alert&quot;,\n            Data: map[string]interface{}{\n                &quot;message&quot;:  message,\n                &quot;severity&quot;: severity,\n                &quot;timestamp&quot;: time.Now().Unix(),\n            },\n        }:\n        default:\n            // Channel full, drop notification\n        }\n    }\n}\n \nfunc (n *CustomNotifier) BroadcastSystemMessage(message string) {\n    n.mutex.RLock()\n    defer n.mutex.RUnlock()\n    \n    notification := mcp.Notification{\n        Type: &quot;system_message&quot;,\n        Data: map[string]interface{}{\n            &quot;message&quot;:   message,\n            &quot;timestamp&quot;: time.Now().Unix(),\n        },\n    }\n    \n    for _, ch := range n.sessions {\n        select {\n        case ch &lt;- notification:\n        default:\n            // Channel full, skip this session\n        }\n    }\n}\n","title":"Custom Notifications","titles":["Advanced Server Features","Notifications"]},"265":{"href":"/servers/advanced#production-configuration","html":"\n","isPage":false,"text":"\n","title":"Production Configuration","titles":["Advanced Server Features"]},"266":{"href":"/servers/advanced#complete-production-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize components</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.Stdout, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[MCP] &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, log.LstdFlags)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPrometheusMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifier </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewCustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    loggingMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logger)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rateLimitMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewRateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 10 req/sec, burst 20</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    authMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewJWTValidator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    telemetryHooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics, logger)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    businessHooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewBusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewAuditLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSlackNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server with all features</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Production Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(telemetryHooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolHandlerMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(loggingMW.ToolMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionManager)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools and resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server with graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    startWithGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> startWithGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup signal handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sigChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sigChan, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server in goroutine</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for shutdown signal</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sigChan</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutting down server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Graceful shutdown with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutdown error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server stopped&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    // Initialize components\n    logger := log.New(os.Stdout, &quot;[MCP] &quot;, log.LstdFlags)\n    metrics := NewPrometheusMetrics()\n    sessionManager := NewSessionManager()\n    notifier := NewCustomNotifier()\n    \n    // Create middleware\n    loggingMW := NewLoggingMiddleware(logger)\n    rateLimitMW := NewRateLimitMiddleware(10.0, 20) // 10 req/sec, burst 20\n    authMW := NewAuthMiddleware(NewJWTValidator())\n    \n    // Create hooks\n    telemetryHooks := NewTelemetryHooks(metrics, logger)\n    businessHooks := NewBusinessHooks(NewAuditLogger(), NewSlackNotifier())\n    \n    // Create server with all features\n    s := server.NewMCPServer(&quot;Production Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(false, true),\n        server.WithPromptCapabilities(true),\n        server.WithRecovery(),\n        server.WithHooks(telemetryHooks),\n        server.WithToolHandlerMiddleware(loggingMW.ToolMiddleware),\n        server.WithToolFilter(NewPermissionFilter(sessionManager)),\n    )\n    \n    // Add tools and resources\n    addProductionTools(s)\n    addProductionResources(s)\n    addProductionPrompts(s)\n    \n    // Start server with graceful shutdown\n    startWithGracefulShutdown(s)\n}\n \nfunc startWithGracefulShutdown(s *server.MCPServer) {\n    // Setup signal handling\n    sigChan := make(chan os.Signal, 1)\n    signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM)\n    \n    // Start server in goroutine\n    go func() {\n        if err := server.ServeStdio(s); err != nil {\n            log.Printf(&quot;Server error: %v&quot;, err)\n        }\n    }()\n    \n    // Wait for shutdown signal\n    &lt;-sigChan\n    log.Println(&quot;Shutting down server...&quot;)\n    \n    // Graceful shutdown with timeout\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n    \n    if err := s.Shutdown(ctx); err != nil {\n        log.Printf(&quot;Shutdown error: %v&quot;, err)\n    }\n    \n    log.Println(&quot;Server stopped&quot;)\n}\n","title":"Complete Production Server","titles":["Advanced Server Features","Production Configuration"]},"267":{"href":"/servers/advanced#client-capability-based-filtering","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Typed Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">     s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform basic mathematical calculations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The operation to perform&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;First number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Second number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCalculate,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ClientSessionFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\tif</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\treturn</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no active session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\tif</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientSession, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionWithClientInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">             clientCapabilities </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientSession.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t\t if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientCapabilities.Sampling </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t\t fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sampling is not enabled in client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // TODO: implement calculation logic</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;not implemented&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Typed Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n     s.AddTool(\n        mcp.NewTool(&quot;calculate&quot;,\n            mcp.WithDescription(&quot;Perform basic mathematical calculations&quot;),\n            mcp.WithString(&quot;operation&quot;,\n                mcp.Required(),\n                mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n                mcp.Description(&quot;The operation to perform&quot;),\n            ),\n            mcp.WithNumber(&quot;x&quot;, mcp.Required(), mcp.Description(&quot;First number&quot;)),\n            mcp.WithNumber(&quot;y&quot;, mcp.Required(), mcp.Description(&quot;Second number&quot;)),\n        ),\n        handleCalculate,\n    )\n \n    server.ServeStdio(s)\n}\n \nfunc handleCalculate(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    session := server.ClientSessionFromContext(ctx)\n\tif session == nil {\n\t\treturn nil, fmt.Errorf(&quot;no active session&quot;)\n\t}\n \n\tif clientSession, ok := session.(server.SessionWithClientInfo); ok {\n             clientCapabilities := clientSession.GetClientCapabilities()\n\t\t\t if clientCapabilities.Sampling == nil {\n\t\t\t\t fmt.Println(&quot;sampling is not enabled in client&quot;)\n\t\t\t }\n\t}\n \n    // TODO: implement calculation logic\n    return mcp.NewToolResultError(&quot;not implemented&quot;), nil\n}\n","title":"Client Capability Based Filtering","titles":["Advanced Server Features"]},"268":{"href":"/servers/advanced#sampling-advanced","html":"\n<p>Sampling is an advanced feature that allows servers to request LLM completions from clients. This enables bidirectional communication where servers can leverage client-side LLM capabilities for content generation, reasoning, and question answering.</p>\n<blockquote>\n<p><strong>Note</strong>: Sampling is an advanced feature that most servers don&#x27;t need. Only implement sampling if your server specifically needs to generate content using the client&#x27;s LLM.</p>\n</blockquote>\n","isPage":false,"text":"\nSampling is an advanced feature that allows servers to request LLM completions from clients. This enables bidirectional communication where servers can leverage client-side LLM capabilities for content generation, reasoning, and question answering.\n\nNote: Sampling is an advanced feature that most servers don&#x27;t need. Only implement sampling if your server specifically needs to generate content using the client&#x27;s LLM.\n\n","title":"Sampling (Advanced)","titles":["Advanced Server Features"]},"269":{"href":"/servers/advanced#when-to-use-sampling","html":"\n<p>Consider sampling when your server needs to:</p>\n<ul>\n<li>Generate content based on user input</li>\n<li>Answer questions using LLM reasoning</li>\n<li>Perform text analysis or summarization</li>\n<li>Create dynamic responses that require LLM capabilities</li>\n</ul>\n","isPage":false,"text":"\nConsider sampling when your server needs to:\n\nGenerate content based on user input\nAnswer questions using LLM reasoning\nPerform text analysis or summarization\nCreate dynamic responses that require LLM capabilities\n\n","title":"When to Use Sampling","titles":["Advanced Server Features","Sampling (Advanced)"]},"270":{"href":"/servers/advanced#basic-implementation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable sampling capability</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EnableSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add a tool that uses sampling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ask_llm&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Ask the LLM a question using sampling&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    InputSchema: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Properties: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The question to ask the LLM&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Required: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    question, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;question&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create sampling request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    samplingRequest </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreateMessageParams: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreateMessageParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SamplingMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Content: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        Text: question,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            SystemPrompt: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful assistant.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MaxTokens:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Temperature:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.7</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Request sampling from client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequestSampling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, samplingRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;LLM Response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n<p>For complete sampling documentation, see <strong><a href=\"/servers/advanced-sampling\">Server Sampling Guide</a></strong>.</p>\n","isPage":false,"text":"\n// Enable sampling capability\nmcpServer.EnableSampling()\n \n// Add a tool that uses sampling\nmcpServer.AddTool(mcp.Tool{\n    Name:        &quot;ask_llm&quot;,\n    Description: &quot;Ask the LLM a question using sampling&quot;,\n    InputSchema: mcp.ToolInputSchema{\n        Type: &quot;object&quot;,\n        Properties: map[string]any{\n            &quot;question&quot;: map[string]any{\n                &quot;type&quot;:        &quot;string&quot;,\n                &quot;description&quot;: &quot;The question to ask the LLM&quot;,\n            },\n        },\n        Required: []string{&quot;question&quot;},\n    },\n}, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    question, err := request.RequireString(&quot;question&quot;)\n    if err != nil {\n        return nil, err\n    }\n    \n    // Create sampling request\n    samplingRequest := mcp.CreateMessageRequest{\n        CreateMessageParams: mcp.CreateMessageParams{\n            Messages: []mcp.SamplingMessage{\n                {\n                    Role: mcp.RoleUser,\n                    Content: mcp.TextContent{\n                        Type: &quot;text&quot;,\n                        Text: question,\n                    },\n                },\n            },\n            SystemPrompt: &quot;You are a helpful assistant.&quot;,\n            MaxTokens:    1000,\n            Temperature:  0.7,\n        },\n    }\n    \n    // Request sampling from client\n    result, err := mcpServer.RequestSampling(ctx, samplingRequest)\n    if err != nil {\n        return &amp;mcp.CallToolResult{\n            Content: []mcp.Content{\n                mcp.TextContent{\n                    Type: &quot;text&quot;,\n                    Text: fmt.Sprintf(&quot;Error: %v&quot;, err),\n                },\n            },\n            IsError: true,\n        }, nil\n    }\n    \n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            mcp.TextContent{\n                Type: &quot;text&quot;,\n                Text: fmt.Sprintf(&quot;LLM Response: %s&quot;, result.Content),\n            },\n        },\n    }, nil\n})\nFor complete sampling documentation, see Server Sampling Guide.\n","title":"Basic Implementation","titles":["Advanced Server Features","Sampling (Advanced)"]},"271":{"href":"/servers/advanced#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Learn to build MCP clients</li>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Review fundamental concepts</li>\n</ul>","isPage":false,"text":"\n\nClient Development - Learn to build MCP clients\nServer Basics - Review fundamental concepts\n","title":"Next Steps","titles":["Advanced Server Features"]},"272":{"href":"/servers/basics#server-basics","html":"</header>\n<p>Learn how to create, configure, and start MCP servers with different transport options.</p>\n","isPage":true,"text":"\nLearn how to create, configure, and start MCP servers with different transport options.\n","title":"Server Basics","titles":[]},"273":{"href":"/servers/basics#creating-a-server","html":"\n<p>The foundation of any MCP server is the <code>NewMCPServer()</code> function. This creates a server instance with basic metadata and optional configuration.</p>\n","isPage":false,"text":"\nThe foundation of any MCP server is the NewMCPServer() function. This creates a server instance with basic metadata and optional configuration.\n","title":"Creating a Server","titles":["Server Basics"]},"274":{"href":"/servers/basics#basic-server-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a basic server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;My MCP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server name</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server version</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the server (stdio transport)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a basic server\n    s := server.NewMCPServer(\n        &quot;My MCP Server&quot;,  // Server name\n        &quot;1.0.0&quot;,          // Server version\n    )\n    \n    // Start the server (stdio transport)\n    server.ServeStdio(s)\n}\n","title":"Basic Server Creation","titles":["Server Basics","Creating a Server"]},"275":{"href":"/servers/basics#server-with-options","html":"\n<p>Use server options to configure capabilities and behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Advanced Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;2.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable resources  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),                  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(myHooks),              </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add lifecycle hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nUse server options to configure capabilities and behavior:\ns := server.NewMCPServer(\n    &quot;Advanced Server&quot;,\n    &quot;2.0.0&quot;,\n    server.WithToolCapabilities(true),      // Enable tools\n    server.WithResourceCapabilities(true),  // Enable resources  \n    server.WithPromptCapabilities(true),    // Enable prompts\n    server.WithRecovery(),                  // Add panic recovery\n    server.WithHooks(myHooks),              // Add lifecycle hooks\n)\n","title":"Server with Options","titles":["Server Basics","Creating a Server"]},"276":{"href":"/servers/basics#server-configuration","html":"\n","isPage":false,"text":"\n","title":"Server Configuration","titles":["Server Basics"]},"277":{"href":"/servers/basics#capabilities","html":"\n<p>Capabilities tell clients what features your server supports:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable specific capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Specialized Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can execute tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can provide resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can provide prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Or enable all capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Full-Featured Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>Capability types:</strong>\n<ul>\n<li><strong>Tools</strong>: Server can execute function calls from LLMs</li>\n<li><strong>Resources</strong>: Server can provide data/content to LLMs</li>\n<li><strong>Prompts</strong>: Server can provide prompt templates</li>\n</ul>\n","isPage":false,"text":"\nCapabilities tell clients what features your server supports:\n// Enable specific capabilities\ns := server.NewMCPServer(\n    &quot;Specialized Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),      // Can execute tools\n    server.WithResourceCapabilities(true),  // Can provide resources\n    server.WithPromptCapabilities(true),    // Can provide prompts\n)\n \n// Or enable all capabilities\ns := server.NewMCPServer(\n    &quot;Full-Featured Server&quot;, \n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),\n    server.WithResourceCapabilities(true),\n    server.WithPromptCapabilities(true),\n)\nCapability types:\n\nTools: Server can execute function calls from LLMs\nResources: Server can provide data/content to LLMs\nPrompts: Server can provide prompt templates\n\n","title":"Capabilities","titles":["Server Basics","Server Configuration"]},"278":{"href":"/servers/basics#recovery-middleware","html":"\n<p>Add automatic panic recovery to prevent server crashes:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Robust Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Automatically recover from panics</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>This catches panics in handlers and returns proper error responses instead of crashing.</p>\n","isPage":false,"text":"\nAdd automatic panic recovery to prevent server crashes:\ns := server.NewMCPServer(\n    &quot;Robust Server&quot;,\n    &quot;1.0.0&quot;, \n    server.WithRecovery(), // Automatically recover from panics\n)\nThis catches panics in handlers and returns proper error responses instead of crashing.\n","title":"Recovery Middleware","titles":["Server Basics","Server Configuration"]},"279":{"href":"/servers/basics#custom-metadata","html":"\n<p>Add additional server information:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInstructions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;A server that does amazing things&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nAdd additional server information:\ns := server.NewMCPServer(\n    &quot;My Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithInstructions(&quot;A server that does amazing things&quot;),\n)\n","title":"Custom Metadata","titles":["Server Basics","Server Configuration"]},"280":{"href":"/servers/basics#starting-servers","html":"\n<p>MCP-Go supports multiple transport methods for different deployment scenarios.</p>\n","isPage":false,"text":"\nMCP-Go supports multiple transport methods for different deployment scenarios.\n","title":"Starting Servers","titles":["Server Basics"]},"281":{"href":"/servers/basics#stdio-transport","html":"\n<p>Standard input/output - most common for local tools:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start stdio server (blocks until terminated)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Local development tools</li>\n<li>CLI integrations</li>\n<li>Desktop applications</li>\n<li>Single-client scenarios</li>\n</ul>\n","isPage":false,"text":"\nStandard input/output - most common for local tools:\nfunc main() {\n    s := server.NewMCPServer(&quot;My Server&quot;, &quot;1.0.0&quot;)\n    \n    // Start stdio server (blocks until terminated)\n    if err := server.ServeStdio(s); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nLocal development tools\nCLI integrations\nDesktop applications\nSingle-client scenarios\n\n","title":"Stdio Transport","titles":["Server Basics","Starting Servers"]},"282":{"href":"/servers/basics#http-transport","html":"\n<p>Traditional HTTP request/response:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;HTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start HTTP server on port 8080</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Web services</li>\n<li>Load-balanced deployments</li>\n<li>REST-like APIs</li>\n<li>Caching scenarios</li>\n</ul>\n","isPage":false,"text":"\nTraditional HTTP request/response:\nfunc main() {\n    s := server.NewMCPServer(&quot;HTTP Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create HTTP server\n    httpServer := server.NewStreamableHTTPServer(s)\n    \n    // Start HTTP server on port 8080\n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nWeb services\nLoad-balanced deployments\nREST-like APIs\nCaching scenarios\n\n","title":"HTTP Transport","titles":["Server Basics","Starting Servers"]},"283":{"href":"/servers/basics#server-sent-events-sse","html":"\n<p>HTTP-based streaming for real-time updates:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create SSE server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start SSE server on port 8080</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Web applications</li>\n<li>Real-time notifications</li>\n<li>Multiple concurrent clients</li>\n<li>Browser-based tools</li>\n</ul>\n","isPage":false,"text":"\nHTTP-based streaming for real-time updates:\nfunc main() {\n    s := server.NewMCPServer(&quot;SSE Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create SSE server\n    sseServer := server.NewSSEServer(s)\n    \n    // Start SSE server on port 8080\n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nWeb applications\nReal-time notifications\nMultiple concurrent clients\nBrowser-based tools\n\n","title":"Server-Sent Events (SSE)","titles":["Server Basics","Starting Servers"]},"284":{"href":"/servers/basics#custom-transport-options","html":"\n<p>Configure transport-specific options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// HTTP with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithEndpointPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStateless</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTLSCert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/cert.pem&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/key.pem&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/events&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMessageEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAlive</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConfigure transport-specific options:\n// HTTP with custom options\nhttpServer := server.NewStreamableHTTPServer(s,\n    server.WithEndpointPath(&quot;/mcp&quot;),\n    server.WithStateless(true),\n    server.WithTLSCert(&quot;/path/to/cert.pem&quot;, &quot;/path/to/key.pem&quot;),\n)\n \nif err := httpServer.Start(&quot;:8080&quot;); err != nil {\n    log.Fatal(err)\n}\n \n// SSE with custom options\nsseServer := server.NewSSEServer(s,\n    server.WithSSEEndpoint(&quot;/events&quot;),\n    server.WithMessageEndpoint(&quot;/message&quot;),\n    server.WithKeepAlive(true),\n)\n \nif err := sseServer.Start(&quot;:8080&quot;); err != nil {\n    log.Fatal(err)\n}\n","title":"Custom Transport Options","titles":["Server Basics","Starting Servers"]},"285":{"href":"/servers/basics#environment-based-configuration","html":"\n<p>Configure servers based on environment variables:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Configurable Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Choose transport based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConfigure servers based on environment variables:\nfunc main() {\n    s := server.NewMCPServer(&quot;Configurable Server&quot;, &quot;1.0.0&quot;)\n    \n    // Choose transport based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    port := os.Getenv(&quot;PORT&quot;)\n    if port == &quot;&quot; {\n        port = &quot;8080&quot;\n    }\n    \n    switch transport {\n    case &quot;http&quot;:\n        httpServer := server.NewStreamableHTTPServer(s)\n        httpServer.Start(&quot;:&quot;+port)\n    case &quot;sse&quot;:\n        sseServer := server.NewSSEServer(s)\n        sseServer.Start(&quot;:&quot;+port)\n    default:\n        server.ServeStdio(s)\n    }\n}\n}\n","title":"Environment-Based Configuration","titles":["Server Basics"]},"286":{"href":"/servers/basics#server-lifecycle","html":"\n<p>Understanding the server lifecycle helps with proper resource management:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add session lifecycle hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnRegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnUnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> disconnected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add request hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddBeforeAny</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">id</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPMethod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processing </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, method)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">id</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPMethod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, method, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lifecycle Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutting down server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nUnderstanding the server lifecycle helps with proper resource management:\nfunc main() {\n    hooks := &amp;server.Hooks{}\n    \n    // Add session lifecycle hooks\n    hooks.AddOnRegisterSession(func(ctx context.Context, session server.ClientSession) {\n        log.Printf(&quot;Client %s connected&quot;, session.ID())\n    })\n    \n    hooks.AddOnUnregisterSession(func(ctx context.Context, session server.ClientSession) {\n        log.Printf(&quot;Client %s disconnected&quot;, session.ID())\n    })\n    \n    // Add request hooks\n    hooks.AddBeforeAny(func(ctx context.Context, id any, method mcp.MCPMethod, message any) {\n        log.Printf(&quot;Processing %s request&quot;, method)\n    })\n    \n    hooks.AddOnError(func(ctx context.Context, id any, method mcp.MCPMethod, message any, err error) {\n        log.Printf(&quot;Error in %s: %v&quot;, method, err)\n    })\n    \n    s := server.NewMCPServer(&quot;Lifecycle Server&quot;, &quot;1.0.0&quot;,\n        server.WithHooks(hooks),\n    )\n    \n    // Graceful shutdown\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        &lt;-c\n        log.Println(&quot;Shutting down server...&quot;)\n        s.Shutdown()\n    }()\n    \n    server.ServeStdio(s)\n}\n","title":"Server Lifecycle","titles":["Server Basics"]},"287":{"href":"/servers/basics#error-handling","html":"\n<p>Proper error handling ensures robust server operation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error-Safe Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add error handling for server startup</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, server.ErrServerClosed) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server closed gracefully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nProper error handling ensures robust server operation:\nfunc main() {\n    s := server.NewMCPServer(&quot;Error-Safe Server&quot;, &quot;1.0.0&quot;,\n        server.WithRecovery(), // Panic recovery\n    )\n    \n    // Add error handling for server startup\n    if err := server.ServeStdio(s); err != nil {\n        if errors.Is(err, server.ErrServerClosed) {\n            log.Println(&quot;Server closed gracefully&quot;)\n        } else {\n            log.Fatalf(&quot;Server error: %v&quot;, err)\n        }\n    }\n}\n","title":"Error Handling","titles":["Server Basics"]},"288":{"href":"/servers/basics#next-steps","html":"\n<p>Now that you understand server basics, learn how to add functionality:</p>\n<ul>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Expose data to LLMs</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Provide functionality to LLMs</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Hooks, middleware, and more</li>\n</ul>","isPage":false,"text":"\nNow that you understand server basics, learn how to add functionality:\n\nResources - Expose data to LLMs\nTools - Provide functionality to LLMs\nPrompts - Create reusable interaction templates\nAdvanced Features - Hooks, middleware, and more\n","title":"Next Steps","titles":["Server Basics"]},"289":{"href":"/servers#building-mcp-servers","html":"</header>\n<p>Learn how to build powerful MCP servers with MCP-Go. This section covers everything from basic server setup to advanced features like typed tools and session management.</p>\n","isPage":true,"text":"\nLearn how to build powerful MCP servers with MCP-Go. This section covers everything from basic server setup to advanced features like typed tools and session management.\n","title":"Building MCP Servers","titles":[]},"290":{"href":"/servers#overview","html":"\n<p>MCP servers expose tools, resources, and prompts to LLM clients. MCP-Go makes it easy to build robust servers with minimal boilerplate while providing full control over advanced features.</p>\n","isPage":false,"text":"\nMCP servers expose tools, resources, and prompts to LLM clients. MCP-Go makes it easy to build robust servers with minimal boilerplate while providing full control over advanced features.\n","title":"Overview","titles":["Building MCP Servers"]},"291":{"href":"/servers#what-youll-learn","html":"\n<ul>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Creating and configuring servers</li>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Exposing data to LLMs</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Providing functionality to LLMs</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Creating reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Typed tools, middleware, hooks, sampling, and more</li>\n</ul>\n","isPage":false,"text":"\n\nServer Basics - Creating and configuring servers\nResources - Exposing data to LLMs\nTools - Providing functionality to LLMs\nPrompts - Creating reusable interaction templates\nAdvanced Features - Typed tools, middleware, hooks, sampling, and more\n\n","title":"What You&#x27;ll Learn","titles":["Building MCP Servers"]},"292":{"href":"/servers#quick-example","html":"\n<p>Here&#x27;s a complete MCP server that demonstrates the key concepts:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> start </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server with capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Demo Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get the current time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Time format (RFC3339, Unix, etc.)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;RFC3339&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleGetTime,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;config://server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Server Configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current server configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleConfig,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_logs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze server logs for issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;log_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ArgumentDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Minimum log level to analyze&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleAnalyzeLogs,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    format </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;RFC3339&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> format {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Unix&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Format</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.RFC3339)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(timeStr), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Demo Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;uptime&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configJSON, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(configJSON),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleAnalyzeLogs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;error&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // default value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments; args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> level, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;log_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            logLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> level</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze server logs for potential issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Please analyze the server logs for entries at </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> level or higher. &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Look for patterns, errors, and potential issues that need attention.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    logLevel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete MCP server that demonstrates the key concepts:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nvar start time.Time\n \nfunc main() {\n    start = time.Now()\n    // Create server with capabilities\n    s := server.NewMCPServer(\n        &quot;Demo Server&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(false, true),\n        server.WithPromptCapabilities(true),\n    )\n \n    // Add a tool\n    s.AddTool(\n        mcp.NewTool(&quot;get_time&quot;,\n            mcp.WithDescription(&quot;Get the current time&quot;),\n            mcp.WithString(&quot;format&quot;, \n                mcp.Description(&quot;Time format (RFC3339, Unix, etc.)&quot;),\n                mcp.DefaultString(&quot;RFC3339&quot;),\n            ),\n        ),\n        handleGetTime,\n    )\n \n    // Add a resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;config://server&quot;,\n            &quot;Server Configuration&quot;,\n            mcp.WithResourceDescription(&quot;Current server configuration&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleConfig,\n    )\n \n    // Add a prompt\n    s.AddPrompt(\n        mcp.NewPrompt(&quot;analyze_logs&quot;,\n            mcp.WithPromptDescription(&quot;Analyze server logs for issues&quot;),\n            mcp.WithArgument(&quot;log_level&quot;,\n                mcp.ArgumentDescription(&quot;Minimum log level to analyze&quot;),\n            ),\n        ),\n        handleAnalyzeLogs,\n    )\n \n    // Start the server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc handleGetTime(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    format := req.GetString(&quot;format&quot;, &quot;RFC3339&quot;)\n    \n    var timeStr string\n    switch format {\n    case &quot;Unix&quot;:\n        timeStr = fmt.Sprintf(&quot;%d&quot;, time.Now().Unix())\n    default:\n        timeStr = time.Now().Format(time.RFC3339)\n    }\n    \n    return mcp.NewToolResultText(timeStr), nil\n}\n \nfunc handleConfig(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    config := map[string]interface{}{\n        &quot;name&quot;: &quot;Demo Server&quot;,\n        &quot;version&quot;: &quot;1.0.0&quot;,\n        &quot;uptime&quot;: time.Since(start).String(),\n    }\n    \n    configJSON, err := json.Marshal(config)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(configJSON),\n        },\n    }, nil\n}\n \nfunc handleAnalyzeLogs(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    logLevel := &quot;error&quot; // default value\n    if args := req.Params.Arguments; args != nil {\n        if level, ok := args[&quot;log_level&quot;].(string); ok {\n            logLevel = level\n        }\n    }\n    \n    return &amp;mcp.GetPromptResult{\n        Description: &quot;Analyze server logs for potential issues&quot;,\n        Messages: []mcp.PromptMessage{\n            {\n                Role: mcp.RoleUser,\n                Content: mcp.NewTextContent(fmt.Sprintf(\n                    &quot;Please analyze the server logs for entries at %s level or higher. &quot;+\n                    &quot;Look for patterns, errors, and potential issues that need attention.&quot;,\n                    logLevel,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Quick Example","titles":["Building MCP Servers"]},"293":{"href":"/servers#next-steps","html":"\n<p>Start with <a href=\"/servers/basics\">Server Basics</a> to learn how to create and configure your first MCP server, then explore the other sections to add resources, tools, and advanced features.</p>","isPage":false,"text":"\nStart with Server Basics to learn how to create and configure your first MCP server, then explore the other sections to add resources, tools, and advanced features.","title":"Next Steps","titles":["Building MCP Servers"]},"294":{"href":"/servers/prompts#implementing-prompts","html":"</header>\n<p>Prompts are reusable interaction templates that help structure conversations between users and LLMs. They provide context, instructions, and can include dynamic content from resources.</p>\n","isPage":true,"text":"\nPrompts are reusable interaction templates that help structure conversations between users and LLMs. They provide context, instructions, and can include dynamic content from resources.\n","title":"Implementing Prompts","titles":[]},"295":{"href":"/servers/prompts#prompt-fundamentals","html":"\n<p>Prompts in MCP serve as templates that can be invoked by LLMs to generate structured interactions. They&#x27;re particularly useful for complex workflows, analysis tasks, or any scenario where you want to provide consistent context and instructions.</p>\n","isPage":false,"text":"\nPrompts in MCP serve as templates that can be invoked by LLMs to generate structured interactions. They&#x27;re particularly useful for complex workflows, analysis tasks, or any scenario where you want to provide consistent context and instructions.\n","title":"Prompt Fundamentals","titles":["Implementing Prompts"]},"296":{"href":"/servers/prompts#basic-prompt-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices and issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;auto-detect&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple prompt\nprompt := mcp.NewPrompt(&quot;code_review&quot;,\n    mcp.WithPromptDescription(&quot;Review code for best practices and issues&quot;),\n    mcp.WithPromptArgument(&quot;code&quot;,\n        mcp.Required(),\n        mcp.Description(&quot;The code to review&quot;),\n    ),\n    mcp.WithPromptArgument(&quot;language&quot;,\n        mcp.Description(&quot;Programming language&quot;),\n        mcp.Default(&quot;auto-detect&quot;),\n    ),\n)\n","title":"Basic Prompt Structure","titles":["Implementing Prompts","Prompt Fundamentals"]},"297":{"href":"/servers/prompts#prompt-templates","html":"\n","isPage":false,"text":"\n","title":"Prompt Templates","titles":["Implementing Prompts"]},"298":{"href":"/servers/prompts#basic-code-review-prompt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code Assistant&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    codeReviewPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices, bugs, and improvements&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language (auto-detected if not specified)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Specific areas to focus on&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;security&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;performance&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;readability&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(codeReviewPrompt, handleCodeReview)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCodeReview</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract arguments safely</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;missing required arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    code, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code argument is required and must be a string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    language </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;auto-detect&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    focus </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build the prompt based on focus area</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> focus {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;security&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus specifically on security vulnerabilities, input validation, and potential attack vectors.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;performance&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on performance optimizations, algorithmic efficiency, and resource usage.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;readability&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on code clarity, naming conventions, and maintainability.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on language-specific best practices and design patterns.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Provide a comprehensive review covering security, performance, readability, and best practices.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code review for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, language),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Please review the following </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> code:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Instructions: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Overall assessment</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Specific issues found</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Suggested improvements</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Best practice recommendations</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Code:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Code Assistant&quot;, &quot;1.0.0&quot;,\n        server.WithPromptCapabilities(true),\n    )\n \n    // Code review prompt\n    codeReviewPrompt := mcp.NewPrompt(&quot;code_review&quot;,\n        mcp.WithPromptDescription(&quot;Review code for best practices, bugs, and improvements&quot;),\n        mcp.WithPromptArgument(&quot;code&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;The code to review&quot;),\n        ),\n        mcp.WithPromptArgument(&quot;language&quot;,\n            mcp.Description(&quot;Programming language (auto-detected if not specified)&quot;),\n        ),\n        mcp.WithPromptArgument(&quot;focus&quot;,\n            mcp.Description(&quot;Specific areas to focus on&quot;),\n            mcp.Enum(&quot;security&quot;, &quot;performance&quot;, &quot;readability&quot;, &quot;best-practices&quot;, &quot;all&quot;),\n            mcp.Default(&quot;all&quot;),\n        ),\n    )\n \n    s.AddPrompt(codeReviewPrompt, handleCodeReview)\n    server.ServeStdio(s)\n}\n \nfunc handleCodeReview(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    // Extract arguments safely\n    args := req.Params.Arguments\n    if args == nil {\n        return nil, fmt.Errorf(&quot;missing required arguments&quot;)\n    }\n    \n    code, ok := args[&quot;code&quot;].(string)\n    if !ok {\n        return nil, fmt.Errorf(&quot;code argument is required and must be a string&quot;)\n    }\n    \n    language := getStringArg(args, &quot;language&quot;, &quot;auto-detect&quot;)\n    focus := getStringArg(args, &quot;focus&quot;, &quot;all&quot;)\n \n    // Build the prompt based on focus area\n    var instructions string\n    switch focus {\n    case &quot;security&quot;:\n        instructions = &quot;Focus specifically on security vulnerabilities, input validation, and potential attack vectors.&quot;\n    case &quot;performance&quot;:\n        instructions = &quot;Focus on performance optimizations, algorithmic efficiency, and resource usage.&quot;\n    case &quot;readability&quot;:\n        instructions = &quot;Focus on code clarity, naming conventions, and maintainability.&quot;\n    case &quot;best-practices&quot;:\n        instructions = &quot;Focus on language-specific best practices and design patterns.&quot;\n    default:\n        instructions = &quot;Provide a comprehensive review covering security, performance, readability, and best practices.&quot;\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Code review for %s code&quot;, language),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(\n                    &quot;Please review the following %s code:\\n\\n%s\\n\\nInstructions: %s\\n\\nPlease provide:\\n1. Overall assessment\\n2. Specific issues found\\n3. Suggested improvements\\n4. Best practice recommendations\\n\\nCode:\\n\n","title":"Basic Code Review Prompt","titles":["Implementing Prompts","Prompt Templates"]},"299":{"href":"/servers/prompts#data-analysis-prompt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDataAnalysis</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    datasetURI </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    focusAreas </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch the dataset (this would typically read from a resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dataset, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchDataset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, datasetURI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch dataset: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build analysis instructions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please analyze the provided dataset. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> analysisType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform exploratory data analysis including summary statistics, distributions, and patterns.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;predictive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Focus on predictive modeling opportunities and feature relationships.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;diagnostic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Identify data quality issues, outliers, and potential problems.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(focusAreas) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot; Pay special attention to: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Join</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(focusAreas, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;, &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> analysis of dataset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(analysisType)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Dataset Information:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Source: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Records: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Columns: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Dataset Preview:</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide a comprehensive analysis including:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Data overview and quality assessment</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Key insights and patterns</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Recommendations for further analysis</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Potential issues or concerns`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    datasetURI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    dataset.RecordCount,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Join</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(dataset.Columns, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;, &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    dataset.Preview,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDataAnalysis(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    datasetURI := req.Params.Arguments[&quot;dataset_uri&quot;].(string)\n    analysisType := getStringArg(req.Params.Arguments, &quot;analysis_type&quot;, &quot;exploratory&quot;)\n    focusAreas := getStringSliceArg(req.Params.Arguments, &quot;focus_areas&quot;, []string{})\n \n    // Fetch the dataset (this would typically read from a resource)\n    dataset, err := fetchDataset(ctx, datasetURI)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to fetch dataset: %w&quot;, err)\n    }\n \n    // Build analysis instructions\n    var instructions strings.Builder\n    instructions.WriteString(&quot;Please analyze the provided dataset. &quot;)\n \n    switch analysisType {\n    case &quot;exploratory&quot;:\n        instructions.WriteString(&quot;Perform exploratory data analysis including summary statistics, distributions, and patterns.&quot;)\n    case &quot;predictive&quot;:\n        instructions.WriteString(&quot;Focus on predictive modeling opportunities and feature relationships.&quot;)\n    case &quot;diagnostic&quot;:\n        instructions.WriteString(&quot;Identify data quality issues, outliers, and potential problems.&quot;)\n    }\n \n    if len(focusAreas) &gt; 0 {\n        instructions.WriteString(fmt.Sprintf(&quot; Pay special attention to: %s.&quot;, strings.Join(focusAreas, &quot;, &quot;)))\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s analysis of dataset&quot;, strings.Title(analysisType)),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(`%s\n \nDataset Information:\n- Source: %s\n- Records: %d\n- Columns: %s\n \nDataset Preview:\n%s\n \nPlease provide a comprehensive analysis including:\n1. Data overview and quality assessment\n2. Key insights and patterns\n3. Recommendations for further analysis\n4. Potential issues or concerns`,\n                    instructions.String(),\n                    datasetURI,\n                    dataset.RecordCount,\n                    strings.Join(dataset.Columns, &quot;, &quot;),\n                    dataset.Preview,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Data Analysis Prompt","titles":["Implementing Prompts","Prompt Templates"]},"300":{"href":"/servers/prompts#prompt-arguments","html":"\n","isPage":false,"text":"\n","title":"Prompt Arguments","titles":["Implementing Prompts"]},"301":{"href":"/servers/prompts#flexible-parameter-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleFlexiblePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Required arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    task </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Optional arguments with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tone </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;professional&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    length </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;length&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    audience </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;audience&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;general&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Array arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    keywords </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;keywords&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Object arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> constraints </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;constraints&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        constraints </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build prompt based on parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> buildDynamicPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(task, tone, length, audience, keywords, constraints)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Generate </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, task),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> slice, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(slice))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, v </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> slice {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> v.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    result[i] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleFlexiblePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    // Required arguments\n    task := req.Params.Arguments[&quot;task&quot;].(string)\n    \n    // Optional arguments with defaults\n    tone := getStringArg(req.Params.Arguments, &quot;tone&quot;, &quot;professional&quot;)\n    length := getStringArg(req.Params.Arguments, &quot;length&quot;, &quot;medium&quot;)\n    audience := getStringArg(req.Params.Arguments, &quot;audience&quot;, &quot;general&quot;)\n    \n    // Array arguments\n    keywords := getStringSliceArg(req.Params.Arguments, &quot;keywords&quot;, []string{})\n    \n    // Object arguments\n    var constraints map[string]interface{}\n    if c, exists := req.Params.Arguments[&quot;constraints&quot;]; exists {\n        constraints = c.(map[string]interface{})\n    }\n \n    // Build prompt based on parameters\n    prompt := buildDynamicPrompt(task, tone, length, audience, keywords, constraints)\n    \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Generate %s content&quot;, task),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(prompt),\n            },\n        },\n    }, nil\n}\n \nfunc getStringArg(args map[string]interface{}, key, defaultValue string) string {\n    if val, exists := args[key]; exists {\n        if str, ok := val.(string); ok {\n            return str\n        }\n    }\n    return defaultValue\n}\n \nfunc getStringSliceArg(args map[string]interface{}, key string, defaultValue []string) []string {\n    if val, exists := args[key]; exists {\n        if slice, ok := val.([]interface{}); ok {\n            result := make([]string, len(slice))\n            for i, v := range slice {\n                if str, ok := v.(string); ok {\n                    result[i] = str\n                }\n            }\n            return result\n        }\n    }\n    return defaultValue\n}\n","title":"Flexible Parameter Handling","titles":["Implementing Prompts","Prompt Arguments"]},"302":{"href":"/servers/prompts#message-types","html":"\n","isPage":false,"text":"\n","title":"Message Types","titles":["Implementing Prompts"]},"303":{"href":"/servers/prompts#multi-message-conversations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConversationPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    scenario </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;scenario&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userRole </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_role&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;customer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> scenario {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;customer_support&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful customer support representative. Be polite, professional, and solution-oriented.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;I&#x27;m a </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> with a question about your service.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userRole)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;assistant&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello! I&#x27;m here to help. What can I assist you with today?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please continue the conversation based on the customer&#x27;s needs.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;technical_interview&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are conducting a technical interview. Ask thoughtful questions and provide constructive feedback.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Let&#x27;s begin the technical interview. Please start with an appropriate question.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> conversation scenario&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(scenario)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleConversationPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    scenario := req.Params.Arguments[&quot;scenario&quot;].(string)\n    userRole := getStringArg(req.Params.Arguments, &quot;user_role&quot;, &quot;customer&quot;)\n    \n    var messages []mcp.PromptMessage\n    \n    switch scenario {\n    case &quot;customer_support&quot;:\n        messages = []mcp.PromptMessage{\n            {\n                Role: &quot;system&quot;,\n                Content: mcp.NewTextContent(&quot;You are a helpful customer support representative. Be polite, professional, and solution-oriented.&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(&quot;I&#x27;m a %s with a question about your service.&quot;, userRole)),\n            },\n            {\n                Role: &quot;assistant&quot;, \n                Content: mcp.NewTextContent(&quot;Hello! I&#x27;m here to help. What can I assist you with today?&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(&quot;Please continue the conversation based on the customer&#x27;s needs.&quot;),\n            },\n        }\n        \n    case &quot;technical_interview&quot;:\n        messages = []mcp.PromptMessage{\n            {\n                Role: &quot;system&quot;,\n                Content: mcp.NewTextContent(&quot;You are conducting a technical interview. Ask thoughtful questions and provide constructive feedback.&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(&quot;Let&#x27;s begin the technical interview. Please start with an appropriate question.&quot;),\n            },\n        }\n    }\n    \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s conversation scenario&quot;, strings.Title(scenario)),\n        Messages:    messages,\n    }, nil\n}\n","title":"Multi-Message Conversations","titles":["Implementing Prompts","Message Types"]},"304":{"href":"/servers/prompts#system-and-user-roles","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleRoleBasedPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    expertise </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expertise&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    task </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    context </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;context&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define system message based on expertise</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> expertise {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;software_engineer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are an experienced software engineer with expertise in system design, code quality, and best practices.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;data_scientist&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are a data scientist with expertise in statistical analysis, machine learning, and data visualization.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;product_manager&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are a product manager with expertise in user experience, market analysis, and feature prioritization.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are an expert in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, expertise)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(systemMessage),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add context if provided</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Context: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, context)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add the main task</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(task),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(expertise)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleRoleBasedPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    expertise := req.Params.Arguments[&quot;expertise&quot;].(string)\n    task := req.Params.Arguments[&quot;task&quot;].(string)\n    context := getStringArg(req.Params.Arguments, &quot;context&quot;, &quot;&quot;)\n \n    // Define system message based on expertise\n    var systemMessage string\n    switch expertise {\n    case &quot;software_engineer&quot;:\n        systemMessage = &quot;You are an experienced software engineer with expertise in system design, code quality, and best practices.&quot;\n    case &quot;data_scientist&quot;:\n        systemMessage = &quot;You are a data scientist with expertise in statistical analysis, machine learning, and data visualization.&quot;\n    case &quot;product_manager&quot;:\n        systemMessage = &quot;You are a product manager with expertise in user experience, market analysis, and feature prioritization.&quot;\n    default:\n        systemMessage = fmt.Sprintf(&quot;You are an expert in %s.&quot;, expertise)\n    }\n \n    messages := []mcp.PromptMessage{\n        {\n            Role: &quot;system&quot;,\n            Content: mcp.NewTextContent(systemMessage),\n        },\n    }\n \n    // Add context if provided\n    if context != &quot;&quot; {\n        messages = append(messages, mcp.PromptMessage{\n            Role: &quot;user&quot;,\n            Content: mcp.NewTextContent(fmt.Sprintf(&quot;Context: %s&quot;, context)),\n        })\n    }\n \n    // Add the main task\n    messages = append(messages, mcp.PromptMessage{\n        Role: &quot;user&quot;,\n        Content: mcp.NewTextContent(task),\n    })\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s task&quot;, strings.Title(expertise)),\n        Messages:    messages,\n    }, nil\n}\n","title":"System and User Roles","titles":["Implementing Prompts","Message Types"]},"305":{"href":"/servers/prompts#embedded-resources","html":"\n","isPage":false,"text":"\n","title":"Embedded Resources","titles":["Implementing Prompts"]},"306":{"href":"/servers/prompts#including-resource-data","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceEmbeddedPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    documentURI </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;document_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;summary&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch the document content</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    document, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, documentURI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch document: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build analysis prompt with embedded content</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> analysisType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;summary&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please provide a concise summary of the key points in this document.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;critique&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please provide a critical analysis of the arguments and evidence presented.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;questions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please generate thoughtful questions that this document raises or could be used to explore.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;action_items&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please extract actionable items and recommendations from this document.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, analysisType),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Document: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Content:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">---</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">---</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide your analysis following the instructions above.`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    instructions,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    documentURI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    document.Content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceEmbeddedPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    documentURI := req.Params.Arguments[&quot;document_uri&quot;].(string)\n    analysisType := getStringArg(req.Params.Arguments, &quot;analysis_type&quot;, &quot;summary&quot;)\n \n    // Fetch the document content\n    document, err := fetchResource(ctx, documentURI)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to fetch document: %w&quot;, err)\n    }\n \n    // Build analysis prompt with embedded content\n    var instructions string\n    switch analysisType {\n    case &quot;summary&quot;:\n        instructions = &quot;Please provide a concise summary of the key points in this document.&quot;\n    case &quot;critique&quot;:\n        instructions = &quot;Please provide a critical analysis of the arguments and evidence presented.&quot;\n    case &quot;questions&quot;:\n        instructions = &quot;Please generate thoughtful questions that this document raises or could be used to explore.&quot;\n    case &quot;action_items&quot;:\n        instructions = &quot;Please extract actionable items and recommendations from this document.&quot;\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Document %s&quot;, analysisType),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(`%s\n \nDocument: %s\nContent:\n---\n%s\n---\n \nPlease provide your analysis following the instructions above.`,\n                    instructions,\n                    documentURI,\n                    document.Content,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Including Resource Data","titles":["Implementing Prompts","Embedded Resources"]},"307":{"href":"/servers/prompts#dynamic-resource-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDynamicResourcePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resourceURIs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource_uris&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    promptType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;prompt_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;compare&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch all resources</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceData</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, uri </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resourceURIs {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uriStr, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, uriStr)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uriStr, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resources </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build prompt based on type and resources</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;compare&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please compare and contrast the following documents:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Content))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Key similarities</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Important differences</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Overall assessment&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;synthesize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please synthesize information from the following sources:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Source </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Content))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please create a unified analysis that incorporates insights from all sources.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> multiple resources&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(promptType)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDynamicResourcePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    resourceURIs := req.Params.Arguments[&quot;resource_uris&quot;].([]interface{})\n    promptType := getStringArg(req.Params.Arguments, &quot;prompt_type&quot;, &quot;compare&quot;)\n \n    // Fetch all resources\n    var resources []ResourceData\n    for _, uri := range resourceURIs {\n        if uriStr, ok := uri.(string); ok {\n            resource, err := fetchResource(ctx, uriStr)\n            if err != nil {\n                return nil, fmt.Errorf(&quot;failed to fetch resource %s: %w&quot;, uriStr, err)\n            }\n            resources = append(resources, resource)\n        }\n    }\n \n    // Build prompt based on type and resources\n    var content strings.Builder\n    \n    switch promptType {\n    case &quot;compare&quot;:\n        content.WriteString(&quot;Please compare and contrast the following documents:\\n\\n&quot;)\n        for i, resource := range resources {\n            content.WriteString(fmt.Sprintf(&quot;Document %d (%s):\\n%s\\n\\n&quot;, i+1, resource.URI, resource.Content))\n        }\n        content.WriteString(&quot;Please provide:\\n1. Key similarities\\n2. Important differences\\n3. Overall assessment&quot;)\n        \n    case &quot;synthesize&quot;:\n        content.WriteString(&quot;Please synthesize information from the following sources:\\n\\n&quot;)\n        for i, resource := range resources {\n            content.WriteString(fmt.Sprintf(&quot;Source %d (%s):\\n%s\\n\\n&quot;, i+1, resource.URI, resource.Content))\n        }\n        content.WriteString(&quot;Please create a unified analysis that incorporates insights from all sources.&quot;)\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s multiple resources&quot;, strings.Title(promptType)),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(content.String()),\n            },\n        },\n    }, nil\n}\n","title":"Dynamic Resource Integration","titles":["Implementing Prompts","Embedded Resources"]},"308":{"href":"/servers/prompts#advanced-prompt-patterns","html":"\n","isPage":false,"text":"\n","title":"Advanced Prompt Patterns","titles":["Implementing Prompts"]},"309":{"href":"/servers/prompts#conditional-prompts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConditionalPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;beginner&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    topic </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;topic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    includeExamples </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getBoolArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;include_examples&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Adjust complexity based on user level</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userLevel {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;beginner&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please explain </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> in simple terms suitable for someone new to the topic. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Use clear language and avoid jargon. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;intermediate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide a detailed explanation of </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Include technical details but ensure clarity. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;advanced&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide an in-depth analysis of </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Include advanced concepts, edge cases, and technical nuances. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> includeExamples {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please include relevant examples and practical applications.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> explanation for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic, userLevel),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getBoolArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleConditionalPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    userLevel := getStringArg(req.Params.Arguments, &quot;user_level&quot;, &quot;beginner&quot;)\n    topic := req.Params.Arguments[&quot;topic&quot;].(string)\n    includeExamples := getBoolArg(req.Params.Arguments, &quot;include_examples&quot;, true)\n \n    var prompt strings.Builder\n    \n    // Adjust complexity based on user level\n    switch userLevel {\n    case &quot;beginner&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please explain %s in simple terms suitable for someone new to the topic. &quot;, topic))\n        prompt.WriteString(&quot;Use clear language and avoid jargon. &quot;)\n    case &quot;intermediate&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please provide a detailed explanation of %s. &quot;, topic))\n        prompt.WriteString(&quot;Include technical details but ensure clarity. &quot;)\n    case &quot;advanced&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please provide an in-depth analysis of %s. &quot;, topic))\n        prompt.WriteString(&quot;Include advanced concepts, edge cases, and technical nuances. &quot;)\n    }\n \n    if includeExamples {\n        prompt.WriteString(&quot;Please include relevant examples and practical applications.&quot;)\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s explanation for %s level&quot;, topic, userLevel),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(prompt.String()),\n            },\n        },\n    }, nil\n}\n \nfunc getBoolArg(args map[string]interface{}, key string, defaultValue bool) bool {\n    if val, exists := args[key]; exists {\n        if b, ok := val.(bool); ok {\n            return b\n        }\n    }\n    return defaultValue\n}\n","title":"Conditional Prompts","titles":["Implementing Prompts","Advanced Prompt Patterns"]},"310":{"href":"/servers/prompts#template-based-prompts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PromptTemplate</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Template    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Variables   []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptTemplates </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptTemplate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;bug_report&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bug Report Analysis&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze a bug report and suggest solutions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Template: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Please analyze this bug report:</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Bug Description:** {{.description}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Steps to Reproduce:** {{.steps}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Expected Behavior:** {{.expected}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Actual Behavior:** {{.actual}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Environment:** {{.environment}}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Root cause analysis</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Potential solutions</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Prevention strategies</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Priority assessment`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Variables: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;steps&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;actual&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;environment&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;feature_request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Feature Request Evaluation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Evaluate a feature request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Template: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Please evaluate this feature request:</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Feature:** {{.feature}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Use Case:** {{.use_case}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**User Story:** {{.user_story}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Acceptance Criteria:** {{.criteria}}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please assess:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Business value and impact</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Technical feasibility</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Implementation complexity</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Potential risks and considerations`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Variables: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;feature&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;use_case&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_story&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;criteria&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTemplatePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    templateName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;template&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    variables </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;variables&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    template, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptTemplates[templateName]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown template: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, templateName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Replace template variables</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> template.Template</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, variable </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> template.Variables {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> variables[variable]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            placeholder </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;{{.</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, variable)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReplaceAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content, placeholder, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: template.Description,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PromptTemplate struct {\n    Name        string\n    Description string\n    Template    string\n    Variables   []string\n}\n \nvar promptTemplates = map[string]PromptTemplate{\n    &quot;bug_report&quot;: {\n        Name:        &quot;Bug Report Analysis&quot;,\n        Description: &quot;Analyze a bug report and suggest solutions&quot;,\n        Template: `Please analyze this bug report:\n \n**Bug Description:** {{.description}}\n**Steps to Reproduce:** {{.steps}}\n**Expected Behavior:** {{.expected}}\n**Actual Behavior:** {{.actual}}\n**Environment:** {{.environment}}\n \nPlease provide:\n1. Root cause analysis\n2. Potential solutions\n3. Prevention strategies\n4. Priority assessment`,\n        Variables: []string{&quot;description&quot;, &quot;steps&quot;, &quot;expected&quot;, &quot;actual&quot;, &quot;environment&quot;},\n    },\n    &quot;feature_request&quot;: {\n        Name:        &quot;Feature Request Evaluation&quot;,\n        Description: &quot;Evaluate a feature request&quot;,\n        Template: `Please evaluate this feature request:\n \n**Feature:** {{.feature}}\n**Use Case:** {{.use_case}}\n**User Story:** {{.user_story}}\n**Acceptance Criteria:** {{.criteria}}\n \nPlease assess:\n1. Business value and impact\n2. Technical feasibility\n3. Implementation complexity\n4. Potential risks and considerations`,\n        Variables: []string{&quot;feature&quot;, &quot;use_case&quot;, &quot;user_story&quot;, &quot;criteria&quot;},\n    },\n}\n \nfunc handleTemplatePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    templateName := req.Params.Arguments[&quot;template&quot;].(string)\n    variables := req.Params.Arguments[&quot;variables&quot;].(map[string]interface{})\n \n    template, exists := promptTemplates[templateName]\n    if !exists {\n        return nil, fmt.Errorf(&quot;unknown template: %s&quot;, templateName)\n    }\n \n    // Replace template variables\n    content := template.Template\n    for _, variable := range template.Variables {\n        if value, exists := variables[variable]; exists {\n            placeholder := fmt.Sprintf(&quot;{{.%s}}&quot;, variable)\n            content = strings.ReplaceAll(content, placeholder, fmt.Sprintf(&quot;%v&quot;, value))\n        }\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: template.Description,\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(content),\n            },\n        },\n    }, nil\n}\n","title":"Template-Based Prompts","titles":["Implementing Prompts","Advanced Prompt Patterns"]},"311":{"href":"/servers/prompts#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore typed tools, middleware, and hooks</li>\n<li><strong><a href=\"/clients\">Client Integration</a></strong> - Learn how to build MCP clients</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Learn about implementing server tools</li>\n</ul>","isPage":false,"text":"\n\nAdvanced Features - Explore typed tools, middleware, and hooks\nClient Integration - Learn how to build MCP clients\nTools - Learn about implementing server tools\n","title":"Next Steps","titles":["Implementing Prompts"]},"312":{"href":"/servers/resources#implementing-resources","html":"</header>\n<p>Resources expose data to LLMs in a read-only manner. Think of them as GET endpoints that provide access to files, databases, APIs, or any other data source.</p>\n","isPage":true,"text":"\nResources expose data to LLMs in a read-only manner. Think of them as GET endpoints that provide access to files, databases, APIs, or any other data source.\n","title":"Implementing Resources","titles":[]},"313":{"href":"/servers/resources#resource-fundamentals","html":"\n<p>Resources in MCP are identified by URIs and can be either static (fixed content) or dynamic (generated on-demand). They&#x27;re perfect for giving LLMs access to documentation, configuration files, database records, or API responses.</p>\n","isPage":false,"text":"\nResources in MCP are identified by URIs and can be either static (fixed content) or dynamic (generated on-demand). They&#x27;re perfect for giving LLMs access to documentation, configuration files, database records, or API responses.\n","title":"Resource Fundamentals","titles":["Implementing Resources"]},"314":{"href":"/servers/resources#basic-resource-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,           </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// URI - unique identifier</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Name - human-readable</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Main project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple resource\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,           // URI - unique identifier\n    &quot;Project README&quot;,          // Name - human-readable\n    mcp.WithResourceDescription(&quot;Main project documentation&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n","title":"Basic Resource Structure","titles":["Implementing Resources","Resource Fundamentals"]},"315":{"href":"/servers/resources#static-resources","html":"\n<p>Static resources have fixed URIs and typically serve predetermined content.</p>\n","isPage":false,"text":"\nStatic resources have fixed URIs and typically serve predetermined content.\n","title":"Static Resources","titles":["Implementing Resources"]},"316":{"href":"/servers/resources#file-based-resources","html":"\n<p>Expose files from your filesystem:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a static file resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;file://README.md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Main project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleReadmeFile,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleReadmeFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;README.md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read README: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose files from your filesystem:\nfunc main() {\n    s := server.NewMCPServer(&quot;File Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true),\n    )\n \n    // Add a static file resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;file://README.md&quot;,\n            &quot;Project README&quot;,\n            mcp.WithResourceDescription(&quot;Main project documentation&quot;),\n            mcp.WithMIMEType(&quot;text/markdown&quot;),\n        ),\n        handleReadmeFile,\n    )\n \n    server.ServeStdio(s)\n}\n \nfunc handleReadmeFile(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    content, err := os.ReadFile(&quot;README.md&quot;)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read README: %w&quot;, err)\n    }\n \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/markdown&quot;,\n                Text:     string(content),\n            },\n        },\n    }, nil\n}\n","title":"File-Based Resources","titles":["Implementing Resources","Static Resources"]},"317":{"href":"/servers/resources#configuration-resources","html":"\n<p>Expose application configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Configuration resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;config://app&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Application Configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current application settings&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleAppConfig,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleAppConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;database_url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;DATABASE_URL&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;debug_mode&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;DEBUG&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;true&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;features&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;authentication&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;caching&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;logging&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configJSON, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(configJSON),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose application configuration:\n// Configuration resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;config://app&quot;,\n        &quot;Application Configuration&quot;, \n        mcp.WithResourceDescription(&quot;Current application settings&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleAppConfig,\n)\n \nfunc handleAppConfig(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    config := map[string]interface{}{\n        &quot;database_url&quot;: os.Getenv(&quot;DATABASE_URL&quot;),\n        &quot;debug_mode&quot;:   os.Getenv(&quot;DEBUG&quot;) == &quot;true&quot;,\n        &quot;version&quot;:      &quot;1.0.0&quot;,\n        &quot;features&quot;: []string{\n            &quot;authentication&quot;,\n            &quot;caching&quot;, \n            &quot;logging&quot;,\n        },\n    }\n \n    configJSON, err := json.Marshal(config)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(configJSON),\n            },\n        },\n    }, nil\n}\n","title":"Configuration Resources","titles":["Implementing Resources","Static Resources"]},"318":{"href":"/servers/resources#dynamic-resources","html":"\n<p>Dynamic resources use URI templates with parameters, allowing for flexible, parameterized access to data.</p>\n","isPage":false,"text":"\nDynamic resources use URI templates with parameters, allowing for flexible, parameterized access to data.\n","title":"Dynamic Resources","titles":["Implementing Resources"]},"319":{"href":"/servers/resources#uri-templates","html":"\n<p>Use <code>{parameter}</code> syntax for dynamic parts:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// User profile resource with dynamic user ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleUserProfile,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUserProfile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract user_id from URI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// &quot;users://123&quot; -&gt; &quot;123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch user data (from database, API, etc.)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract ID from &quot;users://123&quot; format</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    parts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Split</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(parts) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nUse {parameter} syntax for dynamic parts:\n// User profile resource with dynamic user ID\ns.AddResource(\n    mcp.NewResource(\n        &quot;users://{user_id}&quot;,\n        &quot;User Profile&quot;,\n        mcp.WithResourceDescription(&quot;User profile information&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleUserProfile,\n)\n \nfunc handleUserProfile(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Extract user_id from URI\n    userID := extractUserID(req.Params.URI) // &quot;users://123&quot; -&gt; &quot;123&quot;\n    \n    // Fetch user data (from database, API, etc.)\n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %w&quot;, err)\n    }\n \n    jsonData, err := json.Marshal(user)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(jsonData),\n        },\n    }, nil\n}\n \nfunc extractUserID(uri string) string {\n    // Extract ID from &quot;users://123&quot; format\n    parts := strings.Split(uri, &quot;://&quot;)\n    if len(parts) == 2 {\n        return parts[1]\n    }\n    return &quot;&quot;\n}\n","title":"URI Templates","titles":["Implementing Resources","Dynamic Resources"]},"320":{"href":"/servers/resources#database-resources","html":"\n<p>Expose database records dynamically:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">database/sql</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Database table resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;db://{table}/{id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Database Record&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Access database records by table and ID&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleDatabaseRecord,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDatabaseRecord</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    table, id </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> parseDBURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// &quot;db://users/123&quot; -&gt; &quot;users&quot;, &quot;123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate table name for security</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allowedTables </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;products&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;orders&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">allowedTables[table] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;table not accessible: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, table)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Query database</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SELECT * FROM </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> WHERE id = ?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, table)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    row </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryRowContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, id)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> scanRowToMap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(row, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">data); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;record not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose database records dynamically:\nimport (\n    &quot;context&quot;\n    &quot;database/sql&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \n// Database table resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;db://{table}/{id}&quot;,\n        &quot;Database Record&quot;,\n        mcp.WithResourceDescription(&quot;Access database records by table and ID&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleDatabaseRecord,\n)\n \nfunc handleDatabaseRecord(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    table, id := parseDBURI(req.Params.URI) // &quot;db://users/123&quot; -&gt; &quot;users&quot;, &quot;123&quot;\n    \n    // Validate table name for security\n    allowedTables := map[string]bool{\n        &quot;users&quot;:    true,\n        &quot;products&quot;: true,\n        &quot;orders&quot;:   true,\n    }\n    \n    if !allowedTables[table] {\n        return nil, fmt.Errorf(&quot;table not accessible: %s&quot;, table)\n    }\n \n    // Query database\n    query := fmt.Sprintf(&quot;SELECT * FROM %s WHERE id = ?&quot;, table)\n    row := db.QueryRowContext(ctx, query, id)\n    \n    var data map[string]interface{}\n    if err := scanRowToMap(row, &amp;data); err != nil {\n        return nil, fmt.Errorf(&quot;record not found: %w&quot;, err)\n    }\n \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n}\n","title":"Database Resources","titles":["Implementing Resources","Dynamic Resources"]},"321":{"href":"/servers/resources#api-resources","html":"\n<p>Proxy external APIs through resources:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Weather API resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;weather://{location}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Weather Data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current weather for a location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleWeatherData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleWeatherData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    location </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractLocation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call external weather API</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    apiURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://api.weather.com/v1/current?location=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&amp;key=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        url.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryEscape</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(location), os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;WEATHER_API_KEY&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(apiURL)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;weather API error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Body.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    body, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Body)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nProxy external APIs through resources:\n// Weather API resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;weather://{location}&quot;,\n        &quot;Weather Data&quot;,\n        mcp.WithResourceDescription(&quot;Current weather for a location&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleWeatherData,\n)\n \nfunc handleWeatherData(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    location := extractLocation(req.Params.URI)\n    \n    // Call external weather API\n    apiURL := fmt.Sprintf(&quot;https://api.weather.com/v1/current?location=%s&amp;key=%s&quot;, \n        url.QueryEscape(location), os.Getenv(&quot;WEATHER_API_KEY&quot;))\n    \n    resp, err := http.Get(apiURL)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;weather API error: %w&quot;, err)\n    }\n    defer resp.Body.Close()\n \n    body, err := io.ReadAll(resp.Body)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read response: %w&quot;, err)\n    }\n \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(body),\n            },\n        },\n    }, nil\n}\n","title":"API Resources","titles":["Implementing Resources","Dynamic Resources"]},"322":{"href":"/servers/resources#content-types","html":"\n<p>Resources can serve different types of content with appropriate MIME types.</p>\n","isPage":false,"text":"\nResources can serve different types of content with appropriate MIME types.\n","title":"Content Types","titles":["Implementing Resources"]},"323":{"href":"/servers/resources#text-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTextResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;This is plain text content&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleTextResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    content := &quot;This is plain text content&quot;\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/plain&quot;,\n                Text:     content,\n            },\n        },\n    }, nil\n}\n","title":"Text Content","titles":["Implementing Resources","Content Types"]},"324":{"href":"/servers/resources#json-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleJSONResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, World!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;success&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleJSONResource(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    data := map[string]interface{}{\n        &quot;message&quot;: &quot;Hello, World!&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;status&quot;: &quot;success&quot;,\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(jsonData),\n        },\n    }, nil\n}\n","title":"JSON Content","titles":["Implementing Resources","Content Types"]},"325":{"href":"/servers/resources#binary-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleImageResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    imageData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;logo.png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Encode binary data as base64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    encoded </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeToString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(imageData)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;image/png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Blob:     encoded,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleImageResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    imageData, err := os.ReadFile(&quot;logo.png&quot;)\n    if err != nil {\n        return nil, err\n    }\n    \n    // Encode binary data as base64\n    encoded := base64.StdEncoding.EncodeToString(imageData)\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;image/png&quot;,\n                Blob:     encoded,\n            },\n        },\n    }, nil\n}\n","title":"Binary Content","titles":["Implementing Resources","Content Types"]},"326":{"href":"/servers/resources#multiple-content-types","html":"\n<p>A single resource can return multiple content representations:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMultiFormatResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;city&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New York&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // JSON representation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Text representation  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    textData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Age: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">City: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;city&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     textData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nA single resource can return multiple content representations:\nfunc handleMultiFormatResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    data := map[string]interface{}{\n        &quot;name&quot;: &quot;John Doe&quot;,\n        &quot;age&quot;:  30,\n        &quot;city&quot;: &quot;New York&quot;,\n    }\n    \n    // JSON representation\n    jsonData, _ := json.Marshal(data)\n    \n    // Text representation  \n    textData := fmt.Sprintf(&quot;Name: %s\\nAge: %d\\nCity: %s&quot;, \n        data[&quot;name&quot;], data[&quot;age&quot;], data[&quot;city&quot;])\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/plain&quot;, \n                Text:     textData,\n            },\n        },\n    }, nil\n}\n","title":"Multiple Content Types","titles":["Implementing Resources","Content Types"]},"327":{"href":"/servers/resources#error-handling","html":"\n<p>Proper error handling ensures robust resource access:</p>\n","isPage":false,"text":"\nProper error handling ensures robust resource access:\n","title":"Error Handling","titles":["Implementing Resources"]},"328":{"href":"/servers/resources#common-error-patterns","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate URI format</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid URI format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check permissions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermission</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req.Params.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;access denied to resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle resource not found</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResourceData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrResourceNotFound) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceWithErrors(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Validate URI format\n    if !isValidURI(req.Params.URI) {\n        return nil, fmt.Errorf(&quot;invalid URI format: %s&quot;, req.Params.URI)\n    }\n    \n    // Check permissions\n    if !hasPermission(ctx, req.Params.URI) {\n        return nil, fmt.Errorf(&quot;access denied to resource: %s&quot;, req.Params.URI)\n    }\n    \n    // Handle resource not found\n    data, err := fetchResourceData(req.Params.URI)\n    if err != nil {\n        if errors.Is(err, ErrResourceNotFound) {\n            return nil, fmt.Errorf(&quot;resource not found: %s&quot;, req.Params.URI)\n        }\n        return nil, fmt.Errorf(&quot;failed to fetch resource: %w&quot;, err)\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContents{\n            mcp.TextResourceContents{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n","title":"Common Error Patterns","titles":["Implementing Resources","Error Handling"]},"329":{"href":"/servers/resources#timeout-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceWithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create timeout context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use context in operations</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchDataWithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource fetch timeout: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceWithTimeout(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Create timeout context\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n    \n    // Use context in operations\n    data, err := fetchDataWithContext(ctx, req.Params.URI)\n    if err != nil {\n        if errors.Is(err, context.DeadlineExceeded) {\n            return nil, fmt.Errorf(&quot;resource fetch timeout: %s&quot;, req.Params.URI)\n        }\n        return nil, err\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n}\n","title":"Timeout Handling","titles":["Implementing Resources","Error Handling"]},"330":{"href":"/servers/resources#resource-listing","html":"\n<p>Implement resource discovery for clients:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add multiple resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        uri         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        name        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mimeType    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handler     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleReadme},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;config://app&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;App Config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Application settings&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleConfig},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;users://{id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleUser},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.uri, r.name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.description),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.mimeType),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            r.handler,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nImplement resource discovery for clients:\nfunc main() {\n    s := server.NewMCPServer(&quot;Resource Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true),\n    )\n \n    // Add multiple resources\n    resources := []struct {\n        uri         string\n        name        string\n        description string\n        mimeType    string\n        handler     server.ResourceHandler\n    }{\n        {&quot;docs://readme&quot;, &quot;README&quot;, &quot;Project documentation&quot;, &quot;text/markdown&quot;, handleReadme},\n        {&quot;config://app&quot;, &quot;App Config&quot;, &quot;Application settings&quot;, &quot;application/json&quot;, handleConfig},\n        {&quot;users://{id}&quot;, &quot;User Profile&quot;, &quot;User information&quot;, &quot;application/json&quot;, handleUser},\n    }\n \n    for _, r := range resources {\n        s.AddResource(\n            mcp.NewResource(r.uri, r.name,\n                mcp.WithResourceDescription(r.description),\n                mcp.WithMIMEType(r.mimeType),\n            ),\n            r.handler,\n        )\n    }\n \n    server.ServeStdio(s)\n}\n","title":"Resource Listing","titles":["Implementing Resources"]},"331":{"href":"/servers/resources#caching-resources","html":"\n<p>Implement caching for expensive resources:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CachedResourceHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ttl   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CachedResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.cache[req.Params.URI]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.ttl {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch fresh data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">fetchFreshData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cache the result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.cache[req.Params.URI] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data:      data,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nImplement caching for expensive resources:\ntype CachedResourceHandler struct {\n    cache map[string]cacheEntry\n    mutex sync.RWMutex\n    ttl   time.Duration\n}\n \ntype cacheEntry struct {\n    data      *mcp.ReadResourceResult\n    timestamp time.Time\n}\n \nfunc (h *CachedResourceHandler) HandleResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    h.mutex.RLock()\n    if entry, exists := h.cache[req.Params.URI]; exists {\n        if time.Since(entry.timestamp) &lt; h.ttl {\n            h.mutex.RUnlock()\n            return entry.data, nil\n        }\n    }\n    h.mutex.RUnlock()\n \n    // Fetch fresh data\n    data, err := h.fetchFreshData(ctx, req)\n    if err != nil {\n        return nil, err\n    }\n \n    // Cache the result\n    h.mutex.Lock()\n    h.cache[req.Params.URI] = cacheEntry{\n        data:      data,\n        timestamp: time.Now(),\n    }\n    h.mutex.Unlock()\n \n    return data, nil\n}\n","title":"Caching Resources","titles":["Implementing Resources"]},"332":{"href":"/servers/resources#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Learn to implement interactive functionality</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore hooks, middleware, and more</li>\n</ul>","isPage":false,"text":"\n\nTools - Learn to implement interactive functionality\nPrompts - Create reusable interaction templates\nAdvanced Features - Explore hooks, middleware, and more\n","title":"Next Steps","titles":["Implementing Resources"]},"333":{"href":"/servers/tools#implementing-tools","html":"</header>\n<p>Tools provide functionality that LLMs can invoke to take actions or perform computations. Think of them as function calls that extend the LLM&#x27;s capabilities.</p>\n","isPage":true,"text":"\nTools provide functionality that LLMs can invoke to take actions or perform computations. Think of them as function calls that extend the LLM&#x27;s capabilities.\n","title":"Implementing Tools","titles":[]},"334":{"href":"/servers/tools#tool-fundamentals","html":"\n<p>Tools are the primary way LLMs interact with your server to perform actions. They have structured schemas that define parameters, types, and constraints, ensuring type-safe interactions.</p>\n","isPage":false,"text":"\nTools are the primary way LLMs interact with your server to perform actions. They have structured schemas that define parameters, types, and constraints, ensuring type-safe interactions.\n","title":"Tool Fundamentals","titles":["Implementing Tools"]},"335":{"href":"/servers/tools#basic-tool-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The arithmetic operation to perform&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;First number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Second number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple tool\ntool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;, \n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n        mcp.Description(&quot;The arithmetic operation to perform&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required(), mcp.Description(&quot;First number&quot;)),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required(), mcp.Description(&quot;Second number&quot;)),\n)\n","title":"Basic Tool Structure","titles":["Implementing Tools","Tool Fundamentals"]},"336":{"href":"/servers/tools#tool-definition","html":"\n","isPage":false,"text":"\n","title":"Tool Definition","titles":["Implementing Tools"]},"337":{"href":"/servers/tools#parameter-types","html":"\n<p>MCP-Go supports various parameter types with validation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// String parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User&#x27;s name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MinLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MaxLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Number parameters  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User&#x27;s age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">150</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Integer parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInteger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Number of items&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Boolean parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBoolean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Whether feature is enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Array parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tags&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List of tags&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Items</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Object parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithObject</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Configuration object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Properties</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;retries&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;integer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go supports various parameter types with validation:\n// String parameters\nmcp.WithString(&quot;name&quot;, \n    mcp.Required(),\n    mcp.Description(&quot;User&#x27;s name&quot;),\n    mcp.MinLength(1),\n    mcp.MaxLength(100),\n)\n \n// Number parameters  \nmcp.WithNumber(&quot;age&quot;,\n    mcp.Required(),\n    mcp.Description(&quot;User&#x27;s age&quot;),\n    mcp.Minimum(0),\n    mcp.Maximum(150),\n)\n \n// Integer parameters\nmcp.WithInteger(&quot;count&quot;,\n    mcp.Default(10),\n    mcp.Description(&quot;Number of items&quot;),\n    mcp.Minimum(1),\n    mcp.Maximum(1000),\n)\n \n// Boolean parameters\nmcp.WithBoolean(&quot;enabled&quot;,\n    mcp.Default(true),\n    mcp.Description(&quot;Whether feature is enabled&quot;),\n)\n \n// Array parameters\nmcp.WithArray(&quot;tags&quot;,\n    mcp.Description(&quot;List of tags&quot;),\n    mcp.Items(map[string]any{&quot;type&quot;: &quot;string&quot;}),\n)\n \n// Object parameters\nmcp.WithObject(&quot;config&quot;,\n    mcp.Description(&quot;Configuration object&quot;),\n    mcp.Properties(map[string]any{\n        &quot;timeout&quot;: map[string]any{&quot;type&quot;: &quot;number&quot;},\n        &quot;retries&quot;: map[string]any{&quot;type&quot;: &quot;integer&quot;},\n    }),\n)\n","title":"Parameter Types","titles":["Implementing Tools","Tool Definition"]},"338":{"href":"/servers/tools#enums-and-constraints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enum values</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;priority&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;critical&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Task priority level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// String constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Valid email address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Number constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ExclusiveMaximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Product price in USD&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Enum values\nmcp.WithString(&quot;priority&quot;,\n    mcp.Required(),\n    mcp.Enum(&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;, &quot;critical&quot;),\n    mcp.Description(&quot;Task priority level&quot;),\n)\n \n// String constraints\nmcp.WithString(&quot;email&quot;,\n    mcp.Required(),\n    mcp.Pattern(`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),\n    mcp.Description(&quot;Valid email address&quot;),\n)\n \n// Number constraints\nmcp.WithNumber(&quot;price&quot;,\n    mcp.Required(),\n    mcp.Minimum(0),\n    mcp.ExclusiveMaximum(10000),\n    mcp.Description(&quot;Product price in USD&quot;),\n)\n","title":"Enums and Constraints","titles":["Implementing Tools","Tool Definition"]},"339":{"href":"/servers/tools#struct-based-schema-definition","html":"\n<p>MCP-Go supports defining input and output schemas using Go structs with automatic JSON schema generation. This provides a type-safe alternative to manual parameter definition, especially useful for complex tools with structured inputs and outputs.</p>\n","isPage":false,"text":"\nMCP-Go supports defining input and output schemas using Go structs with automatic JSON schema generation. This provides a type-safe alternative to manual parameter definition, especially useful for complex tools with structured inputs and outputs.\n","title":"Struct-Based Schema Definition","titles":["Implementing Tools"]},"340":{"href":"/servers/tools#input-schema-with-go-structs","html":"\n<p>Define your input parameters as a Go struct and use <code>WithInputSchema</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define input struct with JSON schema tags</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SearchRequest</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Query      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   `json:&quot;query&quot; jsonschema_description:&quot;Search query&quot; jsonschema:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Limit      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      `json:&quot;limit,omitempty&quot; jsonschema_description:&quot;Maximum results&quot; jsonschema:&quot;minimum=1,maximum=100,default=10&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Categories []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;categories,omitempty&quot; jsonschema_description:&quot;Filter by categories&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    SortBy     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   `json:&quot;sortBy,omitempty&quot; jsonschema_description:&quot;Sort field&quot; jsonschema:&quot;enum=relevance,enum=date,enum=popularity&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create tool with struct-based input schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">searchTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_products&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search product catalog&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nDefine your input parameters as a Go struct and use WithInputSchema:\n// Define input struct with JSON schema tags\ntype SearchRequest struct {\n    Query      string   `json:&quot;query&quot; jsonschema_description:&quot;Search query&quot; jsonschema:&quot;required&quot;`\n    Limit      int      `json:&quot;limit,omitempty&quot; jsonschema_description:&quot;Maximum results&quot; jsonschema:&quot;minimum=1,maximum=100,default=10&quot;`\n    Categories []string `json:&quot;categories,omitempty&quot; jsonschema_description:&quot;Filter by categories&quot;`\n    SortBy     string   `json:&quot;sortBy,omitempty&quot; jsonschema_description:&quot;Sort field&quot; jsonschema:&quot;enum=relevance,enum=date,enum=popularity&quot;`\n}\n \n// Create tool with struct-based input schema\nsearchTool := mcp.NewTool(&quot;search_products&quot;,\n    mcp.WithDescription(&quot;Search product catalog&quot;),\n    mcp.WithInputSchema[SearchRequest](),\n)\n","title":"Input Schema with Go Structs","titles":["Implementing Tools","Struct-Based Schema Definition"]},"341":{"href":"/servers/tools#output-schema-with-go-structs","html":"\n<p>Define structured output for predictable tool responses:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define output struct</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SearchResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Query       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;query&quot; jsonschema_description:&quot;Original search query&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    TotalCount  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">       `json:&quot;totalCount&quot; jsonschema_description:&quot;Total matching products&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Products    []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Product</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;products&quot; jsonschema_description:&quot;Search results&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ProcessedAt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;processedAt&quot; jsonschema_description:&quot;When search was performed&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Product</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID          </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;id&quot; jsonschema_description:&quot;Product ID&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;name&quot; jsonschema_description:&quot;Product name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Price       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;price&quot; jsonschema_description:&quot;Price in USD&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    InStock     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;inStock&quot; jsonschema_description:&quot;Availability&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create tool with both input and output schemas</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">searchTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_products&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search product catalog with structured output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nDefine structured output for predictable tool responses:\n// Define output struct\ntype SearchResponse struct {\n    Query       string    `json:&quot;query&quot; jsonschema_description:&quot;Original search query&quot;`\n    TotalCount  int       `json:&quot;totalCount&quot; jsonschema_description:&quot;Total matching products&quot;`\n    Products    []Product `json:&quot;products&quot; jsonschema_description:&quot;Search results&quot;`\n    ProcessedAt time.Time `json:&quot;processedAt&quot; jsonschema_description:&quot;When search was performed&quot;`\n}\n \ntype Product struct {\n    ID          string  `json:&quot;id&quot; jsonschema_description:&quot;Product ID&quot;`\n    Name        string  `json:&quot;name&quot; jsonschema_description:&quot;Product name&quot;`\n    Price       float64 `json:&quot;price&quot; jsonschema_description:&quot;Price in USD&quot;`\n    InStock     bool    `json:&quot;inStock&quot; jsonschema_description:&quot;Availability&quot;`\n}\n \n// Create tool with both input and output schemas\nsearchTool := mcp.NewTool(&quot;search_products&quot;,\n    mcp.WithDescription(&quot;Search product catalog with structured output&quot;),\n    mcp.WithInputSchema[SearchRequest](),\n    mcp.WithOutputSchema[SearchResponse](),\n)\n","title":"Output Schema with Go Structs","titles":["Implementing Tools","Struct-Based Schema Definition"]},"342":{"href":"/servers/tools#structured-tool-handlers","html":"\n<p>Use <code>NewStructuredToolHandler</code> for type-safe handler implementation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Product Search&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define tool with input and output schemas</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    searchTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_products&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search product catalog&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool with structured handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(searchTool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStructuredToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(searchProductsHandler))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Handler receives typed input and returns typed output</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchProductsHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SearchRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SearchResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Input is already validated and bound to SearchRequest struct</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Limit</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> limit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Perform search logic</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    products </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchDatabase</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Query, args.Categories, limit)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return structured response</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SearchResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Query:       args.Query,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        TotalCount:  </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(products),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Products:    products,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ProcessedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nUse NewStructuredToolHandler for type-safe handler implementation:\nfunc main() {\n    s := server.NewMCPServer(&quot;Product Search&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(false),\n    )\n \n    // Define tool with input and output schemas\n    searchTool := mcp.NewTool(&quot;search_products&quot;,\n        mcp.WithDescription(&quot;Search product catalog&quot;),\n        mcp.WithInputSchema[SearchRequest](),\n        mcp.WithOutputSchema[SearchResponse](),\n    )\n \n    // Add tool with structured handler\n    s.AddTool(searchTool, mcp.NewStructuredToolHandler(searchProductsHandler))\n    \n    server.ServeStdio(s)\n}\n \n// Handler receives typed input and returns typed output\nfunc searchProductsHandler(ctx context.Context, req mcp.CallToolRequest, args SearchRequest) (SearchResponse, error) {\n    // Input is already validated and bound to SearchRequest struct\n    limit := args.Limit\n    if limit &lt;= 0 {\n        limit = 10\n    }\n \n    // Perform search logic\n    products := searchDatabase(args.Query, args.Categories, limit)\n \n    // Return structured response\n    return SearchResponse{\n        Query:       args.Query,\n        TotalCount:  len(products),\n        Products:    products,\n        ProcessedAt: time.Now(),\n    }, nil\n}\n","title":"Structured Tool Handlers","titles":["Implementing Tools","Struct-Based Schema Definition"]},"343":{"href":"/servers/tools#array-output-schema","html":"\n<p>Tools can return arrays of structured data:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define asset struct</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Asset</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;id&quot; jsonschema_description:&quot;Asset identifier&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;name&quot; jsonschema_description:&quot;Asset name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Value    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;value&quot; jsonschema_description:&quot;Current value&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Currency </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;currency&quot; jsonschema_description:&quot;Currency code&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Tool that returns array of assets</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">assetsTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;list_assets&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List portfolio assets&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.WithInputSchema[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Portfolio </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;portfolio&quot; jsonschema_description:&quot;Portfolio ID&quot; jsonschema:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Asset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Array output schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listAssetsHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{ Portfolio </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Asset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return array of assets</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Asset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;btc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bitcoin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">45000.50</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Currency: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;USD&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;eth&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Ethereum&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3200.75</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Currency: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;USD&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTools can return arrays of structured data:\n// Define asset struct\ntype Asset struct {\n    ID       string  `json:&quot;id&quot; jsonschema_description:&quot;Asset identifier&quot;`\n    Name     string  `json:&quot;name&quot; jsonschema_description:&quot;Asset name&quot;`\n    Value    float64 `json:&quot;value&quot; jsonschema_description:&quot;Current value&quot;`\n    Currency string  `json:&quot;currency&quot; jsonschema_description:&quot;Currency code&quot;`\n}\n \n// Tool that returns array of assets\nassetsTool := mcp.NewTool(&quot;list_assets&quot;,\n    mcp.WithDescription(&quot;List portfolio assets&quot;),\n    mcp.WithInputSchema[struct {\n        Portfolio string `json:&quot;portfolio&quot; jsonschema_description:&quot;Portfolio ID&quot; jsonschema:&quot;required&quot;`\n    }](),\n    mcp.WithOutputSchema[[]Asset](), // Array output schema\n)\n \nfunc listAssetsHandler(ctx context.Context, req mcp.CallToolRequest, args struct{ Portfolio string }) ([]Asset, error) {\n    // Return array of assets\n    return []Asset{\n        {ID: &quot;btc&quot;, Name: &quot;Bitcoin&quot;, Value: 45000.50, Currency: &quot;USD&quot;},\n        {ID: &quot;eth&quot;, Name: &quot;Ethereum&quot;, Value: 3200.75, Currency: &quot;USD&quot;},\n    }, nil\n}\n","title":"Array Output Schema","titles":["Implementing Tools","Struct-Based Schema Definition"]},"344":{"href":"/servers/tools#schema-tags-reference","html":"\n<p>MCP-Go uses the <code>jsonschema</code> struct tags for schema generation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExampleStruct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Required field</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;name&quot; jsonschema:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Field with description</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;age&quot; jsonschema_description:&quot;User age in years&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Field with constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Score </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;score&quot; jsonschema:&quot;minimum=0,maximum=100&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Enum field</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;status&quot; jsonschema:&quot;enum=active,enum=inactive,enum=pending&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Optional field with default</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    PageSize </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;pageSize,omitempty&quot; jsonschema:&quot;default=20&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Array with constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Tags []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;tags&quot; jsonschema:&quot;minItems=1,maxItems=10&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go uses the jsonschema struct tags for schema generation:\ntype ExampleStruct struct {\n    // Required field\n    Name string `json:&quot;name&quot; jsonschema:&quot;required&quot;`\n    \n    // Field with description\n    Age int `json:&quot;age&quot; jsonschema_description:&quot;User age in years&quot;`\n    \n    // Field with constraints\n    Score float64 `json:&quot;score&quot; jsonschema:&quot;minimum=0,maximum=100&quot;`\n    \n    // Enum field\n    Status string `json:&quot;status&quot; jsonschema:&quot;enum=active,enum=inactive,enum=pending&quot;`\n    \n    // Optional field with default\n    PageSize int `json:&quot;pageSize,omitempty&quot; jsonschema:&quot;default=20&quot;`\n    \n    // Array with constraints\n    Tags []string `json:&quot;tags&quot; jsonschema:&quot;minItems=1,maxItems=10&quot;`\n}\n","title":"Schema Tags Reference","titles":["Implementing Tools","Struct-Based Schema Definition"]},"345":{"href":"/servers/tools#manual-structured-results","html":"\n<p>For more control over the response, use <code>NewTypedToolHandler</code> with manual result creation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">manualTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Process data with custom result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ProcessRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ProcessResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(manualTool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTypedToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(manualProcessHandler))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> manualProcessHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ProcessRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process the data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    response </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ProcessResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Status:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;completed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ProcessedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ItemCount:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create custom fallback text for backward compatibility</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fallbackText </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> items successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, response.ItemCount)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return structured result with custom text</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultStructured</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(response, fallbackText), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nFor more control over the response, use NewTypedToolHandler with manual result creation:\nmanualTool := mcp.NewTool(&quot;process_data&quot;,\n    mcp.WithDescription(&quot;Process data with custom result&quot;),\n    mcp.WithInputSchema[ProcessRequest](),\n    mcp.WithOutputSchema[ProcessResponse](),\n)\n \ns.AddTool(manualTool, mcp.NewTypedToolHandler(manualProcessHandler))\n \nfunc manualProcessHandler(ctx context.Context, req mcp.CallToolRequest, args ProcessRequest) (*mcp.CallToolResult, error) {\n    // Process the data\n    response := ProcessResponse{\n        Status:      &quot;completed&quot;,\n        ProcessedAt: time.Now(),\n        ItemCount:   42,\n    }\n    \n    // Create custom fallback text for backward compatibility\n    fallbackText := fmt.Sprintf(&quot;Processed %d items successfully&quot;, response.ItemCount)\n    \n    // Return structured result with custom text\n    return mcp.NewToolResultStructured(response, fallbackText), nil\n}\n","title":"Manual Structured Results","titles":["Implementing Tools","Struct-Based Schema Definition"]},"346":{"href":"/servers/tools#complete-example-file-operations-with-structured-io","html":"\n<p>Here&#x27;s a complete example using the file operations pattern from earlier, enhanced with structured schemas:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define structured input for file operations</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationRequest</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Path     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;path&quot; jsonschema_description:&quot;File path&quot; jsonschema:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;content,omitempty&quot; jsonschema_description:&quot;File content (for write operations)&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Encoding </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;encoding,omitempty&quot; jsonschema_description:&quot;File encoding&quot; jsonschema:&quot;enum=utf-8,enum=ascii,enum=base64,default=utf-8&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define structured output</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Success   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      `json:&quot;success&quot; jsonschema_description:&quot;Operation success status&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Path      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;path&quot; jsonschema_description:&quot;File path&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Message   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;message&quot; jsonschema_description:&quot;Result message&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;content,omitempty&quot; jsonschema_description:&quot;File content (for read operations)&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Size      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">     `json:&quot;size,omitempty&quot; jsonschema_description:&quot;File size in bytes&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Modified  </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;modified,omitempty&quot; jsonschema_description:&quot;Last modified time&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Manager&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create file tool with structured I/O</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    createFileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new file with content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FileOperationRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read file tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    readFileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;read_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Read file contents&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.WithInputSchema[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;path&quot; jsonschema_description:&quot;File path to read&quot; jsonschema:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithOutputSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(createFileTool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStructuredToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handleCreateFile))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(readFileTool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStructuredToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handleReadFile))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate path for security</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Path, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Success: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Path:    args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Message: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid path: directory traversal not allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle different encodings</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Encoding {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;base64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Success: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Path:    args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Message: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid base64 content: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Content)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create file</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Path, data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0644</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Success: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Path:    args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Message: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get file info</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    info, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Path)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Success:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Path:     args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Message:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File created successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Size:     info.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Size</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Modified: info.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ModTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{ Path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read file</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Success: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Path:    args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Message: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to read file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get file info</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    info, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args.Path)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Success:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Path:     args.Path,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Message:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File read successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content:  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Size:     info.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Size</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Modified: info.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ModTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete example using the file operations pattern from earlier, enhanced with structured schemas:\n// Define structured input for file operations\ntype FileOperationRequest struct {\n    Path     string `json:&quot;path&quot; jsonschema_description:&quot;File path&quot; jsonschema:&quot;required&quot;`\n    Content  string `json:&quot;content,omitempty&quot; jsonschema_description:&quot;File content (for write operations)&quot;`\n    Encoding string `json:&quot;encoding,omitempty&quot; jsonschema_description:&quot;File encoding&quot; jsonschema:&quot;enum=utf-8,enum=ascii,enum=base64,default=utf-8&quot;`\n}\n \n// Define structured output\ntype FileOperationResponse struct {\n    Success   bool      `json:&quot;success&quot; jsonschema_description:&quot;Operation success status&quot;`\n    Path      string    `json:&quot;path&quot; jsonschema_description:&quot;File path&quot;`\n    Message   string    `json:&quot;message&quot; jsonschema_description:&quot;Result message&quot;`\n    Content   string    `json:&quot;content,omitempty&quot; jsonschema_description:&quot;File content (for read operations)&quot;`\n    Size      int64     `json:&quot;size,omitempty&quot; jsonschema_description:&quot;File size in bytes&quot;`\n    Modified  time.Time `json:&quot;modified,omitempty&quot; jsonschema_description:&quot;Last modified time&quot;`\n}\n \nfunc main() {\n    s := server.NewMCPServer(&quot;File Manager&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Create file tool with structured I/O\n    createFileTool := mcp.NewTool(&quot;create_file&quot;,\n        mcp.WithDescription(&quot;Create a new file with content&quot;),\n        mcp.WithInputSchema[FileOperationRequest](),\n        mcp.WithOutputSchema[FileOperationResponse](),\n    )\n \n    // Read file tool\n    readFileTool := mcp.NewTool(&quot;read_file&quot;,\n        mcp.WithDescription(&quot;Read file contents&quot;),\n        mcp.WithInputSchema[struct {\n            Path string `json:&quot;path&quot; jsonschema_description:&quot;File path to read&quot; jsonschema:&quot;required&quot;`\n        }](),\n        mcp.WithOutputSchema[FileOperationResponse](),\n    )\n \n    s.AddTool(createFileTool, mcp.NewStructuredToolHandler(handleCreateFile))\n    s.AddTool(readFileTool, mcp.NewStructuredToolHandler(handleReadFile))\n    \n    server.ServeStdio(s)\n}\n \nfunc handleCreateFile(ctx context.Context, req mcp.CallToolRequest, args FileOperationRequest) (FileOperationResponse, error) {\n    // Validate path for security\n    if strings.Contains(args.Path, &quot;..&quot;) {\n        return FileOperationResponse{\n            Success: false,\n            Path:    args.Path,\n            Message: &quot;Invalid path: directory traversal not allowed&quot;,\n        }, nil\n    }\n \n    // Handle different encodings\n    var data []byte\n    switch args.Encoding {\n    case &quot;base64&quot;:\n        var err error\n        data, err = base64.StdEncoding.DecodeString(args.Content)\n        if err != nil {\n            return FileOperationResponse{\n                Success: false,\n                Path:    args.Path,\n                Message: fmt.Sprintf(&quot;Invalid base64 content: %v&quot;, err),\n            }, nil\n        }\n    default:\n        data = []byte(args.Content)\n    }\n \n    // Create file\n    if err := os.WriteFile(args.Path, data, 0644); err != nil {\n        return FileOperationResponse{\n            Success: false,\n            Path:    args.Path,\n            Message: fmt.Sprintf(&quot;Failed to create file: %v&quot;, err),\n        }, nil\n    }\n \n    // Get file info\n    info, _ := os.Stat(args.Path)\n \n    return FileOperationResponse{\n        Success:  true,\n        Path:     args.Path,\n        Message:  &quot;File created successfully&quot;,\n        Size:     info.Size(),\n        Modified: info.ModTime(),\n    }, nil\n}\n \nfunc handleReadFile(ctx context.Context, req mcp.CallToolRequest, args struct{ Path string }) (FileOperationResponse, error) {\n    // Read file\n    data, err := os.ReadFile(args.Path)\n    if err != nil {\n        return FileOperationResponse{\n            Success: false,\n            Path:    args.Path,\n            Message: fmt.Sprintf(&quot;Failed to read file: %v&quot;, err),\n        }, nil\n    }\n \n    // Get file info\n    info, _ := os.Stat(args.Path)\n \n    return FileOperationResponse{\n        Success:  true,\n        Path:     args.Path,\n        Message:  &quot;File read successfully&quot;,\n        Content:  string(data),\n        Size:     info.Size(),\n        Modified: info.ModTime(),\n    }, nil\n}\n","title":"Complete Example: File Operations with Structured I/O","titles":["Implementing Tools","Struct-Based Schema Definition"]},"347":{"href":"/servers/tools#tool-handlers","html":"\n<p>Tool handlers process the actual function calls from LLMs. MCP-Go provides convenient helper methods for safe parameter extraction.</p>\n","isPage":false,"text":"\nTool handlers process the actual function calls from LLMs. MCP-Go provides convenient helper methods for safe parameter extraction.\n","title":"Tool Handlers","titles":["Implementing Tools"]},"348":{"href":"/servers/tools#parameter-extraction-methods","html":"\n<p>MCP-Go offers several helper methods on <code>CallToolRequest</code> for type-safe parameter access:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Required parameters - return error if missing or wrong type</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Optional parameters with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;default&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Structured data binding</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Timeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;timeout&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Retries </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;retries&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Debug   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   `json:&quot;debug&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Raw access (for backward compatibility)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// returns map[string]any</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rawArgs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetRawArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// returns any</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go offers several helper methods on CallToolRequest for type-safe parameter access:\n// Required parameters - return error if missing or wrong type\nname, err := req.RequireString(&quot;name&quot;)\nage, err := req.RequireInt(&quot;age&quot;) \nprice, err := req.RequireFloat(&quot;price&quot;)\nenabled, err := req.RequireBool(&quot;enabled&quot;)\n \n// Optional parameters with defaults\nname := req.GetString(&quot;name&quot;, &quot;default&quot;)\ncount := req.GetInt(&quot;count&quot;, 10)\nprice := req.GetFloat(&quot;price&quot;, 0.0)\nenabled := req.GetBool(&quot;enabled&quot;, false)\n \n// Structured data binding\ntype Config struct {\n    Timeout int    `json:&quot;timeout&quot;`\n    Retries int    `json:&quot;retries&quot;`\n    Debug   bool   `json:&quot;debug&quot;`\n}\nvar config Config\nif err := req.BindArguments(&amp;config); err != nil {\n    return mcp.NewToolResultError(err.Error()), nil\n}\n \n// Raw access (for backward compatibility)\nargs := req.GetArguments() // returns map[string]any\nrawArgs := req.GetRawArguments() // returns any\n","title":"Parameter Extraction Methods","titles":["Implementing Tools","Tool Handlers"]},"349":{"href":"/servers/tools#basic-handler-pattern","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract parameters using helper methods</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    operation, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Perform calculation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown operation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, operation)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.2f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleCalculate(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Extract parameters using helper methods\n    operation, err := req.RequireString(&quot;operation&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    x, err := req.RequireFloat(&quot;x&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    y, err := req.RequireFloat(&quot;y&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Perform calculation\n    var result float64\n    switch operation {\n    case &quot;add&quot;:\n        result = x + y\n    case &quot;subtract&quot;:\n        result = x - y\n    case &quot;multiply&quot;:\n        result = x * y\n    case &quot;divide&quot;:\n        if y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = x / y\n    default:\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;unknown operation: %s&quot;, operation)), nil\n    }\n    \n    // Return result\n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%.2f&quot;, result)), nil\n}\n","title":"Basic Handler Pattern","titles":["Implementing Tools","Tool Handlers"]},"350":{"href":"/servers/tools#file-operations-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // File creation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    createFileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new file with content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File path to create&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ascii&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;base64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(createFileTool, handleCreateFile)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    encoding </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate path for security</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: directory traversal not allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle different encodings</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> encoding {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;ascii&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;base64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid base64 content: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create file</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0644</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File created successfully: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;File Tools&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // File creation tool\n    createFileTool := mcp.NewTool(&quot;create_file&quot;,\n        mcp.WithDescription(&quot;Create a new file with content&quot;),\n        mcp.WithString(&quot;path&quot;, \n            mcp.Required(),\n            mcp.Description(&quot;File path to create&quot;),\n        ),\n        mcp.WithString(&quot;content&quot;,\n            mcp.Required(), \n            mcp.Description(&quot;File content&quot;),\n        ),\n        mcp.WithString(&quot;encoding&quot;,\n            mcp.Default(&quot;utf-8&quot;),\n            mcp.Enum(&quot;utf-8&quot;, &quot;ascii&quot;, &quot;base64&quot;),\n            mcp.Description(&quot;File encoding&quot;),\n        ),\n    )\n \n    s.AddTool(createFileTool, handleCreateFile)\n    server.ServeStdio(s)\n}\n \nfunc handleCreateFile(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    content, err := req.RequireString(&quot;content&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    encoding := req.GetString(&quot;encoding&quot;, &quot;utf-8&quot;)\n    \n    // Validate path for security\n    if strings.Contains(path, &quot;..&quot;) {\n        return mcp.NewToolResultError(&quot;invalid path: directory traversal not allowed&quot;), nil\n    }\n    \n    // Handle different encodings\n    var data []byte\n    switch encoding {\n    case &quot;utf-8&quot;:\n        data = []byte(content)\n    case &quot;ascii&quot;:\n        data = []byte(content)\n    case &quot;base64&quot;:\n        var err error\n        data, err = base64.StdEncoding.DecodeString(content)\n        if err != nil {\n            return mcp.NewToolResultError(fmt.Sprintf(&quot;invalid base64 content: %v&quot;, err)), nil\n        }\n    }\n    \n    // Create file\n    if err := os.WriteFile(path, data, 0644); err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to create file: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;File created successfully: %s&quot;, path)), nil\n}\n","title":"File Operations Tool","titles":["Implementing Tools","Tool Handlers"]},"351":{"href":"/servers/tools#database-query-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDatabaseQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define struct to bind both Query and Params</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Query  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        `json:&quot;query&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`json:&quot;params&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Bind arguments to the struct</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">args); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract values from the bound struct</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Query</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    params </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Params</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate query for security (basic example)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSelectQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;only SELECT queries are allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute query with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rows, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, params</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rows.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert results to JSON</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> rowsToJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rows)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to process results: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   query,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;results&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: results,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal results: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isSelectQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    trimmed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimSpace</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(trimmed, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SELECT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDatabaseQuery(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Define struct to bind both Query and Params\n    var args struct {\n        Query  string        `json:&quot;query&quot;`\n        Params []interface{} `json:&quot;params&quot;`\n    }\n    \n    // Bind arguments to the struct\n    if err := req.BindArguments(&amp;args); err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Extract values from the bound struct\n    query := args.Query\n    params := args.Params\n    \n    // Validate query for security (basic example)\n    if !isSelectQuery(query) {\n        return mcp.NewToolResultError(&quot;only SELECT queries are allowed&quot;), nil\n    }\n    \n    // Execute query with timeout\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n    \n    rows, err := db.QueryContext(ctx, query, params...)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;query failed: %v&quot;, err)), nil\n    }\n    defer rows.Close()\n    \n    // Convert results to JSON\n    results, err := rowsToJSON(rows)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to process results: %v&quot;, err)), nil\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;query&quot;:   query,\n        &quot;results&quot;: results,\n        &quot;count&quot;:   len(results),\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal results: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n \nfunc isSelectQuery(query string) bool {\n    trimmed := strings.TrimSpace(strings.ToUpper(query))\n    return strings.HasPrefix(trimmed, &quot;SELECT&quot;)\n}\n","title":"Database Query Tool","titles":["Implementing Tools","Tool Handlers"]},"352":{"href":"/servers/tools#http-request-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleHTTPRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    url, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    method, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    body </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;body&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle headers (optional object parameter)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;headers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewRequestWithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, method, url, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewReader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(body))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create request: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpReq.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(key, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute request with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Do</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpReq)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;request failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Body.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read response</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    respBody, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Body)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status_code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: resp.StatusCode,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;headers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     resp.Header,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;body&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(respBody),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleHTTPRequest(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    url, err := req.RequireString(&quot;url&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    method, err := req.RequireString(&quot;method&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    body := req.GetString(&quot;body&quot;, &quot;&quot;)\n    \n    // Handle headers (optional object parameter)\n    var headers map[string]interface{}\n    if args := req.GetArguments(); args != nil {\n        if h, ok := args[&quot;headers&quot;].(map[string]interface{}); ok {\n            headers = h\n        }\n    }\n    \n    // Create HTTP request\n    httpReq, err := http.NewRequestWithContext(ctx, method, url, strings.NewReader(body))\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to create request: %v&quot;, err)), nil\n    }\n    \n    // Add headers\n    for key, value := range headers {\n        httpReq.Header.Set(key, fmt.Sprintf(&quot;%v&quot;, value))\n    }\n    \n    // Execute request with timeout\n    client := &amp;http.Client{Timeout: 30 * time.Second}\n    resp, err := client.Do(httpReq)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;request failed: %v&quot;, err)), nil\n    }\n    defer resp.Body.Close()\n    \n    // Read response\n    respBody, err := io.ReadAll(resp.Body)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to read response: %v&quot;, err)), nil\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;status_code&quot;: resp.StatusCode,\n        &quot;headers&quot;:     resp.Header,\n        &quot;body&quot;:        string(respBody),\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"HTTP Request Tool","titles":["Implementing Tools","Tool Handlers"]},"353":{"href":"/servers/tools#argument-validation","html":"\n","isPage":false,"text":"\n","title":"Argument Validation","titles":["Implementing Tools"]},"354":{"href":"/servers/tools#type-safe-parameter-extraction","html":"\n<p>MCP-Go provides helper methods for safe parameter extraction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleValidatedTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Required parameters with validation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Optional parameter with default</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate constraints</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name cannot be empty&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 150</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age must be between 0 and 150&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process with validated parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(age), enabled)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go provides helper methods for safe parameter extraction:\nfunc handleValidatedTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Required parameters with validation\n    name, err := req.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    age, err := req.RequireFloat(&quot;age&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Optional parameter with default\n    enabled := req.GetBool(&quot;enabled&quot;, true)\n    \n    // Validate constraints\n    if len(name) == 0 {\n        return mcp.NewToolResultError(&quot;name cannot be empty&quot;), nil\n    }\n    \n    if age &lt; 0 || age &gt; 150 {\n        return mcp.NewToolResultError(&quot;age must be between 0 and 150&quot;), nil\n    }\n    \n    // Process with validated parameters\n    result := processUser(name, int(age), enabled)\n    \n    jsonData, err := json.Marshal(result)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Type-Safe Parameter Extraction","titles":["Implementing Tools","Argument Validation"]},"355":{"href":"/servers/tools#available-helper-methods","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Required parameters (return error if missing or wrong type)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Optional parameters with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;default&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Structured data binding</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserData</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;age&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> user </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserData</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;font-weight:bold;--shiki-dark:#6CB6FF;--shiki-dark-font-weight:bold\">### Custom Validation Functions</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">```go</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">email</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emailRegex </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regexp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MustCompile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">emailRegex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MatchString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid email format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">url</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    parsed, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> url.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(url)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid URL format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parsed.Scheme </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parsed.Scheme </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;https&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;URL must use http or https scheme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Required parameters (return error if missing or wrong type)\nname, err := req.RequireString(&quot;name&quot;)\nage, err := req.RequireInt(&quot;age&quot;)\nprice, err := req.RequireFloat(&quot;price&quot;)\nenabled, err := req.RequireBool(&quot;enabled&quot;)\n \n// Optional parameters with defaults\nname := req.GetString(&quot;name&quot;, &quot;default&quot;)\ncount := req.GetInt(&quot;count&quot;, 10)\nprice := req.GetFloat(&quot;price&quot;, 0.0)\nenabled := req.GetBool(&quot;enabled&quot;, false)\n \n// Structured data binding\ntype UserData struct {\n    Name string `json:&quot;name&quot;`\n    Age  int    `json:&quot;age&quot;`\n}\nvar user UserData\nif err := req.BindArguments(&amp;user); err != nil {\n    return mcp.NewToolResultError(err.Error()), nil\n}\n \n### Custom Validation Functions\n \n```go\nfunc validateEmail(email string) error {\n    emailRegex := regexp.MustCompile(`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`)\n    if !emailRegex.MatchString(email) {\n        return fmt.Errorf(&quot;invalid email format&quot;)\n    }\n    return nil\n}\n \nfunc validateURL(url string) error {\n    parsed, err := url.Parse(url)\n    if err != nil {\n        return fmt.Errorf(&quot;invalid URL format: %w&quot;, err)\n    }\n    \n    if parsed.Scheme != &quot;http&quot; &amp;&amp; parsed.Scheme != &quot;https&quot; {\n        return fmt.Errorf(&quot;URL must use http or https scheme&quot;)\n    }\n    \n    return nil\n}\n","title":"Available Helper Methods","titles":["Implementing Tools","Argument Validation"]},"356":{"href":"/servers/tools#result-types","html":"\n","isPage":false,"text":"\n","title":"Result Types","titles":["Implementing Tools"]},"357":{"href":"/servers/tools#text-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTextTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Operation completed successfully&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleTextTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    message := &quot;Operation completed successfully&quot;\n    return mcp.NewToolResultText(message), nil\n}\n","title":"Text Results","titles":["Implementing Tools","Result Types"]},"358":{"href":"/servers/tools#json-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleJSONTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;success&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;processed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleJSONTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    result := map[string]interface{}{\n        &quot;status&quot;:    &quot;success&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;data&quot;: map[string]interface{}{\n            &quot;processed&quot;: 42,\n            &quot;errors&quot;:    0,\n        },\n    }\n    \n    jsonData, err := json.Marshal(result)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"JSON Results","titles":["Implementing Tools","Result Types"]},"359":{"href":"/servers/tools#multiple-content-types","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMultiContentTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User information retrieved successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleMultiContentTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    data := map[string]interface{}{\n        &quot;name&quot;: &quot;John Doe&quot;,\n        &quot;age&quot;:  30,\n    }\n    \n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            {\n                Type: &quot;text&quot;,\n                Text: &quot;User information retrieved successfully&quot;,\n            },\n            {\n                Type: &quot;text&quot;,\n                Text: fmt.Sprintf(&quot;Name: %s, Age: %d&quot;, data[&quot;name&quot;], data[&quot;age&quot;]),\n            },\n        },\n    }, nil\n}\n","title":"Multiple Content Types","titles":["Implementing Tools","Result Types"]},"360":{"href":"/servers/tools#resource-links","html":"\n<p>Tools can return resource links that reference other resources in your MCP server. This is useful when you want to point to existing data without duplicating content:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetResourceLinkTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tresourceID, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\tif</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\treturn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t// Create a resource link pointing to an existing resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\turi </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://documents/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resourceID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tresourceLink </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResourceLink</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The requested document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/pdf&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\treturn</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tContent: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\tmcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found the requested document:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\tresourceLink,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTools can return resource links that reference other resources in your MCP server. This is useful when you want to point to existing data without duplicating content:\nfunc handleGetResourceLinkTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n\tresourceID, err := req.RequireString(&quot;resource_id&quot;)\n\tif err != nil {\n\t\treturn mcp.NewToolResultError(err.Error()), nil\n\t}\n \n\t// Create a resource link pointing to an existing resource\n\turi := fmt.Sprintf(&quot;file://documents/%s&quot;, resourceID)\n\tresourceLink := mcp.NewResourceLink(uri, &quot;Document&quot;, &quot;The requested document&quot;, &quot;application/pdf&quot;)\n\treturn &amp;mcp.CallToolResult{\n\t\tContent: []mcp.Content{\n\t\t\tmcp.NewTextContent(&quot;Found the requested document:&quot;),\n\t\t\tresourceLink,\n\t\t},\n\t}, nil\n}\n","title":"Resource Links","titles":["Implementing Tools","Result Types"]},"361":{"href":"/servers/tools#mixed-content-with-resource-links","html":"\n<p>You can combine different content types including resource links in a single tool result:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSearchDocumentsTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tquery, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\tif</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\treturn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t// Simulate document search</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tfoundDocs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;doc1.pdf&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;doc2.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;doc3.md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tcontent </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tmcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> documents matching &#x27;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(foundDocs), query)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t// Add resource links for each found document</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\tfor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, doc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> foundDocs {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\turi </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://documents/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, doc)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tparts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SplitN</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(doc, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tname </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tmimeType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/octet-stream&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // default</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\tif</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(parts) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t\t// Map extension to MIME type (simplified)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t\tswitch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t\tcase</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;pdf&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t\tmimeType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/pdf&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t\tcase</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t\tmimeType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/plain&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t\tcase</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t\tmimeType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/markdown&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tresourceLink </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResourceLink</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, name, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, doc), mimeType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tcontent </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content, resourceLink)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\treturn</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tContent: content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can combine different content types including resource links in a single tool result:\nfunc handleSearchDocumentsTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n\tquery, err := req.RequireString(&quot;query&quot;)\n\tif err != nil {\n\t\treturn mcp.NewToolResultError(err.Error()), nil\n\t}\n \n\t// Simulate document search\n\tfoundDocs := []string{&quot;doc1.pdf&quot;, &quot;doc2.txt&quot;, &quot;doc3.md&quot;}\n \n\tcontent := []mcp.Content{\n\t\tmcp.NewTextContent(fmt.Sprintf(&quot;Found %d documents matching &#x27;%s&#x27;:&quot;, len(foundDocs), query)),\n\t}\n \n\t// Add resource links for each found document\n\tfor _, doc := range foundDocs {\n\t\turi := fmt.Sprintf(&quot;file://documents/%s&quot;, doc)\n\t\tparts := strings.SplitN(doc, &quot;.&quot;, 2)\n\t\tname := parts[0]\n\t\tmimeType := &quot;application/octet-stream&quot; // default\n\t\tif len(parts) &gt; 1 {\n\t\t\t// Map extension to MIME type (simplified)\n\t\t\tswitch parts[1] {\n\t\t\tcase &quot;pdf&quot;:\n\t\t\t\tmimeType = &quot;application/pdf&quot;\n\t\t\tcase &quot;txt&quot;:\n\t\t\t\tmimeType = &quot;text/plain&quot;\n\t\t\tcase &quot;md&quot;:\n\t\t\t\tmimeType = &quot;text/markdown&quot;\n\t\t\t}\n\t\t}\n\t\tresourceLink := mcp.NewResourceLink(uri, name, fmt.Sprintf(&quot;Document: %s&quot;, doc), mimeType)\n\t\tcontent = append(content, resourceLink)\n\t}\n \n\treturn &amp;mcp.CallToolResult{\n\t\tContent: content,\n\t}, nil\n}\n","title":"Mixed Content with Resource Links","titles":["Implementing Tools","Result Types"]},"362":{"href":"/servers/tools#resource-link-with-annotations","html":"\n<p>Resource links can include additional metadata through annotations:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetAnnotatedResourceTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tdocType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;general&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t// Create resource link with annotations</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tannotated </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Annotated</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tAnnotations: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Annotations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\tAudience: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Role</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{mcp.RoleUser},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\turl </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;file://documents/test.pdf&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tresourceLink </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResourceLink</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(url, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test Document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;A </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, docType), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/pdf&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tresourceLink.Annotated </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> annotated</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\treturn</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tContent: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\tmcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Here&#x27;s the important document you requested:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\tresourceLink,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nResource links can include additional metadata through annotations:\nfunc handleGetAnnotatedResourceTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n\tdocType := req.GetString(&quot;type&quot;, &quot;general&quot;)\n\t// Create resource link with annotations\n\tannotated := mcp.Annotated{\n\t\tAnnotations: &amp;mcp.Annotations{\n\t\t\tAudience: []mcp.Role{mcp.RoleUser},\n\t\t},\n\t}\n\turl := &quot;file://documents/test.pdf&quot;\n\tresourceLink := mcp.NewResourceLink(url, &quot;Test Document&quot;, fmt.Sprintf(&quot;A %s document&quot;, docType), &quot;application/pdf&quot;)\n\tresourceLink.Annotated = annotated\n\treturn &amp;mcp.CallToolResult{\n\t\tContent: []mcp.Content{\n\t\t\tmcp.NewTextContent(&quot;Here&#x27;s the important document you requested:&quot;),\n\t\t\tresourceLink,\n\t\t},\n\t}, nil\n}\n","title":"Resource Link with Annotations","titles":["Implementing Tools","Result Types"]},"363":{"href":"/servers/tools#error-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For validation errors, return error result (not Go error)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For business logic errors, also return error result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> someCondition {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid input: &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reason), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For system errors, you can return Go errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> systemError {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system failure: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Or return structured error information</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleToolWithErrors(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // For validation errors, return error result (not Go error)\n    name, err := req.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // For business logic errors, also return error result\n    if someCondition {\n        return mcp.NewToolResultError(&quot;invalid input: &quot; + reason), nil\n    }\n    \n    // For system errors, you can return Go errors\n    if systemError {\n        return nil, fmt.Errorf(&quot;system failure: %v&quot;, err)\n    }\n    \n    // Or return structured error information\n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            {\n                Type: &quot;text&quot;, \n                Text: &quot;Operation failed&quot;,\n            },\n        },\n        IsError: true,\n    }, nil\n}\n","title":"Error Results","titles":["Implementing Tools","Result Types"]},"364":{"href":"/servers/tools#tool-annotations","html":"\n<p>Provide hints to help LLMs use your tools effectively:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search the product database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search query (supports wildcards with *)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Maximum number of results to return&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;categories&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Filter by product categories&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Items</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, handleSearchDatabase)</span></span></code></pre>\n","isPage":false,"text":"\nProvide hints to help LLMs use your tools effectively:\ntool := mcp.NewTool(&quot;search_database&quot;,\n    mcp.WithDescription(&quot;Search the product database&quot;),\n    mcp.WithString(&quot;query&quot;,\n        mcp.Required(),\n        mcp.Description(&quot;Search query (supports wildcards with *)&quot;),\n    ),\n    mcp.WithNumber(&quot;limit&quot;,\n        mcp.DefaultNumber(10),\n        mcp.Minimum(1),\n        mcp.Maximum(100),\n        mcp.Description(&quot;Maximum number of results to return&quot;),\n    ),\n    mcp.WithArray(&quot;categories&quot;,\n        mcp.Description(&quot;Filter by product categories&quot;),\n        mcp.Items(map[string]any{&quot;type&quot;: &quot;string&quot;}),\n    ),\n)\n \ns.AddTool(tool, handleSearchDatabase)\n","title":"Tool Annotations","titles":["Implementing Tools"]},"365":{"href":"/servers/tools#advanced-tool-patterns","html":"\n","isPage":false,"text":"\n","title":"Advanced Tool Patterns","titles":["Implementing Tools"]},"366":{"href":"/servers/tools#streaming-results","html":"\n<p>For long-running operations, consider streaming results:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStreamingTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For operations that take time, provide progress updates</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Simulate work</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed item </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;completed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;results&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: results,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nFor long-running operations, consider streaming results:\nfunc handleStreamingTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // For operations that take time, provide progress updates\n    results := []string{}\n    \n    for i := 0; i &lt; 10; i++ {\n        // Simulate work\n        time.Sleep(100 * time.Millisecond)\n        \n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n        \n        results = append(results, fmt.Sprintf(&quot;Processed item %d&quot;, i+1))\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;status&quot;:  &quot;completed&quot;,\n        &quot;results&quot;: results,\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Streaming Results","titles":["Implementing Tools","Advanced Tool Patterns"]},"367":{"href":"/servers/tools#conditional-tools","html":"\n<p>Tools that are only available under certain conditions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addConditionalTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userRole</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Admin-only tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userRole </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        adminTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;delete_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Delete a user account (admin only)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(adminTool, handleDeleteUser)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // User tools available to all</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userTool, handleGetProfile)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTools that are only available under certain conditions:\nfunc addConditionalTools(s *server.MCPServer, userRole string) {\n    // Admin-only tools\n    if userRole == &quot;admin&quot; {\n        adminTool := mcp.NewTool(&quot;delete_user&quot;,\n            mcp.WithDescription(&quot;Delete a user account (admin only)&quot;),\n            mcp.WithString(&quot;user_id&quot;, mcp.Required()),\n        )\n        s.AddTool(adminTool, handleDeleteUser)\n    }\n    \n    // User tools available to all\n    userTool := mcp.NewTool(&quot;get_profile&quot;,\n        mcp.WithDescription(&quot;Get user profile information&quot;),\n    )\n    s.AddTool(userTool, handleGetProfile)\n}\n","title":"Conditional Tools","titles":["Implementing Tools","Advanced Tool Patterns"]},"368":{"href":"/servers/tools#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Learn to create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore typed tools, middleware, and hooks</li>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Learn about exposing data sources</li>\n</ul>","isPage":false,"text":"\n\nPrompts - Learn to create reusable interaction templates\nAdvanced Features - Explore typed tools, middleware, and hooks\nResources - Learn about exposing data sources\n","title":"Next Steps","titles":["Implementing Tools"]}},"dirtCount":0,"index":[["z",{"2":{"338":1,"355":1}}],["z0",{"2":{"338":2,"355":2}}],["za",{"2":{"338":3,"355":3}}],["zero",{"2":{"68":3,"182":1,"246":1,"349":1}}],["6",{"2":{"261":2}}],["64",{"2":{"223":1}}],["60",{"2":{"67":1,"69":1,"194":2}}],["$`",{"2":{"338":1,"355":1}}],["$server",{"2":{"215":1}}],["$request",{"2":{"215":2}}],["$1",{"2":{"215":1}}],["|",{"2":{"212":4,"214":3,"215":1}}],["||",{"2":{"72":1,"86":1,"98":1,"120":2,"124":1,"130":1,"142":1,"154":1,"222":1,"261":1,"354":1}}],["9",{"2":{"188":1,"229":1,"338":2,"355":2}}],["90",{"2":{"123":1}}],["75",{"2":{"194":1,"343":1}}],["7",{"2":{"185":1,"188":1,"228":1,"229":1,"238":1,"270":1}}],["keep",{"2":{"169":1,"197":1}}],["key=",{"2":{"321":1}}],["keywords",{"2":{"301":3}}],["key",{"0":{"14":1,"19":1},"1":{"20":1,"21":1,"22":1},"2":{"2":1,"3":1,"4":1,"8":1,"44":1,"130":4,"183":8,"187":1,"284":1,"292":1,"299":1,"301":4,"306":1,"307":1,"309":2,"321":1,"352":2}}],["kill",{"2":{"119":2}}],["know",{"2":{"95":1}}],["50",{"2":{"194":1,"343":1}}],["5",{"2":{"64":1,"69":2,"120":1,"130":1,"143":1,"182":1,"183":1,"194":2,"207":1,"222":2}}],["42",{"2":{"345":1,"358":1}}],["45000",{"2":{"343":1}}],["4",{"2":{"62":1,"215":1,"299":1,"310":2}}],["\turl",{"2":{"362":1}}],["\turi",{"2":{"360":1}}],["\tannotated",{"2":{"362":1}}],["\tdoctype",{"2":{"362":1}}],["\tfor",{"2":{"361":1}}],["\tfounddocs",{"2":{"361":1}}],["\tquery",{"2":{"361":1}}],["\treturn",{"2":{"360":1,"361":1,"362":1}}],["\tresourcelink",{"2":{"360":1,"362":2}}],["\tresourceid",{"2":{"360":1}}],["\tif",{"2":{"267":2,"360":1,"361":1}}],["\ttransport",{"2":{"212":1}}],["\tnil",{"2":{"212":1}}],["\tcontent",{"2":{"361":1}}],["\tc",{"2":{"59":1}}],["\t",{"2":{"58":1,"59":1,"212":3,"267":2,"360":3,"361":6,"362":3}}],["\t\tannotations",{"2":{"362":1}}],["\t\tresourcelink",{"2":{"361":1}}],["\t\treturn",{"2":{"212":1,"267":1,"360":1,"361":1}}],["\t\tif",{"2":{"361":1}}],["\t\tmimetype",{"2":{"361":1}}],["\t\tmcp",{"2":{"361":1}}],["\t\tname",{"2":{"361":1}}],["\t\tparts",{"2":{"361":1}}],["\t\turi",{"2":{"361":1}}],["\t\tcontent",{"2":{"360":1,"361":2,"362":1}}],["\t\twithheaders",{"2":{"59":1}}],["\t\t\taudience",{"2":{"362":1}}],["\t\t\tcase",{"2":{"361":3}}],["\t\t\tswitch",{"2":{"361":1}}],["\t\t\tresourcelink",{"2":{"360":1,"362":1}}],["\t\t\tmcp",{"2":{"360":1,"362":1}}],["\t\t\t\tmimetype",{"2":{"361":3}}],["\t\t\t\t",{"2":{"267":1}}],["\t\t\t",{"2":{"58":2,"59":2,"267":2,"361":2}}],["\t\ttransport",{"2":{"58":3}}],["\t\t",{"2":{"58":4,"59":2,"360":1,"361":1,"362":2}}],["\thttptransport",{"2":{"58":1}}],["+port",{"2":{"285":2}}],["+",{"2":{"96":1,"115":1,"133":1,"162":2,"169":1,"172":1,"182":1,"194":1,"246":1,"263":1,"292":1,"338":3,"349":1,"355":3,"363":1}}],["+=",{"2":{"44":1}}],["+v",{"2":{"31":1,"41":1,"62":1,"63":1,"67":2,"69":2,"77":2,"102":1,"109":2,"119":1,"128":1,"133":1,"211":1}}],["```go",{"2":{"355":1}}],["`^",{"2":{"338":1,"355":1}}],["`please",{"2":{"310":2}}],["`users",{"2":{"94":1}}],["`",{"2":{"44":5,"94":1,"142":13,"155":2,"183":2,"194":6,"198":2,"206":2,"246":5,"247":11,"248":3,"299":1,"306":2,"340":4,"341":8,"343":5,"344":6,"346":10,"348":3,"351":2,"355":2}}],["`json",{"2":{"44":5,"142":5,"155":2,"246":5,"247":11,"248":3,"340":4,"341":8,"343":5,"344":6,"346":10,"348":3,"351":2,"355":2}}],["3200",{"2":{"343":1}}],["32602",{"2":{"150":1}}],["3",{"2":{"44":1,"62":1,"68":1,"170":1,"214":1,"215":1,"220":1,"299":1,"310":2}}],["30",{"2":{"30":1,"31":1,"58":1,"67":1,"68":1,"69":1,"109":1,"123":1,"129":1,"142":3,"143":1,"154":2,"194":1,"195":1,"197":1,"211":1,"219":1,"236":1,"238":1,"258":1,"266":1,"326":1,"329":1,"351":1,"352":1,"359":1}}],["22",{"2":{"261":1}}],["2f",{"2":{"182":1,"349":1}}],["25",{"2":{"142":2,"149":1}}],["20",{"2":{"102":1,"266":2}}],["2024",{"2":{"45":1,"63":1,"182":1,"183":1,"214":1,"215":1}}],["20240229",{"2":{"44":1}}],["2023",{"2":{"44":1}}],["2",{"2":{"41":1,"45":1,"62":1,"68":1,"142":2,"148":1,"149":1,"150":1,"194":1,"214":4,"215":5,"220":1,"275":1,"299":1,"310":2,"319":1,"338":1,"355":1,"361":1}}],["~64kb",{"2":{"173":1}}],["~1",{"2":{"172":1}}],["~100μs",{"2":{"172":1}}],["~1μs",{"2":{"172":1}}],["~",{"2":{"28":1,"210":1}}],["🔌",{"2":{"28":1}}],["👋",{"2":{"26":1}}],["🚀",{"2":{"16":1}}],["quality",{"2":{"299":2,"304":1}}],["queries",{"2":{"351":1}}],["querycontext",{"2":{"351":1}}],["queryescape",{"2":{"321":1}}],["queryrowcontext",{"2":{"320":1}}],["queryrequest",{"2":{"7":1}}],["query",{"0":{"351":1},"2":{"88":3,"142":8,"148":1,"204":1,"320":3,"340":3,"341":3,"342":3,"351":14,"361":2,"364":2}}],["querytool",{"2":{"7":1}}],["question",{"2":{"41":1,"185":8,"228":7,"238":7,"268":1,"270":7,"303":2}}],["questions",{"2":{"38":1,"226":1,"269":1,"303":1,"306":2}}],["quick",{"0":{"25":1,"77":1,"162":1,"292":1},"1":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1}}],["quot",{"2":{"2":16,"3":30,"4":22,"5":4,"7":6,"8":14,"9":8,"16":28,"20":18,"21":8,"22":4,"23":4,"26":34,"28":16,"30":46,"31":36,"39":20,"40":6,"41":52,"43":20,"44":56,"45":30,"46":12,"50":2,"56":10,"57":40,"58":10,"59":10,"62":24,"63":12,"64":16,"66":20,"67":46,"68":4,"69":18,"71":2,"72":6,"77":48,"79":6,"80":2,"81":2,"84":28,"85":14,"86":4,"88":10,"89":12,"93":34,"94":12,"96":24,"97":28,"100":24,"101":40,"102":28,"104":24,"105":6,"106":42,"108":28,"109":18,"112":12,"117":32,"118":10,"119":24,"120":18,"122":4,"123":10,"124":12,"126":2,"128":10,"129":10,"130":12,"131":8,"133":22,"134":18,"136":42,"137":50,"142":232,"143":28,"146":48,"148":26,"149":26,"150":20,"153":2,"155":20,"157":10,"162":50,"169":16,"170":28,"177":4,"182":80,"183":66,"185":92,"187":22,"188":8,"189":6,"194":118,"195":42,"197":8,"198":14,"199":2,"201":10,"206":104,"207":30,"210":20,"211":34,"212":16,"214":66,"215":92,"216":26,"219":16,"220":10,"222":6,"223":4,"227":10,"228":44,"229":8,"231":8,"233":4,"234":6,"235":6,"238":66,"246":54,"247":34,"248":24,"251":28,"253":12,"254":2,"255":8,"257":42,"258":4,"260":26,"261":14,"263":16,"264":14,"266":14,"267":42,"270":32,"274":6,"275":4,"277":8,"278":4,"279":6,"281":4,"282":6,"283":6,"284":14,"285":20,"286":14,"287":8,"292":74,"296":14,"298":77,"299":34,"301":22,"303":36,"304":34,"306":28,"307":28,"309":32,"310":42,"314":8,"316":18,"317":32,"319":22,"320":40,"321":18,"323":4,"324":12,"325":4,"326":22,"328":10,"329":4,"330":28,"335":24,"337":40,"338":20,"340":26,"341":36,"342":8,"343":38,"344":24,"345":8,"346":74,"348":24,"349":20,"350":52,"351":20,"352":26,"354":12,"355":32,"357":2,"358":14,"359":18,"360":12,"361":30,"362":14,"363":10,"364":20,"366":10,"367":12}}],["05",{"2":{"45":1,"63":1,"182":1,"183":1,"214":1,"215":1}}],["01",{"2":{"44":1}}],["0644",{"2":{"346":1,"350":1}}],["0666",{"2":{"216":1}}],["06",{"2":{"44":1}}],["0",{"2":{"7":2,"8":2,"9":2,"16":2,"22":2,"26":2,"30":2,"31":2,"43":2,"44":1,"45":3,"46":1,"63":2,"68":2,"77":4,"86":1,"97":6,"100":2,"104":3,"123":1,"125":1,"129":1,"133":2,"134":3,"137":2,"142":7,"143":2,"146":4,"148":2,"149":2,"150":1,"162":2,"170":2,"177":2,"182":11,"183":8,"185":7,"187":2,"188":5,"194":3,"195":2,"206":2,"207":3,"211":2,"214":5,"215":6,"216":2,"220":4,"227":2,"228":1,"229":5,"238":3,"246":3,"251":2,"263":1,"266":3,"267":2,"270":1,"274":2,"275":2,"277":4,"278":2,"279":2,"281":2,"282":2,"283":2,"285":2,"286":2,"287":2,"292":4,"298":2,"299":1,"316":2,"317":2,"330":2,"337":1,"338":1,"342":3,"346":2,"348":2,"349":1,"350":2,"354":3,"355":2,"358":1,"361":1,"366":1}}],["150",{"2":{"337":1,"354":2}}],["1f",{"2":{"194":3}}],["1024",{"2":{"223":1}}],["10ms",{"2":{"172":1}}],["10",{"2":{"102":1,"123":1,"142":2,"148":1,"149":1,"182":1,"183":1,"194":2,"222":1,"261":1,"266":2,"337":1,"342":1,"348":1,"355":1,"364":1,"366":1}}],["1001",{"2":{"212":3}}],["10000",{"2":{"338":1}}],["1000",{"2":{"185":1,"188":1,"228":1,"229":1,"238":1,"270":1,"337":1}}],["100",{"2":{"96":1,"123":1,"142":1,"194":1,"263":4,"264":1,"337":1,"364":1,"366":1}}],["11",{"2":{"45":1,"63":1,"182":1,"183":1,"214":1,"215":1}}],["1",{"2":{"7":1,"8":1,"9":1,"16":1,"22":1,"26":1,"30":1,"31":1,"41":1,"45":2,"62":1,"63":1,"67":1,"68":1,"69":1,"86":1,"102":1,"109":1,"120":3,"123":1,"129":1,"130":2,"131":1,"133":1,"134":1,"142":3,"143":1,"146":2,"148":1,"149":1,"150":1,"154":1,"162":1,"170":1,"177":1,"182":2,"183":2,"185":2,"188":1,"194":3,"195":1,"206":2,"207":3,"211":1,"212":1,"214":2,"215":2,"216":1,"220":4,"227":1,"229":1,"238":1,"246":1,"251":1,"263":1,"266":2,"267":1,"274":1,"277":2,"278":1,"279":1,"281":1,"282":1,"283":1,"285":1,"286":2,"287":1,"292":2,"298":1,"299":1,"310":2,"316":1,"317":1,"319":1,"330":1,"337":2,"342":1,"346":1,"350":1,"361":2,"364":1}}],["123",{"2":{"2":1,"142":1,"319":3,"320":2}}],["vectors",{"2":{"298":1}}],["verify",{"2":{"34":1,"35":1,"36":1}}],["version",{"2":{"30":4,"31":4,"44":1,"45":1,"63":2,"66":1,"67":1,"146":1,"182":1,"183":1,"185":2,"211":2,"212":1,"214":1,"215":1,"274":1,"292":1,"317":1}}],["versus",{"2":{"7":1}}],["vulnerabilities",{"2":{"298":1}}],["view",{"2":{"217":1}}],["visual",{"2":{"217":1}}],["visualization",{"2":{"165":1,"192":1,"304":1}}],["violation",{"2":{"66":1,"67":1}}],["via",{"2":{"17":1}}],["v10",{"2":{"248":1}}],["v1",{"2":{"41":1,"44":1,"143":1,"185":1,"321":1}}],["val",{"2":{"301":4,"309":2}}],["valid",{"2":{"155":1,"338":1}}],["validator",{"2":{"248":4,"255":2}}],["validation",{"0":{"101":1,"248":1,"353":1},"1":{"354":1,"355":1},"2":{"101":1,"237":1,"245":1,"247":1,"298":1,"337":1,"354":1,"355":1,"363":1}}],["validateurl",{"2":{"355":1}}],["validateemail",{"2":{"355":1}}],["validated",{"2":{"342":1,"354":1}}],["validatefilepath",{"2":{"248":2}}],["validatejwt",{"2":{"155":2}}],["validatetoken",{"2":{"143":1}}],["validatetoolarguments",{"2":{"101":2}}],["validatevalue",{"2":{"101":2}}],["validate",{"2":{"35":1,"46":1,"47":1,"101":2,"142":1,"143":1,"155":1,"176":1,"177":1,"206":1,"219":2,"237":1,"246":3,"247":4,"248":5,"255":2,"320":1,"328":1,"346":1,"350":1,"351":1,"354":1}}],["values",{"2":{"197":1,"338":1,"351":1}}],["valueof",{"2":{"109":2}}],["value",{"2":{"58":2,"59":2,"67":1,"85":1,"101":15,"130":4,"183":6,"194":1,"292":1,"310":3,"343":5,"352":2}}],["variable",{"2":{"310":3}}],["variables",{"2":{"57":1,"212":1,"285":1,"310":8}}],["various",{"2":{"22":1,"188":1,"197":1,"229":1,"337":1}}],["var",{"2":{"9":1,"41":1,"43":3,"44":3,"64":2,"66":3,"68":2,"84":2,"86":1,"89":2,"94":2,"97":1,"101":1,"102":1,"108":2,"119":1,"120":1,"182":1,"183":1,"185":1,"187":3,"194":2,"206":1,"212":2,"222":4,"223":1,"246":1,"260":1,"261":1,"292":2,"298":1,"299":1,"301":1,"303":1,"304":1,"306":1,"307":2,"309":1,"310":1,"320":1,"346":2,"348":1,"349":1,"350":2,"351":1,"352":1,"355":1}}],["v",{"2":{"16":1,"26":1,"30":4,"31":3,"40":2,"41":3,"46":1,"58":1,"62":2,"63":1,"64":1,"67":10,"68":2,"69":2,"71":1,"85":3,"86":2,"94":2,"96":2,"100":2,"102":1,"104":2,"106":2,"108":3,"109":3,"119":4,"120":1,"130":1,"143":4,"170":4,"183":1,"185":5,"189":1,"194":4,"198":1,"206":3,"207":2,"216":1,"219":2,"220":3,"228":1,"235":1,"238":3,"246":1,"251":1,"253":6,"258":2,"266":2,"270":1,"286":1,"287":1,"292":1,"301":2,"310":1,"346":3,"350":2,"351":3,"352":5,"354":1,"358":1,"363":1,"366":1}}],["vs",{"0":{"7":1,"152":1},"1":{"153":1,"154":1}}],["8081",{"2":{"170":2}}],["8080",{"2":{"5":2,"8":2,"23":2,"31":1,"56":2,"80":1,"81":1,"122":1,"124":1,"128":1,"129":1,"137":2,"142":2,"143":2,"146":2,"162":1,"169":1,"170":2,"194":2,"195":3,"197":3,"282":2,"283":2,"284":2,"285":1}}],["8",{"2":{"3":1,"142":3,"346":2,"350":4}}],["years",{"2":{"344":1}}],["york",{"2":{"102":1,"326":1}}],["your",{"0":{"16":1,"17":1,"27":1,"48":1},"1":{"28":1,"29":1},"2":{"14":1,"15":2,"17":1,"20":1,"22":1,"25":1,"28":3,"29":2,"36":1,"39":5,"40":1,"45":1,"46":1,"47":1,"48":2,"55":1,"75":1,"111":1,"112":4,"114":1,"124":2,"128":1,"129":1,"136":1,"156":1,"157":2,"159":1,"170":1,"185":1,"187":1,"188":1,"189":1,"200":1,"201":2,"206":1,"209":1,"210":2,"214":2,"216":1,"217":1,"227":1,"229":1,"233":1,"235":1,"242":1,"268":1,"269":1,"277":1,"293":1,"303":1,"306":1,"316":1,"334":1,"340":1,"360":1,"364":1}}],["you",{"0":{"76":1,"291":1},"2":{"6":1,"8":1,"15":1,"18":2,"25":1,"29":1,"30":1,"32":1,"39":1,"41":1,"45":1,"92":1,"95":2,"110":1,"126":3,"145":1,"155":1,"156":1,"185":2,"188":1,"199":1,"200":1,"212":3,"217":1,"228":1,"229":1,"238":1,"270":1,"288":1,"295":1,"303":3,"304":4,"360":1,"361":1,"362":1,"363":1}}],["y",{"2":{"3":1,"20":1,"58":1,"59":1,"102":1,"182":9,"183":1,"246":8,"267":1,"335":1,"349":7}}],["x",{"2":{"3":1,"20":1,"44":1,"58":1,"59":1,"102":1,"157":1,"182":8,"183":1,"194":1,"201":1,"246":7,"267":1,"335":1,"349":6}}],["x27",{"0":{"18":1,"32":1,"34":1,"76":1,"291":1},"2":{"2":1,"14":1,"16":1,"20":1,"21":1,"26":1,"28":2,"34":1,"39":1,"41":4,"68":2,"77":1,"86":1,"92":1,"110":2,"169":1,"185":3,"189":1,"199":1,"201":1,"206":2,"214":6,"215":8,"235":1,"238":1,"242":1,"268":2,"292":1,"295":1,"303":4,"313":1,"333":1,"337":2,"346":1,"361":2,"362":1}}],["jargon",{"2":{"309":1}}],["jane",{"2":{"142":4}}],["jpeg",{"2":{"234":1}}],["jwt",{"2":{"155":8}}],["jwtsecret",{"2":{"155":3}}],["john",{"2":{"142":6,"148":1,"326":1,"359":1}}],["join",{"2":{"24":1,"299":2}}],["just",{"2":{"3":1,"14":1,"15":1}}],["jsonschema",{"2":{"340":7,"341":8,"343":6,"344":7,"346":13}}],["jsondata",{"2":{"246":2,"251":2,"319":2,"320":2,"324":2,"326":2,"328":2,"329":2,"351":2,"352":2,"354":2,"358":2,"366":2}}],["jsonresources",{"2":{"94":2}}],["jsonrpc",{"2":{"45":1,"148":1,"149":1,"150":1,"214":3,"215":4}}],["json",{"0":{"324":1,"358":1},"2":{"2":3,"8":1,"28":2,"44":4,"51":1,"62":1,"93":1,"94":4,"97":4,"108":2,"123":1,"142":2,"146":4,"148":1,"194":2,"206":2,"209":1,"210":2,"215":1,"240":1,"241":1,"246":2,"251":1,"292":4,"317":3,"319":3,"320":4,"321":2,"324":2,"326":3,"328":2,"329":2,"330":2,"339":1,"340":1,"351":2,"352":1,"354":1,"358":1,"366":1}}],["risks",{"2":{"310":1}}],["right",{"0":{"163":1},"1":{"164":1,"165":1,"166":1,"167":1},"2":{"114":1,"159":1}}],["rfc3339",{"2":{"292":4}}],["r",{"2":{"146":8,"155":4,"197":1,"220":3,"330":6}}],["rsc",{"2":{"130":36}}],["rlock",{"2":{"71":1,"72":3,"89":2,"98":1,"109":1,"130":2,"131":1,"154":1,"222":1,"250":1,"254":1,"264":2,"331":1}}],["rwmutex",{"2":{"71":1,"72":1,"89":1,"98":1,"109":1,"130":1,"131":1,"154":1,"222":1,"250":1,"254":1,"264":1,"331":1}}],["rc",{"2":{"68":2,"72":28,"98":12}}],["rpc",{"2":{"51":1,"209":1,"215":1,"240":1,"241":1}}],["rowstojson",{"2":{"351":1}}],["rows",{"2":{"351":3}}],["row",{"2":{"320":2}}],["root",{"2":{"212":2,"310":1}}],["routes",{"2":{"146":1}}],["roles",{"0":{"231":1,"304":1},"2":{"230":1}}],["roleuser",{"2":{"41":1,"43":1,"185":2,"187":1,"188":1,"228":1,"229":1,"231":1,"238":1,"270":1,"292":1,"362":1}}],["roleassistant",{"2":{"39":1,"41":1,"43":2,"44":1,"112":1,"185":1,"187":2,"188":1,"229":1,"231":1}}],["role",{"2":{"39":1,"41":2,"43":8,"44":3,"104":1,"105":3,"112":1,"155":2,"185":3,"187":8,"188":1,"228":1,"229":1,"231":2,"238":1,"270":1,"292":1,"298":1,"299":1,"301":1,"303":7,"304":3,"306":1,"307":1,"309":1,"310":1,"362":1}}],["robust",{"0":{"219":1},"2":{"14":1,"65":1,"220":1,"278":1,"287":1,"290":1,"327":1}}],["rawargs",{"2":{"348":1}}],["raw",{"2":{"348":1}}],["raises",{"2":{"306":1}}],["randomness",{"2":{"188":1,"229":1}}],["range",{"2":{"30":2,"41":1,"43":1,"44":2,"62":1,"67":2,"68":1,"77":2,"88":1,"89":1,"93":1,"94":2,"96":2,"100":2,"101":3,"102":2,"104":3,"105":1,"109":2,"128":1,"130":1,"131":1,"154":2,"185":1,"187":1,"206":1,"211":1,"260":3,"261":1,"264":1,"301":1,"307":3,"310":1,"330":1,"352":1,"361":1}}],["ratelimitmw",{"2":{"266":1}}],["ratelimitmiddleware",{"2":{"177":1,"254":5}}],["ratelimiter",{"2":{"143":1}}],["rate",{"0":{"254":1},"2":{"46":2,"47":2,"140":1,"143":2,"166":1,"177":1,"252":1,"254":10}}],["rather",{"2":{"3":1,"8":1,"242":1}}],["runlock",{"2":{"71":1,"72":4,"89":2,"98":1,"109":1,"130":2,"131":1,"154":1,"222":1,"250":1,"254":1,"264":2,"331":2}}],["running",{"0":{"17":1,"27":1},"1":{"28":1,"29":1},"2":{"17":1,"18":1,"25":1,"35":1,"69":2,"169":1,"183":1,"192":1,"212":1,"263":1,"366":1}}],["runtime",{"2":{"8":1,"245":1}}],["run",{"2":{"3":1,"17":2,"26":2,"28":1,"29":2,"30":1,"57":2,"77":1,"109":1,"117":1,"118":1,"137":1,"210":1,"211":1,"212":2,"214":4,"215":1,"217":2}}],["reducing",{"2":{"245":1}}],["representation",{"2":{"326":2}}],["representations",{"2":{"326":1}}],["representative",{"2":{"303":1}}],["reproduce",{"2":{"310":1}}],["report",{"2":{"260":1,"310":4}}],["repository",{"2":{"204":1}}],["replaceall",{"2":{"310":1}}],["replace",{"2":{"186":1,"212":1,"310":1}}],["removesession",{"2":{"250":1,"251":1}}],["removehandler",{"2":{"109":1}}],["remain",{"2":{"201":1}}],["registersession",{"2":{"264":1}}],["registervalidation",{"2":{"248":1}}],["regular",{"2":{"128":1}}],["regex",{"2":{"94":2}}],["regexp",{"2":{"93":1,"94":1,"355":1}}],["reinitialization",{"2":{"126":1}}],["reinitialize",{"2":{"67":1,"126":2}}],["reuse",{"2":{"126":1}}],["reusable",{"2":{"4":2,"18":1,"32":1,"103":1,"288":1,"291":1,"294":1,"332":1,"368":1}}],["reference",{"0":{"344":1},"2":{"360":1}}],["referring",{"2":{"212":1}}],["refresh",{"2":{"108":2}}],["refreshing",{"2":{"108":2}}],["reflect",{"2":{"93":1,"109":2}}],["relationships",{"2":{"299":1}}],["relative",{"2":{"206":1}}],["related",{"2":{"94":1}}],["reliable",{"2":{"180":1}}],["relying",{"2":{"153":1}}],["relevant",{"2":{"4":1,"309":1}}],["retrieved",{"2":{"359":1}}],["retries",{"2":{"337":1,"348":2}}],["retryerr",{"2":{"72":3}}],["retryable",{"2":{"68":1}}],["retryableerr",{"2":{"68":2}}],["retryableerrors",{"2":{"68":3}}],["retryconfig",{"2":{"68":5}}],["retrying",{"2":{"67":1,"68":1,"86":1}}],["retry",{"0":{"68":1,"86":1},"2":{"67":1,"68":2,"72":1,"86":1,"220":1}}],["returns",{"2":{"38":1,"278":1,"342":1,"343":1,"348":2}}],["return",{"2":{"3":2,"9":1,"16":2,"26":2,"39":4,"41":1,"43":4,"44":5,"46":6,"57":4,"58":1,"59":1,"62":6,"63":2,"64":7,"67":13,"68":8,"69":2,"71":3,"72":11,"77":5,"84":5,"85":1,"86":3,"88":7,"89":8,"93":2,"94":5,"96":5,"97":14,"98":6,"100":4,"101":16,"102":1,"104":4,"105":6,"106":2,"108":5,"109":9,"112":2,"118":1,"119":1,"120":12,"124":1,"125":5,"130":13,"131":4,"133":1,"134":6,"136":5,"137":8,"142":18,"143":10,"153":3,"154":4,"155":9,"157":1,"162":2,"169":5,"170":1,"182":3,"183":7,"185":5,"187":4,"189":2,"194":8,"197":1,"198":1,"201":1,"206":19,"216":1,"219":8,"222":2,"223":4,"228":4,"235":2,"238":7,"246":3,"247":2,"248":3,"250":2,"251":6,"253":5,"254":5,"255":5,"257":1,"260":6,"261":4,"263":1,"264":1,"267":1,"270":3,"292":4,"298":3,"299":2,"301":5,"303":1,"304":1,"306":2,"307":2,"309":3,"310":2,"316":2,"317":2,"319":5,"320":4,"321":3,"323":1,"324":2,"325":2,"326":2,"328":6,"329":4,"331":3,"342":2,"343":3,"345":2,"346":6,"348":2,"349":7,"350":6,"351":7,"352":7,"354":6,"355":7,"357":1,"358":2,"359":1,"360":1,"363":8,"364":1,"366":3}}],["recursively",{"2":{"206":1}}],["recursive",{"2":{"206":7,"211":1,"214":1,"215":1}}],["receives",{"2":{"342":1}}],["received",{"2":{"41":1,"207":1,"220":1}}],["receiving",{"2":{"107":1}}],["record",{"2":{"320":2}}],["recordcount",{"2":{"299":1}}],["records",{"2":{"2":2,"299":1,"313":1,"320":2}}],["recommendations",{"2":{"298":1,"299":1,"306":1}}],["recommended",{"0":{"153":1}}],["recover",{"2":{"220":1,"278":1}}],["recovering",{"2":{"72":6}}],["recovery",{"0":{"72":1,"278":1},"2":{"72":2,"220":1,"275":1,"278":1,"287":1}}],["recoverable",{"2":{"67":2}}],["reconnected",{"2":{"130":1}}],["reconnecterr",{"2":{"67":3}}],["reconnectloop",{"2":{"130":2}}],["reconnectch",{"2":{"130":4}}],["reconnectclient",{"2":{"67":2}}],["reconnecting",{"2":{"67":1,"130":1}}],["reconnection",{"0":{"130":1},"2":{"8":1,"67":1,"85":1,"130":2}}],["reconnect",{"2":{"67":1,"85":1}}],["re",{"2":{"20":1,"110":1,"206":1,"295":1,"313":1}}],["reqbody",{"2":{"44":2}}],["req",{"2":{"9":2,"43":2,"68":2,"72":3,"86":2,"120":2,"125":2,"130":2,"133":2,"134":2,"136":9,"142":13,"143":8,"153":2,"157":2,"162":2,"182":4,"183":4,"187":2,"194":8,"198":1,"201":2,"206":6,"216":2,"219":2,"223":2,"246":1,"247":1,"251":2,"253":10,"254":2,"255":3,"260":2,"263":1,"266":1,"267":1,"292":6,"298":2,"299":4,"301":7,"303":3,"304":4,"306":3,"307":3,"309":4,"310":3,"316":2,"317":2,"319":3,"320":3,"321":3,"323":2,"324":2,"325":2,"326":3,"328":8,"329":4,"331":4,"342":1,"343":1,"345":1,"346":2,"348":11,"349":4,"350":4,"351":2,"352":5,"354":4,"355":9,"357":1,"358":1,"359":1,"360":2,"361":2,"362":2,"363":2,"366":1}}],["requiring",{"2":{"140":1,"165":1}}],["requirefloat",{"2":{"348":1,"349":2,"354":1,"355":1}}],["requireint",{"2":{"348":1,"355":1}}],["requirebool",{"2":{"206":1,"348":1,"355":1}}],["requirements",{"2":{"159":1,"260":1}}],["require",{"2":{"134":2,"269":1}}],["requirestring",{"2":{"16":1,"162":1,"185":1,"206":1,"219":1,"228":1,"238":1,"270":1,"348":1,"349":1,"350":2,"352":2,"354":1,"355":1,"360":1,"361":1,"363":1}}],["requiredpermissions",{"2":{"260":2}}],["required",{"2":{"3":5,"4":2,"16":1,"20":3,"26":2,"47":1,"67":1,"101":7,"133":1,"142":5,"143":1,"150":1,"157":1,"162":1,"182":3,"183":2,"185":1,"188":1,"194":2,"195":5,"201":1,"206":1,"216":1,"219":2,"228":1,"229":1,"238":1,"246":6,"247":2,"248":3,"251":1,"255":1,"260":2,"267":3,"270":1,"296":1,"298":3,"301":1,"335":3,"337":2,"338":3,"340":1,"343":1,"344":2,"346":2,"348":1,"350":2,"354":1,"355":1,"364":1,"367":1}}],["requested",{"2":{"360":2,"362":1}}],["request=",{"2":{"215":1}}],["requesting",{"0":{"228":1},"2":{"185":1,"228":1,"238":1}}],["requestid",{"2":{"157":1,"194":1,"201":1}}],["requestspersecond",{"2":{"254":2}}],["requestsampling",{"2":{"185":1,"189":1,"228":2,"235":1,"236":1,"238":1,"270":1}}],["requestsnoyessseweb",{"2":{"115":1}}],["requests",{"2":{"7":2,"9":1,"37":1,"38":1,"40":1,"47":1,"110":1,"121":1,"126":1,"140":1,"201":1,"237":2,"242":1}}],["request",{"0":{"147":1,"148":1,"156":1,"188":1,"200":1,"229":1,"352":1},"1":{"148":1,"149":1,"150":1,"157":1,"201":1},"2":{"5":1,"16":2,"26":2,"38":1,"39":6,"41":7,"43":7,"44":7,"45":1,"46":5,"67":1,"112":2,"139":1,"140":1,"146":3,"153":2,"155":2,"156":2,"157":5,"174":1,"177":1,"184":1,"185":7,"187":7,"189":2,"194":2,"197":2,"200":1,"201":5,"214":1,"215":6,"217":1,"225":1,"226":1,"228":6,"235":2,"236":1,"238":5,"255":1,"268":1,"270":4,"282":1,"286":2,"310":4,"352":4}}],["reason",{"2":{"43":1,"44":1,"187":1,"363":1}}],["reasoning",{"2":{"38":1,"110":1,"226":1,"268":1,"269":1}}],["realtime",{"2":{"136":5}}],["real",{"0":{"42":1,"186":1,"198":1},"1":{"43":1,"44":1,"187":1,"199":1,"200":1,"201":1},"2":{"5":3,"56":1,"81":1,"107":1,"115":1,"127":1,"136":1,"155":1,"161":3,"165":2,"167":1,"178":1,"186":1,"191":1,"192":2,"194":5,"195":3,"198":2,"224":1,"262":1,"283":2}}],["readall",{"2":{"321":1,"352":1}}],["readable",{"2":{"314":1}}],["readability",{"2":{"298":3}}],["reads",{"2":{"257":1}}],["readfiletool",{"2":{"346":2}}],["readfile",{"2":{"206":1,"316":1,"325":1,"346":1}}],["readbinaryresource",{"2":{"97":1}}],["readtextresource",{"2":{"97":1}}],["readjsonresource",{"2":{"97":1}}],["reading",{"0":{"95":1,"96":1,"97":1},"1":{"96":1,"97":1,"98":1},"2":{"92":1}}],["readresourceresult",{"2":{"96":1,"98":4,"134":1,"143":1,"253":1,"316":2,"317":2,"319":1,"320":2,"321":2,"323":2,"325":2,"326":2,"328":2,"329":2,"331":2}}],["readresourcerequestparams",{"2":{"77":1,"96":1,"134":1}}],["readresourcerequest",{"2":{"77":1,"96":1,"134":1,"142":1,"143":1,"157":1,"194":1,"201":1,"206":1,"253":1,"292":1,"316":1,"317":1,"319":1,"320":1,"321":1,"323":1,"324":1,"325":1,"326":1,"328":1,"329":1,"331":1}}],["readresource",{"2":{"77":1,"96":3,"97":3,"98":2,"134":2}}],["ready",{"2":{"17":1,"32":1,"190":1,"244":1}}],["readme",{"2":{"2":2,"21":3,"24":1,"314":2,"316":4,"330":2}}],["read",{"2":{"2":2,"24":1,"77":2,"92":1,"95":1,"96":3,"98":1,"124":1,"143":2,"145":2,"206":2,"223":1,"251":2,"253":3,"260":1,"299":1,"312":1,"316":1,"321":1,"346":8,"352":2}}],["reviewprompt",{"2":{"4":1}}],["review",{"0":{"298":1},"2":{"4":5,"106":4,"113":1,"158":1,"271":1,"296":3,"298":7}}],["resolve",{"2":{"206":1}}],["resourcelink",{"2":{"361":1}}],["resourceid",{"2":{"360":1}}],["resourcedata",{"2":{"307":1}}],["resourceuris",{"2":{"307":2}}],["resourcemiddleware",{"2":{"253":1}}],["resourcecontent",{"2":{"316":1,"317":1,"320":1,"321":1,"323":1,"325":1,"326":1,"329":1}}],["resourcecontents",{"2":{"142":2,"194":2,"206":2,"292":2,"319":1,"324":2,"328":1}}],["resourcecache",{"2":{"98":6}}],["resourcehandler",{"2":{"134":1,"143":2,"253":2,"330":1}}],["resource",{"0":{"93":1,"94":1,"96":1,"97":1,"98":1,"222":1,"306":1,"307":1,"313":1,"314":1,"330":1,"360":1,"361":1,"362":1},"1":{"314":1},"2":{"2":4,"9":1,"21":1,"60":1,"66":1,"77":10,"93":6,"94":10,"96":9,"97":5,"108":2,"134":2,"143":2,"145":1,"156":1,"200":1,"206":1,"253":3,"286":1,"292":1,"298":1,"299":1,"307":10,"314":2,"316":1,"317":1,"319":1,"320":1,"321":1,"326":1,"327":1,"328":4,"329":1,"330":2,"360":4,"361":2,"362":2}}],["resourcescapability",{"2":{"63":1}}],["resources",{"0":{"2":1,"21":1,"92":1,"95":1,"305":1,"312":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"331":1},"1":{"93":1,"94":1,"96":1,"97":1,"98":1,"306":1,"307":1,"313":1,"314":1,"315":1,"316":2,"317":2,"318":1,"319":2,"320":2,"321":2,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1},"2":{"2":3,"4":1,"7":1,"9":1,"13":1,"14":1,"18":1,"21":1,"32":1,"61":2,"63":1,"73":1,"75":1,"76":1,"77":12,"90":1,"91":1,"92":2,"93":8,"94":12,"95":1,"96":5,"108":2,"131":1,"142":1,"143":1,"145":3,"170":2,"194":1,"195":1,"215":2,"217":1,"257":3,"258":2,"266":1,"275":1,"277":2,"288":1,"290":1,"291":1,"293":1,"294":1,"307":8,"312":1,"313":1,"315":1,"318":1,"321":1,"322":1,"330":3,"331":1,"360":1,"368":1}}],["resilientsseclient",{"2":{"130":9}}],["resilientclient",{"2":{"72":5}}],["respbody",{"2":{"352":2}}],["respect",{"2":{"47":2}}],["resp",{"2":{"43":4,"44":3,"187":4,"321":3,"352":5}}],["responds",{"2":{"9":1}}],["respond",{"2":{"7":1,"38":1,"110":1}}],["responsewriter",{"2":{"146":3,"155":1}}],["response",{"0":{"147":1,"149":1,"150":1},"1":{"148":1,"149":1,"150":1},"2":{"5":1,"39":3,"41":3,"43":1,"44":1,"46":2,"66":1,"88":3,"112":1,"139":1,"185":4,"187":1,"189":1,"217":1,"228":2,"235":1,"238":2,"270":1,"282":1,"321":1,"342":1,"345":4,"352":2}}],["responses",{"2":{"2":1,"192":1,"237":1,"269":1,"278":1,"313":1,"341":1}}],["resultdata",{"2":{"351":2,"352":2,"366":2}}],["resulting",{"2":{"197":1}}],["result",{"0":{"356":1},"1":{"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1},"2":{"7":1,"30":4,"31":3,"38":1,"39":1,"41":3,"44":4,"62":3,"63":4,"67":4,"68":2,"69":4,"72":2,"77":3,"85":3,"86":2,"88":3,"96":4,"97":9,"98":9,"100":5,"102":10,"104":7,"105":2,"112":1,"119":3,"120":2,"130":2,"133":3,"134":2,"143":3,"149":1,"153":2,"182":10,"183":7,"185":8,"189":1,"211":3,"219":2,"223":3,"228":2,"235":1,"236":1,"238":3,"246":10,"251":1,"253":4,"270":2,"301":3,"331":1,"345":3,"346":1,"349":7,"352":1,"354":3,"358":3,"361":1,"363":2,"366":1}}],["results",{"0":{"345":1,"357":1,"358":1,"363":1,"366":1},"2":{"3":1,"102":5,"143":1,"194":6,"340":1,"341":1,"351":7,"364":1,"366":6}}],["restful",{"2":{"142":1}}],["restarted",{"2":{"120":1}}],["restarterr",{"2":{"119":9}}],["restarting",{"2":{"120":3}}],["restartchan",{"2":{"120":5}}],["restart",{"2":{"28":1,"119":9,"120":2,"261":1}}],["rest",{"2":{"5":1,"80":1,"139":1,"140":1,"157":1,"160":1,"166":1,"187":1,"201":1,"282":1}}],["ncity",{"2":{"326":1}}],["ncode",{"2":{"298":1}}],["ncalling",{"2":{"77":1,"100":1}}],["n4",{"2":{"298":1}}],["n3",{"2":{"298":1,"307":1}}],["n2",{"2":{"298":1,"307":1}}],["n1",{"2":{"298":1,"307":1}}],["nplease",{"2":{"298":1}}],["npm",{"2":{"29":1,"217":1}}],["ninstructions",{"2":{"298":1}}],["nil",{"2":{"16":4,"26":3,"30":6,"31":4,"39":4,"40":3,"41":5,"43":4,"44":5,"45":1,"46":7,"50":1,"57":6,"58":1,"62":8,"63":2,"64":6,"67":5,"68":2,"69":2,"71":2,"72":13,"77":8,"84":6,"85":1,"86":4,"88":8,"89":6,"93":2,"94":10,"96":5,"97":16,"98":5,"100":5,"101":11,"102":1,"104":5,"105":6,"106":2,"108":3,"109":9,"112":1,"117":3,"118":3,"119":4,"120":14,"122":2,"123":1,"124":1,"128":3,"129":2,"130":12,"131":2,"133":3,"134":1,"137":6,"142":19,"143":10,"146":1,"153":2,"154":1,"155":7,"157":1,"162":3,"170":3,"182":6,"183":10,"185":10,"187":5,"189":2,"194":11,"195":1,"198":3,"201":1,"206":14,"207":2,"211":5,"212":2,"216":3,"219":9,"220":2,"222":1,"223":6,"228":5,"235":2,"238":6,"241":1,"246":4,"247":2,"248":1,"251":7,"253":2,"254":1,"255":3,"257":2,"258":1,"263":1,"266":2,"267":4,"270":5,"281":1,"282":1,"283":1,"284":2,"287":1,"292":7,"298":3,"299":3,"301":1,"303":1,"304":1,"306":3,"307":3,"309":1,"310":2,"316":3,"317":3,"319":5,"320":6,"321":5,"323":1,"324":3,"325":3,"326":1,"328":8,"329":6,"331":4,"342":1,"343":1,"345":1,"346":9,"348":2,"349":9,"350":10,"351":10,"352":14,"354":9,"355":5,"357":1,"358":3,"359":1,"360":3,"361":3,"362":1,"363":5,"366":4}}],["nuances",{"2":{"309":1}}],["nusing",{"2":{"104":1}}],["number",{"2":{"101":2,"182":2,"267":2,"335":2,"337":3,"338":1,"364":1}}],["nreading",{"2":{"77":1,"96":1}}],["nage",{"2":{"326":1}}],["naming",{"2":{"298":1}}],["namespace",{"2":{"212":3}}],["name",{"2":{"16":5,"26":6,"30":5,"31":4,"39":1,"45":1,"62":4,"63":2,"67":3,"69":2,"77":5,"85":1,"88":2,"89":4,"93":1,"100":6,"101":5,"102":6,"104":7,"105":3,"119":1,"133":1,"134":7,"142":20,"148":1,"182":2,"183":4,"185":3,"211":3,"214":2,"215":2,"228":1,"238":1,"247":8,"253":3,"260":1,"261":2,"270":1,"274":1,"292":1,"310":3,"314":1,"320":1,"326":3,"330":2,"337":2,"341":3,"343":5,"344":2,"348":4,"354":5,"355":6,"359":3,"361":1,"363":2}}],["navailable",{"2":{"77":1}}],["nature",{"2":{"52":1,"242":1}}],["n",{"2":{"16":1,"26":1,"30":4,"31":2,"41":1,"77":8,"93":3,"94":2,"96":6,"100":5,"102":3,"104":9,"106":2,"108":2,"109":4,"136":3,"162":2,"182":1,"183":1,"185":1,"188":2,"206":1,"223":2,"229":2,"264":17,"292":1,"298":6,"307":10}}],["net",{"2":{"44":1,"57":1,"117":1,"142":1}}],["networking",{"2":{"212":1}}],["networks",{"2":{"212":1}}],["networksingle",{"2":{"161":1}}],["networkrequired",{"2":{"136":7}}],["network",{"0":{"177":1},"2":{"5":1,"35":1,"133":1,"169":1,"172":1,"173":1,"176":1,"179":1,"180":1}}],["needs",{"2":{"38":1,"111":1,"268":1,"269":1,"303":1}}],["need",{"0":{"24":1},"2":{"92":1,"110":1,"191":1,"192":1,"212":1,"226":1,"268":1,"292":1}}],["needed",{"0":{"154":1},"2":{"6":1,"153":1,"206":1}}],["next",{"0":{"18":1,"32":1,"53":1,"73":1,"90":1,"113":1,"158":1,"178":1,"190":1,"202":1,"224":1,"243":1,"271":1,"288":1,"293":1,"311":1,"332":1,"368":1},"2":{"143":6,"155":2,"253":4,"254":2,"255":2}}],["newbusinesshooks",{"2":{"266":1}}],["newbuffer",{"2":{"44":1}}],["newjwtvalidator",{"2":{"266":1}}],["newcustomnotifier",{"2":{"264":1,"266":1}}],["newclientfactory",{"2":{"137":2}}],["newclienthealthmonitor",{"2":{"71":1}}],["newclient",{"2":{"30":1,"31":1,"40":1,"41":1,"43":1,"45":1,"50":1,"58":1,"72":4,"187":1}}],["newratelimitmiddleware",{"2":{"254":1,"266":1}}],["newreader",{"2":{"352":1}}],["newresilientsseclient",{"2":{"130":1}}],["newresilientclient",{"2":{"72":1}}],["newresourcelink",{"2":{"360":1,"361":1,"362":1}}],["newresourcecache",{"2":{"98":1}}],["newresource",{"2":{"2":2,"21":1,"134":1,"142":1,"194":1,"206":1,"292":1,"314":1,"316":1,"317":1,"319":1,"320":1,"321":1,"330":1}}],["newrequestwithcontext",{"2":{"44":1,"352":1}}],["newlimiter",{"2":{"254":1}}],["newloggingmiddleware",{"2":{"253":1,"266":1}}],["newllmclient",{"2":{"88":1}}],["newllmapplication",{"2":{"88":1}}],["newnet",{"2":{"212":1}}],["newns",{"2":{"212":1}}],["newuts",{"2":{"212":1}}],["newprometheusmetrics",{"2":{"266":1}}],["newpromptprocessor",{"2":{"105":1,"106":2}}],["newprompt",{"2":{"4":2,"292":1,"296":1,"298":1}}],["newpermissionfilter",{"2":{"260":1,"266":1}}],["newpid",{"2":{"212":1}}],["newipc",{"2":{"212":1}}],["newinprocessclientwithsamplinghandler",{"2":{"51":1,"185":1,"187":1,"241":1}}],["newinprocessclient",{"2":{"23":1,"56":1,"82":1,"133":1,"134":1,"169":1,"182":1,"183":1}}],["newauditlogger",{"2":{"266":1}}],["newauthmiddleware",{"2":{"155":1,"255":1,"266":1}}],["newapplication",{"2":{"183":2}}],["newanthropicsamplinghandler",{"2":{"44":1}}],["newhttpsessionmanager",{"2":{"154":1}}],["newencoder",{"2":{"146":2}}],["newtextcontent",{"2":{"292":1,"298":1,"299":1,"301":1,"303":6,"304":3,"306":1,"307":1,"309":1,"310":1,"360":1,"361":1,"362":1}}],["newtelemetryhooks",{"2":{"257":1,"266":1}}],["newtestclient",{"2":{"134":2}}],["newtypedtoolhandler",{"2":{"246":1,"345":2}}],["newticker",{"2":{"71":1,"154":1,"194":1}}],["newtoolresultstructured",{"2":{"345":1}}],["newtoolresultjson",{"2":{"153":1,"247":1}}],["newtoolresulttext",{"2":{"16":1,"133":1,"134":1,"142":3,"162":1,"182":1,"183":2,"194":2,"198":1,"206":1,"216":1,"219":1,"223":1,"246":1,"251":1,"263":1,"292":1,"349":1,"350":1,"351":1,"352":1,"354":1,"357":1,"358":1,"366":1}}],["newtoolresulterror",{"2":{"16":1,"182":1,"183":1,"206":4,"246":2,"251":1,"267":1,"348":1,"349":5,"350":5,"351":5,"352":6,"354":5,"355":1,"358":1,"360":1,"361":1,"363":2,"366":1}}],["newtool",{"2":{"3":2,"16":1,"20":1,"26":1,"133":1,"134":1,"142":3,"162":1,"182":1,"183":2,"194":2,"195":3,"206":1,"216":1,"246":1,"251":1,"267":1,"292":1,"335":1,"340":1,"341":1,"342":1,"343":1,"345":1,"346":2,"350":1,"364":1,"367":2}}],["newmanagedstdioclient",{"2":{"120":1}}],["newmanagedclient",{"2":{"64":1}}],["newmultiserverclient",{"2":{"89":1}}],["newmcpclientmanager",{"2":{"84":1}}],["newmcpserver",{"2":{"7":1,"8":1,"9":1,"16":1,"22":1,"26":1,"133":1,"134":1,"142":1,"143":1,"146":1,"162":1,"170":1,"177":1,"182":1,"183":1,"185":1,"194":1,"195":1,"206":1,"207":1,"216":1,"220":1,"227":1,"238":1,"246":1,"251":1,"266":1,"267":1,"273":1,"274":1,"275":1,"277":2,"278":1,"279":1,"281":1,"282":1,"283":1,"285":1,"286":1,"287":1,"292":1,"298":1,"316":1,"330":1,"342":1,"346":1,"350":1}}],["newslacknotifier",{"2":{"266":1}}],["newsessionmanager",{"2":{"250":1,"251":1,"266":1}}],["newservemux",{"2":{"146":1}}],["newsseserver",{"2":{"162":1,"169":1,"170":1,"194":1,"195":1,"197":1,"283":1,"284":1,"285":1}}],["newsseeventhandler",{"2":{"131":1}}],["newsseclient",{"2":{"128":1,"130":1}}],["newssemcpclient",{"2":{"56":1,"59":1,"62":1,"64":2,"81":1,"84":1,"89":1,"129":1,"137":1}}],["newsubscriptionmanager",{"2":{"109":2}}],["newstructuredtoolhandler",{"2":{"342":2,"346":2}}],["newstreamablehttpclientpool",{"2":{"125":1}}],["newstreamablehttpclient",{"2":{"56":1,"64":1,"80":1,"84":1,"88":1,"89":1,"122":1,"123":1,"124":1,"125":1,"126":1,"137":1}}],["newstreamablehttp",{"2":{"31":1,"58":1}}],["newstreamablehttpserver",{"2":{"23":1,"142":1,"143":1,"146":1,"162":1,"169":1,"170":1,"282":1,"284":1,"285":1}}],["newstdiomcpclientwithoptions",{"2":{"118":1,"212":2}}],["newstdiomcpclient",{"2":{"56":1,"57":2,"77":1,"79":1,"84":1,"117":1,"212":1}}],["newstdio",{"2":{"30":1,"40":1,"41":1,"45":1,"50":1}}],["newstdioclientwithoptions",{"2":{"120":1,"137":1}}],["newstdioclient",{"2":{"7":1,"112":1,"211":1,"212":1}}],["newdecoder",{"2":{"44":1}}],["newopenaisamplinghandler",{"2":{"43":1,"187":2}}],["new",{"2":{"3":1,"16":1,"26":1,"66":10,"72":2,"102":1,"119":3,"120":4,"142":1,"212":1,"216":1,"248":1,"266":1,"309":1,"326":1,"346":1,"350":1}}],["noerror",{"2":{"134":2}}],["non",{"2":{"68":1,"212":1}}],["now",{"2":{"17":1,"18":1,"32":1,"40":1,"98":1,"142":2,"146":1,"154":9,"156":1,"198":1,"247":1,"250":1,"253":2,"261":1,"264":2,"288":1,"292":3,"324":1,"331":1,"342":1,"345":1,"358":1}}],["normalized",{"2":{"8":1}}],["no",{"2":{"5":2,"43":1,"46":1,"97":4,"133":1,"161":1,"172":1,"176":1,"183":1,"187":1,"241":1,"260":1,"267":1}}],["notifier",{"2":{"258":5,"266":1}}],["notificationhandler",{"2":{"109":5}}],["notification",{"2":{"108":23,"109":13,"128":3,"130":1,"131":13,"194":3,"198":3,"199":3,"258":1,"263":3,"264":8}}],["notifications",{"0":{"198":1,"262":1,"263":1,"264":1},"1":{"199":1,"200":1,"201":1,"263":1,"264":1},"2":{"107":1,"108":8,"109":7,"128":4,"131":6,"194":2,"198":2,"283":1}}],["notify",{"2":{"207":1,"220":1,"266":1,"286":1}}],["note",{"2":{"110":1,"155":1,"169":1,"199":1,"201":1,"268":1}}],["not",{"2":{"2":1,"14":1,"52":1,"66":2,"67":3,"85":1,"89":1,"101":1,"108":1,"109":1,"120":1,"130":2,"137":3,"142":2,"146":1,"155":1,"161":2,"212":1,"219":1,"242":1,"267":2,"298":1,"319":1,"320":2,"328":2,"346":1,"350":1,"363":1}}],["==",{"2":{"41":1,"43":1,"44":1,"46":1,"67":1,"68":2,"71":1,"86":1,"94":1,"97":4,"101":2,"109":1,"120":1,"130":2,"136":1,"137":1,"142":4,"143":2,"157":1,"162":1,"182":1,"183":1,"185":1,"187":1,"194":1,"201":1,"220":1,"223":1,"246":1,"255":1,"260":1,"261":1,"267":2,"285":1,"298":1,"317":1,"319":1,"349":1,"354":1,"367":1}}],["=",{"2":{"2":2,"3":2,"4":2,"7":4,"8":1,"9":4,"16":6,"20":1,"21":1,"22":1,"26":6,"30":23,"31":16,"39":6,"40":8,"41":14,"43":14,"44":14,"45":2,"46":4,"50":2,"51":1,"56":4,"57":5,"58":3,"59":1,"62":14,"63":3,"64":8,"66":10,"67":14,"68":8,"69":6,"71":5,"72":19,"77":19,"79":1,"80":1,"81":1,"82":1,"84":8,"85":2,"86":5,"88":13,"89":12,"93":4,"94":14,"96":11,"97":14,"98":5,"100":9,"101":22,"102":8,"104":10,"105":8,"106":6,"108":8,"109":19,"112":1,"117":7,"118":9,"119":12,"120":19,"122":6,"123":5,"124":4,"125":4,"126":5,"128":9,"129":6,"130":19,"131":7,"133":8,"134":8,"136":3,"137":15,"142":22,"143":14,"146":7,"153":4,"154":8,"155":10,"157":4,"162":8,"169":5,"170":11,"177":1,"182":16,"183":18,"185":25,"187":17,"188":1,"189":2,"194":27,"195":4,"197":1,"198":4,"201":5,"206":16,"207":7,"211":10,"212":6,"216":7,"219":6,"220":8,"222":4,"223":8,"227":1,"228":6,"229":1,"235":2,"236":2,"238":11,"241":2,"246":9,"247":4,"248":5,"250":2,"251":10,"253":10,"254":5,"255":4,"257":2,"258":1,"260":8,"261":6,"263":3,"264":5,"266":16,"267":4,"270":5,"274":1,"275":1,"277":2,"278":1,"279":1,"281":3,"282":4,"283":4,"284":6,"285":6,"286":3,"287":3,"292":15,"296":1,"298":11,"299":5,"301":16,"303":4,"304":11,"306":8,"307":9,"309":5,"310":9,"314":1,"316":3,"317":3,"319":6,"320":9,"321":6,"323":1,"324":3,"325":3,"326":3,"328":4,"329":5,"330":3,"331":4,"335":1,"340":1,"341":1,"342":6,"343":1,"345":3,"346":12,"348":12,"349":10,"350":13,"351":13,"352":20,"354":8,"355":15,"357":1,"358":3,"359":1,"360":4,"361":14,"362":5,"363":2,"364":1,"366":6,"367":2}}],["wrong",{"2":{"348":1,"355":1}}],["wronly|os",{"2":{"216":1}}],["writefile",{"2":{"346":1,"350":1}}],["writestring",{"2":{"223":1,"299":5,"307":6,"309":7}}],["write",{"2":{"72":1,"124":1,"248":2,"346":1}}],["writing",{"2":{"4":1}}],["wg",{"2":{"102":4,"109":4,"120":4,"131":4}}],["w",{"2":{"39":1,"43":1,"44":2,"46":2,"57":2,"62":3,"63":1,"68":1,"72":3,"77":4,"84":1,"86":1,"88":1,"89":2,"93":1,"94":1,"96":1,"97":2,"100":1,"101":3,"104":1,"109":1,"120":1,"130":1,"142":2,"143":1,"146":12,"155":5,"170":3,"187":1,"206":1,"219":1,"247":1,"255":1,"299":1,"306":1,"307":1,"316":1,"319":1,"320":1,"321":2,"328":1,"355":1}}],["would",{"2":{"143":3,"155":1,"169":1,"170":1,"195":1,"299":1}}],["won",{"0":{"34":1}}],["world",{"0":{"26":1},"2":{"16":2,"26":3,"28":2,"30":3,"31":2,"134":2,"324":1}}],["workflow",{"2":{"164":1,"204":1}}],["workflows",{"2":{"4":1,"295":1}}],["work",{"2":{"140":1,"263":1,"366":1}}],["working",{"2":{"32":1,"118":1,"212":2}}],["works",{"2":{"8":2,"157":1,"162":1,"201":1,"212":1}}],["want",{"2":{"295":1,"360":1}}],["wants",{"2":{"111":1}}],["was",{"2":{"69":1,"341":1}}],["waitgroup",{"2":{"102":1,"109":1,"120":1,"131":1}}],["waiting",{"2":{"64":1}}],["wait",{"2":{"64":1,"67":1,"68":1,"69":1,"102":1,"109":1,"120":2,"131":1,"170":1,"266":1}}],["waitforready",{"2":{"64":1}}],["walks",{"2":{"25":1}}],["way",{"2":{"5":1,"12":1,"52":1,"161":1,"242":1,"334":1}}],["wildcards",{"2":{"364":1}}],["will",{"2":{"15":1,"40":1,"45":1}}],["windows",{"2":{"28":1,"210":1}}],["withkeepalive",{"2":{"284":1}}],["withkeepaliveinterval",{"2":{"195":1,"197":1}}],["withboolean",{"2":{"206":1,"337":1}}],["withbaseurl",{"2":{"195":1,"197":1}}],["withmessageendpoint",{"2":{"197":1,"284":1}}],["withmimetype",{"2":{"2":2,"21":1,"142":1,"194":1,"206":1,"292":1,"314":1,"316":1,"317":1,"319":1,"320":1,"321":1,"330":1}}],["withargument",{"2":{"292":1}}],["witharray",{"2":{"195":1,"337":1,"364":1}}],["withallcapabilities",{"2":{"134":1}}],["withobject",{"2":{"195":1,"337":1}}],["withoutputschema",{"2":{"341":1,"342":1,"343":1,"345":1,"346":2}}],["without",{"2":{"153":1,"157":1,"180":1,"201":1,"260":1,"360":1}}],["withinputschema",{"2":{"340":2,"341":1,"342":1,"343":1,"345":1,"346":2}}],["withinteger",{"2":{"337":1}}],["withinstructions",{"2":{"279":1}}],["within",{"2":{"179":1,"180":1,"183":1,"206":1,"228":1,"248":1}}],["withvalue",{"2":{"143":1,"155":1,"255":1}}],["withendpointpath",{"2":{"143":1,"284":1}}],["withlogging",{"2":{"143":1,"195":1,"207":1,"216":1}}],["withlogger",{"2":{"123":1}}],["withcontext",{"2":{"155":1}}],["withcommandfunc",{"2":{"118":1,"212":2}}],["withcommandlogger",{"2":{"118":1}}],["withcancel",{"2":{"64":1,"69":1,"84":1,"109":1,"120":1,"130":1,"131":1}}],["withheartbeatinterval",{"2":{"143":1}}],["withheaders",{"2":{"129":1,"137":1}}],["withhttpclient",{"2":{"129":1}}],["withhttpoauth",{"2":{"124":1}}],["withhttpbasicclient",{"2":{"58":1,"123":1}}],["withhttpheaders",{"2":{"58":1,"123":1,"137":1}}],["withhttptimeout",{"2":{"58":1,"123":1}}],["withhooks",{"2":{"9":1,"22":1,"251":1,"266":1,"275":1,"286":1}}],["withssecontextfunc",{"2":{"197":1}}],["withsseendpoint",{"2":{"197":1,"284":1}}],["withsselogger",{"2":{"129":1}}],["withstaticbasepath",{"2":{"195":1,"197":1}}],["withstateless",{"2":{"143":1,"284":1}}],["withstring",{"2":{"3":4,"16":1,"20":1,"26":1,"133":1,"142":4,"162":1,"182":1,"183":2,"194":1,"195":5,"206":1,"216":1,"246":1,"251":1,"267":1,"292":1,"335":1,"337":1,"338":2,"350":3,"364":1,"367":1}}],["withsession",{"2":{"126":1}}],["withsamplinghandler",{"2":{"40":1,"41":1,"45":1,"50":1,"112":1}}],["withtlscert",{"2":{"284":1}}],["withtoolfilter",{"2":{"266":1}}],["withtoolhandlermiddleware",{"2":{"266":1}}],["withtoolmiddleware",{"2":{"177":2}}],["withtoolcapabilities",{"2":{"16":1,"22":1,"26":1,"142":1,"143":1,"162":1,"182":1,"183":1,"194":1,"195":1,"206":1,"207":1,"216":1,"246":1,"251":1,"266":1,"267":1,"275":1,"277":2,"292":1,"342":1,"346":1,"350":1}}],["withtimeout",{"2":{"30":1,"31":1,"67":2,"69":1,"71":1,"207":1,"211":1,"219":1,"236":1,"238":1,"266":1,"329":1,"351":1}}],["withresourcecapabilities",{"2":{"142":1,"143":1,"194":1,"195":1,"206":1,"207":1,"266":1,"275":1,"277":2,"292":1,"316":1,"330":1}}],["withresourcedescription",{"2":{"2":2,"21":1,"142":1,"194":1,"206":1,"292":1,"314":1,"316":1,"317":1,"319":1,"320":1,"321":1,"330":1}}],["withretry",{"2":{"68":2}}],["withrecovery",{"2":{"22":1,"177":1,"220":1,"266":1,"275":1,"278":1,"287":1}}],["withpromptcapabilities",{"2":{"143":1,"195":1,"207":1,"266":1,"275":1,"277":2,"292":1,"298":1}}],["withpromptargument",{"2":{"4":4,"296":2,"298":3}}],["withpromptdescription",{"2":{"4":2,"292":1,"296":1,"298":1}}],["withnumber",{"2":{"3":2,"20":2,"142":3,"182":2,"194":2,"246":2,"267":2,"335":2,"337":1,"338":1,"364":1}}],["withdescription",{"2":{"3":2,"16":1,"20":1,"26":1,"133":1,"134":1,"142":3,"162":1,"182":1,"183":2,"194":2,"195":3,"206":1,"216":1,"246":1,"251":1,"267":1,"292":1,"335":1,"340":1,"341":1,"342":1,"343":1,"345":1,"346":2,"350":1,"364":1,"367":2}}],["with",{"0":{"28":1,"29":1,"68":1,"118":1,"123":1,"126":1,"129":1,"130":1,"275":1,"340":1,"341":1,"346":1,"361":1,"362":1},"2":{"1":1,"2":1,"3":1,"4":1,"8":2,"9":1,"12":1,"13":2,"14":1,"16":1,"17":1,"22":1,"25":1,"26":1,"29":1,"30":1,"31":1,"39":1,"40":1,"41":1,"46":1,"48":1,"55":1,"57":1,"58":1,"63":1,"67":1,"68":2,"69":1,"74":1,"85":1,"88":1,"91":1,"99":1,"112":2,"116":1,"118":1,"121":1,"123":1,"124":1,"126":2,"127":1,"129":1,"132":1,"139":1,"140":2,"142":2,"146":1,"156":1,"162":1,"166":1,"167":1,"170":1,"177":1,"180":3,"185":2,"186":1,"187":1,"192":3,"194":2,"197":1,"200":1,"206":1,"207":1,"212":2,"216":3,"217":1,"219":1,"220":1,"238":2,"240":2,"241":2,"246":1,"249":1,"251":1,"266":3,"272":1,"273":1,"284":2,"286":1,"289":1,"290":1,"292":1,"293":1,"301":1,"303":3,"304":3,"306":1,"318":1,"319":1,"322":1,"334":1,"337":1,"339":2,"340":2,"341":2,"342":2,"344":4,"345":3,"346":3,"348":1,"350":1,"351":1,"352":1,"354":3,"355":1,"362":1,"364":1}}],["which",{"2":{"38":1,"47":1,"126":1}}],["while",{"2":{"6":1,"12":1,"109":1,"290":1}}],["whether",{"2":{"337":1}}],["where",{"2":{"29":1,"37":1,"39":1,"184":1,"204":1,"217":1,"226":1,"268":1,"295":1,"320":1}}],["when",{"0":{"111":1,"154":1,"269":1},"2":{"6":1,"7":1,"9":1,"38":1,"40":1,"45":1,"111":1,"145":1,"201":1,"212":1,"269":1,"341":1,"360":1}}],["why",{"0":{"13":1}}],["what",{"0":{"12":1,"18":1,"32":1,"76":1,"291":1},"2":{"41":1,"92":1,"95":1,"185":1,"231":1,"277":1,"303":1}}],["welcome",{"2":{"258":1}}],["we",{"2":{"212":1}}],["were",{"2":{"156":1,"200":1}}],["webreq",{"2":{"136":2}}],["website",{"2":{"28":1}}],["web",{"2":{"5":3,"29":1,"56":2,"80":1,"81":1,"136":2,"139":1,"140":2,"160":1,"161":1,"165":2,"166":1,"178":2,"190":1,"191":2,"192":2,"202":1,"217":1,"224":2,"282":1,"283":1}}],["weather",{"2":{"2":1,"102":2,"321":8}}],["pdf",{"2":{"360":1,"361":3,"362":2}}],["png",{"2":{"325":2}}],["pem",{"2":{"284":2}}],["persistent",{"2":{"201":1}}],["persistence",{"2":{"153":1}}],["personal",{"2":{"204":1}}],["person",{"2":{"16":1,"26":1}}],["perfect",{"2":{"139":1,"180":1,"191":1,"203":1,"313":1}}],["performed",{"2":{"341":1}}],["performoperation",{"2":{"219":1}}],["performance",{"0":{"171":1,"221":1},"1":{"172":1,"173":1,"174":1,"222":1,"223":1},"2":{"82":1,"136":6,"159":1,"167":1,"258":1,"298":4}}],["performclientoperations",{"2":{"62":2}}],["perform",{"2":{"3":2,"20":1,"38":1,"182":2,"219":1,"226":1,"246":1,"267":2,"269":1,"299":1,"333":1,"334":1,"335":2,"342":1,"349":1}}],["permissionfilter",{"2":{"260":5}}],["permission",{"0":{"260":1},"2":{"66":1,"67":1,"260":2}}],["permissions",{"2":{"34":1,"176":1,"177":1,"250":4,"251":4,"259":1,"260":1,"328":1}}],["per",{"0":{"250":1},"2":{"9":1,"177":1,"249":1}}],["pm",{"2":{"261":1}}],["pid",{"2":{"212":2}}],["pipes",{"2":{"172":1}}],["pipesnonostreamablehttpweb",{"2":{"115":1}}],["pipe",{"2":{"119":2,"173":1,"209":1}}],["p",{"2":{"188":1,"229":1}}],["public",{"2":{"140":2,"166":1}}],["put",{"2":{"125":2,"146":1}}],["purpose",{"2":{"7":2}}],["pp",{"2":{"105":5}}],["playground",{"2":{"248":1}}],["plain",{"2":{"206":2,"323":2,"326":1,"361":1}}],["placeholder",{"2":{"142":4,"143":5,"170":1,"194":1,"195":1,"206":1,"207":6,"310":2}}],["placeholders",{"2":{"4":1}}],["plugins",{"2":{"204":1}}],["plugin",{"2":{"180":1}}],["please",{"2":{"46":1,"292":1,"298":1,"299":2,"303":2,"306":5,"307":4,"309":4,"310":2}}],["pointing",{"2":{"360":1}}],["point",{"2":{"360":1}}],["points",{"2":{"306":1}}],["pointer",{"2":{"109":2}}],["polite",{"2":{"303":1}}],["potential",{"2":{"292":2,"298":1,"299":2,"310":2}}],["populated",{"2":{"157":1,"201":1}}],["populate",{"2":{"125":1}}],["pool",{"2":{"125":14}}],["pooling",{"0":{"125":1},"2":{"174":1,"222":1}}],["powered",{"2":{"167":1}}],["powerful",{"2":{"32":1,"244":1,"289":1}}],["pow",{"2":{"68":1}}],["portfolio",{"2":{"343":5}}],["ports",{"2":{"169":1}}],["port",{"2":{"34":1,"162":10,"169":4,"282":1,"283":1,"285":4}}],["possible",{"2":{"26":1}}],["post",{"2":{"3":1,"44":1,"145":7,"146":1,"148":1}}],["pagesize",{"2":{"344":2}}],["pagination",{"2":{"142":1}}],["pay",{"2":{"299":1}}],["paired",{"2":{"212":1}}],["panics",{"2":{"220":1,"278":2}}],["panic",{"2":{"183":1,"220":2,"275":1,"278":1,"287":1}}],["passing",{"2":{"212":1,"240":1}}],["passive",{"2":{"7":1}}],["passes",{"2":{"156":1,"200":1}}],["parts",{"2":{"319":4,"361":3}}],["particularly",{"2":{"226":1,"295":1}}],["paris",{"2":{"231":1}}],["parent",{"2":{"176":1,"204":1}}],["parsed",{"2":{"355":3}}],["parsedburi",{"2":{"320":1}}],["parsewithclaims",{"2":{"155":1}}],["parse",{"2":{"97":1,"108":2,"355":1}}],["param",{"2":{"67":1,"85":1}}],["params",{"2":{"30":5,"31":5,"45":1,"62":1,"63":1,"67":1,"69":2,"77":2,"85":1,"88":1,"89":1,"96":1,"100":1,"104":1,"105":1,"108":2,"119":1,"133":2,"134":3,"142":2,"143":2,"148":1,"150":1,"153":3,"182":2,"183":2,"185":3,"194":1,"206":2,"211":2,"214":3,"215":4,"251":1,"253":6,"292":2,"298":1,"299":3,"301":6,"303":2,"304":3,"306":2,"307":2,"309":3,"310":2,"316":1,"317":1,"319":2,"320":2,"321":2,"323":1,"324":1,"325":1,"326":2,"328":7,"329":3,"331":2,"351":6}}],["parameters",{"0":{"188":1,"229":1},"2":{"4":1,"39":1,"47":1,"67":1,"99":1,"188":1,"219":1,"228":1,"229":1,"237":1,"301":1,"318":1,"334":1,"337":6,"340":1,"348":2,"349":1,"354":2,"355":2}}],["parameter",{"0":{"301":1,"337":1,"348":1,"354":1},"2":{"3":1,"26":1,"36":1,"188":1,"219":1,"229":1,"237":1,"245":1,"319":1,"337":1,"339":1,"347":1,"348":1,"352":1,"354":2}}],["parameterized",{"2":{"3":1,"318":1}}],["package",{"2":{"16":1,"26":1,"30":1,"31":1,"39":1,"41":1,"57":1,"77":1,"117":1,"142":1,"162":1,"182":1,"185":1,"194":1,"206":1,"207":1,"211":1,"227":1,"238":1,"246":1,"267":1,"274":1,"292":1}}],["pattern",{"0":{"349":1},"2":{"94":3,"338":1,"346":1}}],["patterns",{"0":{"56":1,"83":1,"87":1,"147":1,"308":1,"328":1,"365":1},"1":{"84":1,"85":1,"86":1,"88":1,"89":1,"148":1,"149":1,"150":1,"309":1,"310":1,"366":1,"367":1},"2":{"9":1,"140":1,"159":1,"202":1,"206":1,"224":1,"292":1,"298":1,"299":2}}],["paths",{"2":{"35":1,"206":2}}],["path",{"2":{"2":1,"3":1,"28":1,"30":1,"40":1,"41":1,"50":1,"57":2,"77":1,"112":1,"117":1,"118":2,"197":1,"206":32,"210":1,"211":2,"212":2,"214":1,"215":1,"219":14,"222":2,"223":3,"248":7,"284":2,"346":29,"350":9}}],["practical",{"2":{"309":1}}],["practice",{"2":{"155":1,"169":1,"298":1}}],["practices",{"0":{"47":1,"237":1},"2":{"4":1,"106":1,"176":1,"296":1,"298":5,"304":1}}],["price",{"2":{"338":2,"341":3,"348":4,"355":4}}],["primary",{"2":{"334":1}}],["priority",{"2":{"310":1,"338":2}}],["prioritization",{"2":{"304":1}}],["privilege",{"2":{"176":1,"212":1}}],["println",{"2":{"64":1,"67":3,"69":2,"85":1,"106":1,"108":4,"119":3,"120":2,"130":2,"142":1,"143":1,"146":1,"162":1,"170":3,"194":1,"195":1,"207":1,"216":1,"238":1,"257":2,"266":2,"267":1,"286":1,"287":1}}],["print",{"2":{"30":1,"185":1}}],["printf",{"2":{"9":2,"16":1,"26":1,"30":4,"31":2,"41":6,"46":1,"62":4,"63":2,"64":1,"67":16,"68":1,"69":4,"71":1,"77":8,"85":3,"86":1,"93":3,"94":4,"96":8,"100":7,"102":3,"104":11,"106":4,"108":6,"109":5,"117":1,"119":5,"120":1,"122":1,"128":2,"130":1,"133":1,"136":3,"143":4,"162":2,"170":4,"182":1,"183":1,"185":1,"189":1,"194":2,"198":1,"207":1,"211":3,"216":2,"235":1,"251":2,"253":6,"257":2,"266":2,"286":4,"292":1}}],["proxy",{"2":{"321":1}}],["products",{"2":{"320":1,"340":1,"341":4,"342":5}}],["product",{"2":{"304":2,"338":1,"340":1,"341":5,"342":2,"364":2}}],["productivity",{"2":{"204":1}}],["production",{"0":{"265":1,"266":1},"1":{"266":1},"2":{"32":1,"177":1,"186":1,"190":1,"244":1,"266":1}}],["professional",{"2":{"301":1,"303":1}}],["profile",{"2":{"2":2,"142":2,"319":3,"330":1,"367":2}}],["problems",{"2":{"299":1}}],["progressdata",{"2":{"199":1}}],["progressnotification",{"2":{"108":1}}],["progress",{"2":{"108":9,"109":2,"131":1,"192":1,"194":4,"199":1,"263":3,"366":1}}],["programming",{"2":{"4":1,"296":1,"298":1}}],["propschema",{"2":{"101":2}}],["properties",{"2":{"101":3,"185":1,"228":1,"238":1,"270":1,"337":1}}],["proper",{"2":{"9":1,"34":1,"47":1,"60":1,"65":1,"170":1,"177":1,"278":1,"286":1,"287":1,"327":1}}],["providing",{"2":{"40":1,"179":1,"290":1,"291":1}}],["provided",{"2":{"43":1,"46":1,"187":1,"299":1,"304":1}}],["provides",{"2":{"6":1,"12":1,"55":1,"75":1,"110":1,"115":1,"138":1,"139":1,"240":1,"339":1,"347":1,"354":1}}],["provide",{"2":{"3":2,"4":1,"37":1,"45":1,"92":1,"99":1,"103":1,"111":1,"127":1,"132":1,"237":1,"245":1,"277":4,"288":1,"294":1,"295":1,"298":2,"299":1,"303":1,"306":3,"307":1,"309":2,"310":1,"312":1,"333":1,"364":1,"366":1}}],["processuser",{"2":{"354":1}}],["processuserquery",{"2":{"88":1}}],["processresponse",{"2":{"345":2}}],["processrequest",{"2":{"153":1,"345":2}}],["processchunk",{"2":{"223":1}}],["processwithmcp",{"2":{"183":2}}],["processwithstate",{"2":{"9":1}}],["processembedded",{"2":{"161":1}}],["processedat",{"2":{"341":2,"342":1,"345":1}}],["processed",{"2":{"133":1,"194":1,"223":2,"345":1,"358":1,"366":1}}],["processes",{"2":{"38":1,"204":1,"212":1}}],["processtesting",{"2":{"115":1}}],["processtoolresult",{"2":{"85":1}}],["processnotification",{"2":{"109":2}}],["processor",{"2":{"106":4}}],["processprompt",{"2":{"105":2,"106":2}}],["processing",{"0":{"105":1},"2":{"47":1,"143":1,"183":1,"192":1,"194":1,"197":1,"263":1,"286":1}}],["process",{"0":{"51":1,"63":1,"82":1,"120":1,"132":1,"133":1,"134":1,"167":1,"179":1,"182":1,"220":1,"241":1},"1":{"133":1,"134":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"14":1,"23":1,"39":1,"51":2,"53":1,"56":1,"63":1,"67":1,"82":1,"85":1,"96":1,"112":1,"119":6,"120":1,"132":2,"133":1,"153":1,"158":1,"160":1,"161":1,"169":2,"172":1,"173":1,"174":1,"176":2,"178":1,"179":2,"180":2,"182":1,"183":1,"184":1,"185":1,"189":1,"202":1,"209":2,"212":4,"223":2,"224":1,"235":1,"241":3,"243":1,"345":3,"347":1,"351":1,"354":1}}],["pros",{"2":{"5":3,"176":1}}],["prompttemplates",{"2":{"310":2}}],["prompttemplate",{"2":{"310":2}}],["prompttype",{"2":{"307":3}}],["promptname",{"2":{"105":2}}],["promptmessage",{"2":{"105":4,"106":2,"292":1,"298":1,"299":1,"301":1,"303":3,"304":3,"306":1,"307":1,"309":1,"310":1}}],["promptprocessor",{"2":{"105":6}}],["prompt",{"0":{"104":1,"105":1,"106":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"308":1},"1":{"296":1,"298":1,"299":1,"301":1,"309":1,"310":1},"2":{"4":2,"18":1,"32":1,"41":2,"67":1,"104":14,"105":1,"106":6,"145":1,"185":4,"188":1,"228":3,"229":1,"238":3,"277":1,"292":1,"296":2,"298":2,"301":3,"306":1,"307":2,"309":9}}],["promptscapability",{"2":{"63":1}}],["prompts",{"0":{"4":1,"103":1,"294":1,"309":1,"310":1},"1":{"104":1,"105":1,"106":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1},"2":{"4":2,"7":1,"13":1,"14":1,"18":1,"32":1,"61":1,"63":1,"73":1,"75":1,"76":1,"90":1,"91":1,"103":1,"104":12,"145":3,"170":1,"237":2,"275":1,"277":2,"288":1,"290":1,"291":1,"294":1,"295":1,"332":1,"368":1}}],["project",{"2":{"2":2,"15":1,"21":2,"314":2,"316":2,"330":1}}],["protocolversion",{"2":{"30":1,"31":1,"45":1,"63":1,"182":1,"183":1,"185":1,"211":1,"214":1,"215":1}}],["protocols",{"2":{"8":1}}],["protocol",{"0":{"1":1},"1":{"2":1,"3":1,"4":1,"5":1},"2":{"1":1,"5":1,"6":1,"8":2,"12":1,"14":1,"15":1,"30":1,"31":1,"66":3,"67":3,"161":1,"185":1,"211":1,"217":1}}],["predictable",{"2":{"341":1}}],["predictive",{"2":{"299":2}}],["predetermined",{"2":{"315":1}}],["presented",{"2":{"306":1}}],["preview",{"2":{"299":2}}],["previous",{"2":{"212":1}}],["prevention",{"2":{"310":1}}],["preventing",{"2":{"245":1}}],["prevents",{"2":{"212":1,"242":1}}],["prevent",{"2":{"177":1,"248":1,"278":1}}],["prefs",{"2":{"153":1}}],["preconfigured",{"0":{"126":1},"2":{"126":1}}],["pre",{"2":{"2":1,"125":1}}],["human",{"2":{"314":1}}],["hints",{"2":{"364":1}}],["histogram",{"2":{"257":2}}],["higher",{"2":{"292":1}}],["high",{"2":{"14":1,"82":1,"136":5,"167":2,"338":1}}],["html",{"2":{"206":2}}],["httpsession",{"2":{"154":6}}],["httpsessionmanager",{"2":{"154":6}}],["httpserver",{"2":{"142":2,"143":2,"162":2,"169":2,"170":2,"282":2,"284":2,"285":2}}],["https",{"2":{"44":1,"123":1,"124":1,"126":1,"177":1,"321":1,"355":2}}],["httpreq",{"2":{"44":5,"352":3}}],["httptransport",{"2":{"31":2,"58":1}}],["http",{"0":{"177":1,"282":1,"352":1},"2":{"5":4,"8":1,"31":3,"44":4,"56":2,"57":1,"58":2,"80":1,"81":1,"84":1,"89":1,"117":1,"121":1,"122":1,"123":2,"124":1,"128":1,"129":2,"137":2,"140":2,"142":1,"146":12,"155":11,"156":2,"158":1,"160":1,"166":1,"172":2,"173":1,"174":1,"190":1,"195":1,"197":4,"200":2,"202":1,"224":1,"242":1,"282":4,"283":1,"284":1,"285":1,"321":1,"352":3,"355":2}}],["hypothetical",{"2":{"155":1}}],["healthy",{"2":{"71":4,"146":1}}],["health",{"0":{"71":1},"2":{"71":2,"145":2}}],["headers",{"0":{"156":1,"157":1,"200":1,"201":1},"1":{"157":1,"201":1},"2":{"58":1,"59":1,"130":5,"137":14,"156":2,"157":9,"194":7,"197":1,"200":2,"201":10,"352":7}}],["header",{"2":{"44":3,"58":2,"59":2,"146":2,"155":3,"157":1,"194":1,"201":1,"352":2}}],["here",{"2":{"39":2,"41":1,"77":1,"112":2,"188":1,"229":1,"233":1,"238":1,"292":1,"303":1,"346":1,"362":1}}],["hellohandler",{"2":{"16":2,"26":2}}],["hello",{"0":{"26":1},"2":{"16":4,"26":8,"28":3,"30":2,"31":1,"106":1,"134":2,"303":1,"324":1}}],["helps",{"2":{"286":1}}],["helper",{"0":{"355":1},"2":{"97":1,"130":1,"142":2,"143":1,"170":1,"194":1,"195":1,"206":1,"207":1,"237":1,"238":1,"347":1,"348":1,"349":1,"354":1}}],["helpful",{"2":{"41":1,"185":2,"188":1,"228":1,"229":1,"238":1,"270":1,"303":1}}],["help",{"0":{"24":1},"2":{"4":1,"15":1,"294":1,"303":1,"364":1}}],["h",{"2":{"39":3,"41":1,"43":2,"44":5,"46":2,"109":2,"112":1,"185":1,"187":2,"257":24,"258":10,"331":10,"352":2}}],["hours",{"2":{"261":1}}],["hour",{"2":{"222":1,"261":4}}],["hostname",{"2":{"212":1}}],["home",{"2":{"206":1}}],["hooks",{"0":{"256":1,"257":1,"258":1},"1":{"257":1,"258":1},"2":{"9":1,"244":1,"251":5,"266":1,"275":1,"286":9,"288":1,"291":1,"311":1,"332":1,"368":1}}],["how",{"0":{"209":1},"2":{"0":1,"5":1,"37":1,"55":1,"74":1,"77":1,"91":1,"114":1,"212":1,"225":1,"272":1,"288":1,"289":1,"293":1,"311":1}}],["happens",{"2":{"62":1}}],["have",{"2":{"18":1,"32":1,"315":1,"334":1}}],["handling",{"0":{"46":1,"65":1,"67":1,"85":1,"108":1,"119":1,"131":1,"189":1,"218":1,"219":1,"235":1,"287":1,"301":1,"327":1,"329":1},"1":{"66":1,"67":1,"68":1,"69":1,"219":1,"220":1,"328":1,"329":1},"2":{"8":1,"36":1,"46":1,"47":1,"54":1,"60":1,"65":1,"85":1,"90":1,"109":1,"170":1,"207":1,"209":1,"220":1,"266":1,"287":2,"327":1}}],["handlejsontool",{"2":{"358":1}}],["handlejsonresource",{"2":{"324":1}}],["handlevalidatedtool",{"2":{"354":1}}],["handlehttprequest",{"2":{"352":1}}],["handlemulticontenttool",{"2":{"359":1}}],["handlemultiformatresource",{"2":{"326":1}}],["handlemetrics",{"2":{"146":2}}],["handlemessagenotification",{"2":{"108":2}}],["handleimageresource",{"2":{"325":1}}],["handleweatherdata",{"2":{"321":2}}],["handleappconfig",{"2":{"317":2}}],["handleanalyzelogs",{"2":{"292":2}}],["handlegetprofile",{"2":{"367":1}}],["handlegetannotatedresourcetool",{"2":{"362":1}}],["handlegetresourcelinktool",{"2":{"360":1}}],["handlegettime",{"2":{"292":2}}],["handlegetuser",{"2":{"142":2,"157":1}}],["handlelongrunningtool",{"2":{"263":1}}],["handlelargefile",{"2":{"223":1}}],["handlelistfiles",{"2":{"206":2}}],["handlelistusers",{"2":{"146":1}}],["handleecho",{"2":{"162":2}}],["handleupdateuser",{"2":{"146":1}}],["handleuser",{"2":{"330":1}}],["handleuserprofile",{"2":{"319":2}}],["handleusersapi",{"2":{"146":2}}],["handleuserresource",{"2":{"142":2}}],["handleflexibleprompt",{"2":{"301":1}}],["handlefilecontent",{"2":{"206":2}}],["handlefileupload",{"2":{"146":1}}],["handlefunc",{"2":{"146":4}}],["handlecreatefile",{"2":{"346":2,"350":2}}],["handlecreateuserapi",{"2":{"146":1}}],["handlecreateuser",{"2":{"142":2,"247":1}}],["handleconditionalprompt",{"2":{"309":1}}],["handleconversationprompt",{"2":{"303":1}}],["handleconfig",{"2":{"292":2,"330":1}}],["handlecodereview",{"2":{"298":2}}],["handlecurrentmetrics",{"2":{"194":2}}],["handlecalculatetyped",{"2":{"246":2}}],["handlecalculate",{"2":{"182":2,"267":2,"349":1}}],["handleclienterrors",{"2":{"67":3,"85":1}}],["handletexttool",{"2":{"357":1}}],["handletextresource",{"2":{"323":1}}],["handletemplateprompt",{"2":{"310":1}}],["handletoolwitherrors",{"2":{"219":1,"363":1}}],["handletoolupdatenotification",{"2":{"108":2}}],["handletableaccess",{"2":{"7":1}}],["handleprogressnotification",{"2":{"108":2}}],["handlenotifications",{"2":{"109":2}}],["handlenotification",{"2":{"108":2,"131":2}}],["handle",{"2":{"37":1,"40":1,"46":1,"47":1,"108":1,"128":1,"146":1,"160":1,"189":1,"207":1,"219":1,"220":1,"235":1,"237":1,"249":1,"328":1,"346":1,"350":1,"352":1}}],["handlerolebasedprompt",{"2":{"304":1}}],["handlereadfile",{"2":{"346":2}}],["handlereadme",{"2":{"330":1}}],["handlereadmefile",{"2":{"316":2}}],["handlerealtimetool",{"2":{"198":1}}],["handleresource",{"2":{"331":1}}],["handleresourcewithtimeout",{"2":{"329":1}}],["handleresourcewitherrors",{"2":{"328":1}}],["handleresourceembeddedprompt",{"2":{"306":1}}],["handleresourceupdatenotification",{"2":{"108":2}}],["handlerfunc",{"2":{"155":1}}],["handlers",{"0":{"157":1,"201":1,"342":1,"347":1},"1":{"348":1,"349":1,"350":1,"351":1,"352":1},"2":{"109":14,"131":7,"156":2,"157":1,"200":2,"201":1,"228":1,"242":1,"278":1,"347":1}}],["handler",{"0":{"39":1,"349":1},"2":{"16":1,"26":1,"39":1,"40":3,"41":2,"45":2,"46":1,"48":1,"109":7,"131":12,"134":4,"146":2,"155":2,"157":1,"185":1,"186":1,"187":1,"201":1,"241":1,"246":1,"330":2,"342":3}}],["handlesubscribeupdates",{"2":{"195":1}}],["handlesubscriptions",{"2":{"108":1}}],["handlesearchdatabase",{"2":{"364":1}}],["handlesearchdocumentstool",{"2":{"361":1}}],["handlesearchusers",{"2":{"142":2}}],["handlesendmessage",{"2":{"195":1}}],["handlesystemmonitor",{"2":{"194":2}}],["handlestreamingtool",{"2":{"366":1}}],["handlestreamdata",{"2":{"194":2,"201":1}}],["handlestatelesstool",{"2":{"153":1}}],["handlestatus",{"2":{"146":2}}],["handlestdioerrors",{"2":{"119":1}}],["handles",{"2":{"9":2,"199":1}}],["handledatabasequery",{"2":{"351":1}}],["handledatabaserecord",{"2":{"320":2}}],["handledataanalysis",{"2":{"299":1}}],["handledynamicresourceprompt",{"2":{"307":1}}],["handledocumentedit",{"2":{"195":1}}],["handledeleteuser",{"2":{"146":1,"367":1}}],["handled",{"2":{"8":1,"62":1}}],["handlequery",{"2":{"7":1}}],["haspermissionfortool",{"2":{"260":2}}],["haspermission",{"2":{"251":1,"328":1}}],["hasprefix",{"2":{"97":1,"155":1,"206":3,"248":1,"351":1}}],["has",{"2":{"2":1,"9":1,"111":1,"115":1,"160":1}}],["btc",{"2":{"343":1}}],["b",{"2":{"309":2}}],["blocks",{"2":{"281":1}}],["blob",{"2":{"96":3,"97":2,"325":1}}],["broadcastsystemmessage",{"2":{"264":1}}],["broadcast",{"2":{"199":1}}],["broken",{"2":{"119":2}}],["browsers",{"2":{"204":1}}],["browser",{"2":{"81":1,"165":1,"192":1,"283":1}}],["break",{"2":{"41":1,"68":2,"86":1,"101":1,"109":1,"130":1,"185":1,"220":1,"223":1}}],["bound",{"2":{"342":1,"351":1}}],["both",{"2":{"341":1,"351":1}}],["boolean",{"2":{"101":2,"337":1}}],["bool",{"2":{"68":1,"71":2,"72":2,"98":1,"101":1,"120":1,"124":1,"130":1,"136":3,"142":1,"154":1,"183":1,"206":2,"222":1,"247":1,"248":1,"250":1,"260":1,"261":3,"309":3,"320":1,"341":1,"346":1,"348":1,"351":1}}],["body",{"2":{"44":2,"321":4,"352":6}}],["boilerplate",{"2":{"13":1,"14":1,"245":1,"290":1}}],["bind",{"2":{"351":2}}],["bindarguments",{"2":{"348":1,"351":1,"355":1}}],["binding",{"2":{"348":1,"355":1}}],["bin",{"2":{"215":1}}],["binary",{"0":{"325":1},"2":{"2":1,"97":2,"325":1}}],["bitcoin",{"2":{"343":1}}],["bit",{"2":{"69":1}}],["bidirectional",{"2":{"37":1,"167":1,"184":1,"226":1,"242":1,"268":1}}],["byte",{"2":{"97":2,"155":2,"223":1,"346":2,"350":3}}],["bytes",{"2":{"44":2,"96":1,"346":1}}],["by",{"0":{"78":1},"1":{"79":1,"80":1,"81":1,"82":1},"2":{"28":2,"39":1,"40":1,"47":1,"62":1,"116":1,"157":1,"173":3,"182":1,"201":1,"209":1,"212":1,"246":1,"295":1,"313":1,"320":1,"340":1,"349":1,"364":1}}],["bandwidth",{"2":{"173":1}}],["batch",{"0":{"102":1},"2":{"143":1}}],["balanced",{"2":{"80":1,"166":1,"282":1}}],["balancingno",{"2":{"161":1}}],["balancing",{"2":{"5":1,"140":1}}],["bash",{"2":{"215":1}}],["base",{"2":{"197":2,"206":3}}],["baseurl",{"2":{"125":2,"130":5,"137":12}}],["base64",{"2":{"93":1,"97":1,"234":1,"325":2,"346":3,"350":4}}],["basedir",{"2":{"206":2}}],["based",{"0":{"169":1,"260":1,"261":1,"267":1,"285":1,"310":1,"316":1,"339":1},"1":{"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1},"2":{"2":1,"4":1,"5":1,"31":1,"81":1,"104":1,"136":1,"137":1,"159":1,"162":1,"165":2,"183":1,"190":1,"192":2,"206":1,"247":1,"259":1,"269":1,"283":2,"285":2,"298":1,"301":1,"303":1,"304":1,"307":1,"309":1,"340":1}}],["basics",{"0":{"54":1,"272":1},"1":{"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1},"2":{"76":1,"90":1,"113":1,"158":1,"271":1,"288":1,"291":1,"293":1}}],["basic",{"0":{"30":1,"93":1,"96":1,"100":1,"104":1,"108":1,"112":1,"117":1,"122":1,"128":1,"133":1,"142":1,"182":1,"194":1,"206":1,"246":1,"270":1,"274":1,"296":1,"298":1,"314":1,"335":1,"349":1},"1":{"31":1},"2":{"18":1,"20":1,"58":1,"59":1,"182":1,"267":1,"273":1,"274":1,"289":1,"351":1}}],["backward",{"2":{"345":1,"348":1}}],["backup",{"2":{"261":1}}],["backofffactor",{"2":{"68":3}}],["backoff",{"0":{"68":1},"2":{"47":1,"68":1,"86":4,"130":2}}],["background",{"2":{"30":1,"31":1,"40":1,"41":1,"62":1,"64":2,"67":2,"69":2,"77":1,"84":1,"88":1,"89":1,"109":1,"117":1,"118":1,"119":1,"120":1,"122":1,"123":1,"124":1,"126":1,"128":2,"129":1,"130":1,"131":1,"133":1,"134":1,"182":1,"183":1,"185":1,"207":1,"211":1,"266":1}}],["back",{"2":{"3":1,"88":1,"162":1}}],["beginner",{"2":{"309":2}}],["begin",{"2":{"303":1}}],["behavior",{"2":{"188":1,"229":1,"237":1,"256":1,"275":1,"310":2}}],["bearer",{"2":{"128":1,"129":1,"137":2,"155":2}}],["before",{"2":{"47":1,"67":1,"92":1,"120":1,"237":1}}],["better",{"2":{"18":1}}],["between",{"2":{"4":1,"12":1,"160":1,"191":1,"261":1,"294":1,"354":1}}],["benefits",{"2":{"8":1,"241":1}}],["best",{"0":{"47":1,"237":1},"2":{"4":1,"5":3,"79":1,"80":1,"81":1,"82":1,"106":1,"164":1,"165":1,"166":1,"167":1,"176":1,"281":1,"282":1,"283":1,"296":1,"298":6,"304":1}}],["be",{"2":{"2":1,"4":1,"21":1,"26":1,"67":1,"99":1,"169":1,"197":1,"219":1,"295":1,"298":1,"303":1,"306":1,"313":1,"354":2}}],["bug",{"2":{"310":5}}],["bugs",{"2":{"298":1}}],["burst",{"2":{"254":5,"266":1}}],["built",{"2":{"220":1}}],["builddynamicprompt",{"2":{"301":1}}],["builder",{"2":{"223":1,"299":1,"307":1,"309":1}}],["buildconversation",{"2":{"105":1}}],["build",{"2":{"7":1,"15":1,"32":1,"48":4,"74":1,"158":1,"190":1,"202":1,"271":1,"289":1,"290":1,"298":1,"299":1,"301":1,"306":1,"307":1,"311":1}}],["building",{"0":{"74":1,"289":1},"1":{"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"290":1,"291":1,"292":1,"293":1},"2":{"0":1,"13":1,"110":1}}],["buffer",{"2":{"223":3}}],["buffering",{"2":{"174":1}}],["buffers",{"2":{"173":1}}],["businesshooks",{"2":{"258":4,"266":1}}],["business",{"0":{"258":1},"2":{"7":1,"8":1,"14":1,"310":1,"363":1}}],["but",{"2":{"2":1,"47":1,"309":1}}],["uid",{"2":{"212":1}}],["utilities",{"2":{"164":2,"204":2}}],["util",{"2":{"138":1}}],["utf",{"2":{"3":1,"350":4}}],["url+",{"2":{"59":1}}],["url",{"2":{"58":1,"197":1,"317":2,"321":1,"352":3,"355":5,"362":1}}],["url=sqlite",{"2":{"57":1}}],["uristr",{"2":{"307":3}}],["uris",{"2":{"307":1,"313":1,"315":1}}],["uri=",{"2":{"253":3}}],["uri",{"0":{"319":1},"2":{"2":1,"4":1,"77":4,"93":1,"94":1,"96":9,"97":6,"98":8,"106":1,"134":5,"142":9,"143":5,"194":2,"206":9,"253":3,"257":1,"292":2,"299":1,"306":1,"307":4,"314":1,"316":2,"317":2,"318":1,"319":6,"320":3,"321":3,"323":2,"324":2,"325":2,"326":4,"328":10,"329":4,"330":2,"331":2,"360":1,"361":1}}],["usd",{"2":{"338":1,"341":1,"343":2}}],["usually",{"2":{"67":1}}],["usage",{"0":{"104":1,"174":1,"222":1},"2":{"41":1,"68":1,"94":1,"109":1,"134":1,"136":1,"137":1,"183":1,"187":1,"298":1}}],["using",{"0":{"103":1},"1":{"104":1,"105":1,"106":1},"2":{"38":1,"40":1,"76":1,"121":1,"185":1,"199":1,"209":1,"225":1,"228":1,"238":1,"242":1,"268":1,"269":1,"270":1,"339":1,"346":1,"349":1}}],["useful",{"2":{"226":1,"295":1,"339":1,"360":1}}],["used",{"2":{"169":1,"306":1}}],["uses",{"2":{"7":1,"51":1,"155":1,"185":2,"270":1,"344":1}}],["usertool",{"2":{"367":2}}],["userdata",{"2":{"355":2}}],["userlevel",{"2":{"309":3}}],["userrole",{"2":{"303":2,"367":2}}],["userresources",{"2":{"94":2}}],["userresource",{"2":{"2":1}}],["usercreateoutput",{"2":{"247":2}}],["usercreateinput",{"2":{"247":2}}],["useragent",{"2":{"157":1,"194":1,"201":1}}],["usermessage",{"2":{"41":4,"105":2,"185":3}}],["userid",{"2":{"9":1,"142":9,"153":4,"154":4,"155":2,"250":4,"251":1,"319":2}}],["user",{"0":{"304":1},"2":{"2":3,"12":1,"41":2,"94":3,"105":2,"123":1,"129":1,"142":43,"143":4,"150":1,"153":1,"155":7,"157":1,"164":1,"165":1,"185":1,"192":1,"194":1,"201":1,"204":1,"212":2,"219":1,"231":1,"247":9,"251":3,"255":4,"258":2,"260":3,"269":1,"298":1,"299":1,"301":1,"303":4,"304":3,"306":1,"307":1,"309":3,"310":4,"319":10,"330":2,"337":2,"344":1,"355":2,"359":1,"367":5}}],["userstore",{"2":{"155":5}}],["users",{"2":{"2":2,"4":1,"142":11,"146":1,"148":1,"149":1,"206":1,"237":1,"294":1,"319":3,"320":3,"330":1}}],["use",{"0":{"140":1,"180":1,"192":1,"204":1,"269":1},"2":{"2":1,"3":1,"4":2,"7":3,"9":1,"18":1,"24":1,"28":1,"29":1,"31":1,"34":1,"36":1,"41":1,"47":3,"51":1,"61":1,"62":1,"73":1,"77":1,"91":1,"102":1,"104":1,"114":1,"117":1,"118":1,"122":1,"123":1,"124":1,"126":1,"128":1,"129":1,"133":1,"137":1,"153":1,"155":1,"157":1,"159":1,"164":1,"165":1,"166":1,"167":1,"169":1,"176":1,"177":1,"182":1,"183":3,"186":1,"194":1,"198":1,"201":1,"206":1,"212":1,"217":1,"222":1,"227":1,"228":1,"236":1,"237":2,"275":1,"309":1,"310":3,"318":1,"319":1,"329":1,"340":1,"342":1,"345":1,"355":1,"364":1}}],["uptime",{"2":{"146":1,"292":1}}],["upload",{"2":{"146":1}}],["update",{"2":{"126":1,"154":1,"183":3,"194":1,"198":1,"199":1}}],["updated",{"2":{"108":4,"131":2,"183":1}}],["updates",{"2":{"5":2,"165":1,"191":1,"192":1,"194":2,"195":3,"262":1,"283":1,"366":1}}],["up",{"2":{"25":1}}],["under",{"2":{"367":1}}],["understand",{"2":{"224":1,"288":1}}],["understanding",{"2":{"0":1,"7":1,"60":1,"286":1}}],["until",{"2":{"281":1}}],["unregistersession",{"2":{"264":1}}],["unsafe",{"2":{"219":1}}],["unsupported",{"0":{"52":1,"242":1},"2":{"66":1,"67":1,"89":1}}],["unless",{"2":{"212":1}}],["unlock",{"2":{"71":1,"72":2,"89":1,"98":1,"109":2,"130":3,"131":1,"154":2,"250":2,"254":1,"264":2,"331":1}}],["unauthorized",{"2":{"120":1}}],["unavailable",{"2":{"46":1}}],["unmarshal",{"2":{"97":1,"108":2}}],["unmarshaling",{"2":{"8":1}}],["unexpectedly",{"2":{"119":1}}],["unexpected",{"2":{"67":1,"85":1,"119":1}}],["unknown",{"2":{"64":1,"67":1,"84":1,"101":1,"108":1,"137":1,"182":1,"183":1,"310":1,"349":1}}],["unified",{"2":{"307":1}}],["unix",{"2":{"146":1,"198":1,"264":2,"292":3,"324":1,"358":1}}],["unixnano",{"2":{"142":1}}],["units",{"2":{"3":1}}],["unique",{"2":{"2":1,"314":1}}],["omitempty",{"2":{"340":3,"344":1,"346":5}}],["octet",{"2":{"206":1,"361":1}}],["oauthconfig",{"2":{"124":1}}],["oauth",{"2":{"124":1}}],["objects",{"2":{"157":1,"201":1}}],["object",{"2":{"101":2,"185":1,"228":1,"238":1,"270":1,"301":1,"337":2,"352":1}}],["o",{"0":{"346":1},"2":{"48":2,"216":3,"346":1}}],["os",{"2":{"41":3,"117":1,"118":1,"137":1,"162":3,"169":2,"206":4,"207":6,"216":2,"219":2,"220":5,"223":1,"261":1,"266":3,"285":2,"286":2,"316":1,"317":2,"321":1,"325":1,"346":4,"350":1}}],["overall",{"2":{"298":1,"307":1}}],["over",{"2":{"212":1,"290":1,"345":1}}],["overview",{"0":{"38":1,"75":1,"115":1,"160":1,"226":1,"290":1},"2":{"299":1}}],["overhead",{"2":{"5":1,"13":1,"133":1,"161":1,"172":1,"174":1,"179":1,"180":1,"241":1}}],["other",{"2":{"30":1,"39":1,"43":1,"157":2,"187":1,"194":1,"201":2,"212":1,"259":1,"293":1,"312":1,"360":1}}],["ok",{"2":{"26":2,"30":2,"41":2,"43":2,"44":2,"101":14,"108":2,"109":2,"137":6,"155":2,"182":2,"183":2,"185":4,"187":2,"267":2,"292":2,"298":2,"301":6,"307":2,"309":2,"352":2}}],["opportunities",{"2":{"299":1}}],["optimizations",{"2":{"298":1}}],["optimization",{"0":{"221":1},"1":{"222":1,"223":1}}],["optimized",{"2":{"115":1,"160":1}}],["optional",{"2":{"185":1,"188":5,"195":1,"212":1,"228":1,"229":5,"238":1,"273":1,"301":1,"344":1,"348":1,"352":1,"354":1,"355":1}}],["option",{"2":{"138":1,"212":1}}],["options",{"0":{"22":1,"23":1,"159":1,"197":1,"275":1,"284":1},"1":{"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1},"2":{"22":1,"118":1,"120":5,"123":1,"126":1,"129":1,"137":8,"197":1,"212":1,"272":1,"275":1,"284":3}}],["operator",{"2":{"260":3}}],["operation",{"2":{"3":1,"20":1,"61":1,"62":1,"66":2,"67":3,"68":2,"69":2,"102":1,"182":8,"183":3,"195":1,"219":4,"246":8,"248":2,"263":1,"267":2,"287":1,"335":2,"346":1,"349":5,"357":1,"363":1}}],["operations",{"0":{"91":1,"102":1,"346":1,"350":1},"1":{"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1},"2":{"3":2,"9":1,"18":1,"20":1,"53":1,"62":1,"73":1,"74":1,"76":1,"90":1,"128":1,"192":1,"246":1,"258":1,"329":1,"335":1,"346":4,"366":2}}],["openfile",{"2":{"216":1}}],["openaihandler",{"2":{"187":2}}],["openaisamplinghandler",{"2":{"43":4,"187":4}}],["openai",{"0":{"43":1,"187":1},"2":{"39":2,"43":16,"111":1,"187":18}}],["opens",{"2":{"29":1,"217":1}}],["open",{"2":{"12":1,"222":1,"223":1}}],["outliers",{"2":{"106":1,"299":1}}],["out",{"2":{"18":1,"24":1,"53":1,"67":1,"69":1,"119":1,"219":1,"243":1}}],["outputs",{"2":{"4":1,"339":1}}],["output",{"0":{"341":1,"343":1},"2":{"3":1,"5":1,"116":1,"160":1,"203":1,"246":3,"247":2,"281":1,"339":1,"341":4,"342":2,"343":1,"346":1}}],["onresourceread",{"2":{"257":1}}],["onresourceupdate",{"2":{"131":1}}],["ontoolcall",{"2":{"257":1,"258":1}}],["ontoolupdate",{"2":{"131":1}}],["onserverstop",{"2":{"257":1}}],["onserverstart",{"2":{"257":1}}],["onsessionend",{"2":{"9":1,"257":1,"258":1}}],["onsessionstart",{"2":{"9":1,"257":1,"258":1}}],["onmessage",{"2":{"131":1}}],["onprogress",{"2":{"131":1}}],["once",{"2":{"72":1,"95":1}}],["oneof=read",{"2":{"248":1}}],["oneof=add",{"2":{"246":1}}],["one",{"2":{"5":1,"52":1,"161":1,"242":1}}],["on",{"2":{"2":1,"4":1,"8":1,"14":1,"24":1,"49":1,"68":1,"104":1,"136":1,"137":1,"142":1,"143":1,"146":1,"153":1,"159":1,"162":3,"170":2,"183":1,"194":1,"195":1,"206":1,"239":1,"247":1,"258":1,"259":1,"269":1,"282":1,"283":1,"285":2,"298":6,"299":1,"301":1,"303":1,"304":1,"307":1,"309":1,"313":1,"348":1}}],["only✅",{"2":{"161":2}}],["only",{"2":{"2":2,"5":1,"92":1,"110":1,"212":2,"261":3,"268":1,"312":1,"351":1,"367":3}}],["orders",{"2":{"320":1}}],["original",{"2":{"156":1,"200":1,"341":1}}],["oriented",{"2":{"3":1,"303":1}}],["orchestration",{"2":{"7":1}}],["or",{"2":{"2":3,"3":1,"4":1,"18":1,"21":1,"38":1,"39":1,"52":1,"64":1,"108":1,"155":1,"166":1,"188":2,"206":1,"212":1,"219":1,"226":1,"229":2,"255":1,"259":1,"269":1,"277":1,"292":1,"295":1,"299":1,"306":1,"312":1,"313":2,"333":1,"348":1,"355":2,"363":1}}],["off",{"2":{"261":1}}],["offers",{"2":{"241":1,"348":1}}],["offset",{"2":{"142":7,"148":1,"149":1}}],["of",{"2":{"0":1,"2":1,"6":1,"14":1,"16":1,"26":1,"41":1,"47":1,"51":1,"54":1,"55":1,"138":1,"157":1,"179":1,"185":1,"187":1,"201":1,"212":2,"223":1,"231":2,"241":1,"273":1,"278":1,"299":1,"306":2,"309":2,"312":1,"322":1,"333":1,"337":2,"343":3,"364":1}}],["drop",{"2":{"212":1,"264":1}}],["dropping",{"2":{"212":1}}],["driven",{"2":{"192":1}}],["dashboards",{"2":{"192":2}}],["dashboard",{"2":{"165":1}}],["datatype",{"2":{"251":2}}],["dataseturi",{"2":{"106":2,"299":3}}],["dataset",{"2":{"4":2,"106":2,"299":11}}],["databases",{"2":{"18":1,"312":1}}],["database",{"0":{"320":1,"351":1},"2":{"2":2,"7":3,"57":1,"142":1,"153":1,"164":1,"204":1,"222":1,"247":1,"261":1,"313":1,"317":2,"319":1,"320":6,"364":2}}],["data",{"0":{"299":1,"306":1},"2":{"2":2,"3":1,"4":3,"12":1,"18":1,"21":2,"32":1,"47":1,"81":1,"92":1,"97":7,"106":4,"133":1,"140":1,"142":1,"150":1,"154":2,"165":1,"192":2,"194":7,"195":3,"222":2,"234":2,"248":1,"251":7,"260":1,"264":2,"277":1,"288":1,"291":1,"299":3,"304":3,"312":2,"318":1,"319":1,"320":3,"321":1,"324":2,"325":1,"326":5,"328":2,"329":2,"331":7,"343":1,"345":3,"346":6,"348":1,"350":5,"355":1,"358":1,"359":3,"360":1,"368":1}}],["duplicating",{"2":{"360":1}}],["dump",{"2":{"261":1}}],["duration=",{"2":{"253":4}}],["duration",{"2":{"64":1,"68":3,"69":1,"71":3,"86":1,"98":2,"130":1,"143":6,"194":8,"220":1,"253":6,"257":8,"258":4,"331":1}}],["during",{"2":{"45":1,"185":1,"201":1,"227":1,"237":1,"240":1,"261":1}}],["due",{"2":{"52":1}}],["d",{"2":{"30":1,"39":1,"41":1,"62":1,"68":2,"77":2,"86":2,"93":1,"94":2,"96":2,"100":2,"102":1,"104":3,"106":2,"108":2,"117":1,"122":1,"128":1,"130":1,"142":7,"194":6,"206":1,"211":1,"220":1,"263":1,"292":1,"299":1,"307":2,"326":1,"345":1,"359":1,"361":1,"366":1}}],["differences",{"2":{"307":1}}],["differently",{"2":{"169":1}}],["different",{"2":{"4":1,"5":1,"115":1,"159":1,"160":1,"202":1,"230":1,"272":1,"280":1,"322":1,"346":1,"350":1,"361":1}}],["diagnostic",{"2":{"299":1}}],["dive",{"2":{"247":1}}],["division",{"2":{"182":1,"246":1,"349":1}}],["divide",{"2":{"3":1,"20":1,"182":2,"246":2,"267":1,"335":1,"349":1}}],["distributions",{"2":{"299":1}}],["distribute",{"2":{"140":1}}],["disk",{"2":{"194":3}}],["discovery",{"2":{"330":1}}],["discover",{"2":{"77":1,"92":1}}],["discord",{"2":{"24":1}}],["disconnected",{"2":{"9":1,"286":1}}],["disconnect",{"2":{"9":1}}],["discussion",{"2":{"24":1}}],["dir",{"2":{"118":1,"212":1}}],["directly",{"2":{"214":1,"242":1}}],["directories",{"2":{"206":1,"212":1}}],["directory",{"2":{"18":1,"118":1,"206":6,"212":1,"248":2,"346":1,"350":1}}],["direct",{"2":{"51":1,"132":1,"160":1,"179":1,"241":2}}],["down",{"2":{"266":1,"286":1}}],["dos",{"2":{"177":1}}],["doe",{"2":{"142":3,"326":1,"359":1}}],["doesn",{"2":{"169":1}}],["does",{"2":{"108":1,"109":1,"219":1,"279":1}}],["double",{"2":{"72":1}}],["don",{"2":{"68":2,"86":1,"110":1,"206":1,"242":1,"268":1}}],["done",{"2":{"64":6,"68":1,"71":1,"86":1,"102":1,"108":1,"109":2,"120":2,"130":2,"131":2,"194":2,"219":1,"223":1,"366":1}}],["do",{"2":{"3":1,"44":1,"52":1,"242":1,"352":1}}],["doctype",{"2":{"362":1}}],["doc3",{"2":{"361":1}}],["doc2",{"2":{"361":1}}],["doc1",{"2":{"361":1}}],["doc",{"2":{"195":1,"361":4}}],["docs",{"2":{"2":1,"21":1,"314":1,"330":1}}],["documents",{"2":{"307":1,"360":1,"361":2,"362":1}}],["documenturi",{"2":{"306":3}}],["documentation",{"2":{"2":1,"4":1,"24":1,"53":1,"112":1,"243":1,"270":1,"313":1,"314":1,"316":1,"330":1}}],["document",{"2":{"2":1,"165":1,"192":1,"195":3,"306":10,"307":1,"360":3,"361":3,"362":3}}],["dbpool",{"2":{"222":5}}],["db",{"2":{"2":1,"57":1,"222":2,"247":1,"320":3,"351":1}}],["debugtools",{"2":{"261":2}}],["debug",{"0":{"216":1},"2":{"183":6,"216":6,"217":1,"261":2,"317":2,"348":2}}],["debugging",{"0":{"213":1},"1":{"214":1,"215":1,"216":1,"217":1},"2":{"7":1,"29":1,"36":1,"41":1,"46":1,"47":1,"118":1,"123":1,"129":1,"204":1,"217":1,"219":1}}],["delete",{"2":{"146":1,"154":1,"248":1,"250":1,"260":1,"264":1,"367":2}}],["delay",{"2":{"68":6,"120":1}}],["deadlineexceeded",{"2":{"69":1,"219":1,"329":1}}],["denied",{"2":{"66":1,"67":1,"328":1}}],["detected",{"2":{"298":1}}],["detect",{"2":{"296":1,"298":1}}],["detection",{"2":{"206":1}}],["detectmimetype",{"2":{"206":2}}],["determines",{"2":{"55":1}}],["detailed",{"2":{"309":1}}],["detail",{"2":{"90":1,"178":1}}],["details",{"2":{"8":1,"14":1,"150":1,"309":1}}],["dedicated",{"2":{"51":1}}],["decision",{"0":{"136":1}}],["declare",{"2":{"240":1}}],["declares",{"2":{"45":1}}],["declaration",{"0":{"45":1}}],["decodestring",{"2":{"97":1,"346":1,"350":1}}],["decode",{"2":{"44":2,"97":1}}],["depth",{"2":{"309":1}}],["dependencies",{"2":{"34":1}}],["deployments",{"2":{"80":1,"166":1,"282":1}}],["deployment",{"2":{"5":1,"159":1,"280":1}}],["development",{"2":{"29":1,"79":1,"82":1,"158":1,"164":2,"167":1,"180":1,"190":1,"202":1,"204":2,"261":2,"271":1,"281":1}}],["demonstration",{"2":{"185":1}}],["demonstrates",{"2":{"292":1}}],["demonstratesubscriptionmanager",{"2":{"109":1}}],["demonstratetransportselection",{"2":{"136":1}}],["demonstratetoolcalling",{"2":{"100":1}}],["demonstratedynamicprompts",{"2":{"106":1}}],["demonstratepromptusage",{"2":{"104":1}}],["demonstratebatchtoolcalls",{"2":{"102":1}}],["demonstrateresourcereading",{"2":{"96":1}}],["demonstrateresourcefiltering",{"2":{"94":1}}],["demonstrateclientfactory",{"2":{"137":1}}],["demonstrateclientoperations",{"2":{"77":2}}],["demonstrateclientlifecycle",{"2":{"62":1}}],["demonstratecancellation",{"2":{"69":1}}],["demonstratecontextusage",{"2":{"69":1}}],["demo",{"2":{"16":1,"292":2}}],["demand",{"2":{"2":1,"313":1}}],["design",{"0":{"153":1,"154":1},"2":{"298":1,"304":1}}],["designed",{"2":{"13":1}}],["desktop",{"0":{"28":1,"210":1},"2":{"5":1,"28":4,"79":1,"115":1,"161":1,"164":1,"180":1,"203":1,"204":1,"210":3,"281":1}}],["description",{"2":{"4":3,"16":1,"26":1,"30":1,"67":3,"77":1,"93":3,"100":1,"104":4,"134":2,"142":1,"182":3,"185":3,"195":1,"206":2,"211":1,"228":3,"238":3,"267":3,"270":2,"292":2,"296":2,"298":4,"299":1,"301":1,"303":1,"304":1,"306":1,"307":1,"309":1,"310":8,"330":2,"335":3,"337":6,"338":3,"340":4,"341":8,"343":5,"344":2,"346":10,"350":3,"364":3}}],["defining",{"2":{"339":1}}],["definition",{"0":{"336":1,"339":1},"1":{"337":1,"338":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1},"2":{"339":1}}],["define",{"2":{"3":1,"4":1,"5":1,"26":1,"119":1,"120":1,"206":1,"246":1,"304":1,"334":1,"340":2,"341":2,"342":1,"343":1,"346":2,"351":1}}],["defined",{"2":{"2":1}}],["defines",{"2":{"1":1}}],["defer",{"2":{"30":2,"31":2,"40":1,"41":1,"44":1,"62":2,"64":1,"67":2,"69":1,"71":3,"72":2,"77":1,"89":2,"98":2,"102":1,"109":3,"117":1,"118":1,"120":1,"122":1,"123":1,"124":1,"125":1,"126":1,"128":1,"129":1,"130":3,"131":2,"133":1,"134":1,"137":1,"154":2,"169":1,"182":1,"185":1,"194":1,"207":1,"211":2,"216":1,"219":1,"220":1,"222":1,"223":1,"236":1,"238":1,"250":3,"264":4,"266":1,"321":1,"329":1,"351":2,"352":1}}],["default=utf",{"2":{"346":1}}],["default=20",{"2":{"344":1}}],["default=10",{"2":{"340":1}}],["defaultvalue",{"2":{"301":4,"309":2}}],["defaults",{"2":{"301":1,"348":1,"355":1}}],["defaultstring",{"2":{"195":1,"292":1}}],["defaultbool",{"2":{"206":1}}],["defaultnumber",{"2":{"142":2,"194":2,"364":1}}],["defaultretryconfig",{"2":{"68":2}}],["default",{"2":{"3":1,"43":1,"64":1,"67":1,"84":1,"85":1,"89":1,"108":1,"119":1,"120":2,"125":2,"130":1,"136":2,"137":1,"146":1,"162":1,"169":1,"182":1,"183":1,"187":1,"194":1,"206":1,"219":1,"223":1,"238":1,"251":1,"264":2,"285":1,"292":2,"296":1,"298":2,"304":1,"337":2,"344":1,"346":1,"348":1,"349":1,"350":1,"354":1,"355":1,"361":1,"366":1}}],["dynamically",{"2":{"320":1}}],["dynamic",{"0":{"106":1,"307":1,"318":1},"1":{"319":1,"320":1,"321":1},"2":{"2":2,"4":1,"21":1,"111":1,"194":1,"269":1,"294":1,"313":1,"318":1,"319":2}}],["gauge",{"2":{"257":2}}],["game",{"2":{"167":1,"180":1}}],["gateways",{"2":{"140":1}}],["group",{"2":{"212":1}}],["graceful",{"0":{"64":1},"2":{"207":1,"237":1,"266":2,"286":1}}],["gracefully",{"2":{"46":1,"47":1,"189":1,"220":1,"235":1,"287":1}}],["greet",{"2":{"16":1,"26":1,"28":1}}],["gpt3dot5turbo",{"2":{"43":1,"187":1}}],["gt",{"2":{"41":1,"44":1,"68":1,"77":2,"98":1,"100":1,"104":2,"137":2,"142":1,"182":1,"183":1,"185":1,"206":2,"222":1,"258":1,"261":1,"299":1,"319":1,"320":1,"354":1,"361":1}}],["g",{"2":{"17":1,"29":1,"212":1,"217":1}}],["guide",{"2":{"15":1,"25":1,"112":1,"237":1,"270":1}}],["gid",{"2":{"212":1}}],["git",{"2":{"204":1}}],["github",{"2":{"15":1,"16":2,"26":3,"30":3,"31":3,"39":3,"41":2,"43":1,"57":2,"77":2,"84":2,"93":2,"112":1,"117":3,"142":2,"155":1,"162":3,"182":3,"185":3,"187":1,"194":2,"206":2,"207":2,"211":2,"227":2,"238":2,"246":2,"248":1,"267":2,"274":1,"292":2,"298":2,"320":2}}],["giving",{"2":{"6":1,"313":1}}],["general",{"2":{"195":1,"301":1,"362":1}}],["generatesessionid",{"2":{"154":1}}],["generateid",{"2":{"142":2,"247":1}}],["generatecodereviewprompt",{"2":{"106":2}}],["generate",{"2":{"38":1,"41":1,"106":4,"111":1,"185":1,"188":1,"226":1,"229":1,"268":1,"269":1,"295":1,"301":1,"306":1}}],["generatedata",{"2":{"194":2}}],["generatedataanalysisprompt",{"2":{"106":2}}],["generated",{"2":{"2":1,"313":1}}],["generation",{"0":{"106":1},"2":{"4":1,"110":1,"268":1,"339":1,"344":1}}],["geography",{"2":{"41":1,"185":1}}],["getrawarguments",{"2":{"348":1}}],["getbool",{"2":{"348":1,"354":1,"355":1}}],["getboolarg",{"2":{"309":2}}],["getlimiter",{"2":{"254":2}}],["gettextfromcontent",{"2":{"228":1,"238":2}}],["getting",{"0":{"10":1},"1":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1}}],["getclientcapabilities",{"2":{"267":1}}],["getclientip",{"2":{"143":1}}],["getcachedfile",{"2":{"222":1}}],["getfloat",{"2":{"182":2,"348":1,"355":1}}],["getfromcache",{"2":{"143":1}}],["getport",{"2":{"169":3}}],["getpromptrequestparams",{"2":{"104":1,"105":1}}],["getpromptrequest",{"2":{"104":1,"105":1,"292":1,"298":1,"299":1,"301":1,"303":1,"304":1,"306":1,"307":1,"309":1,"310":1}}],["getpromptresult",{"2":{"104":1,"292":2,"298":2,"299":2,"301":2,"303":2,"304":2,"306":2,"307":2,"309":2,"310":2}}],["getprompt",{"2":{"104":3,"105":1}}],["getuserdata",{"2":{"251":1}}],["getuser",{"2":{"155":1}}],["getuserpreferences",{"2":{"153":1}}],["getuserfromdb",{"2":{"142":3,"319":1}}],["getint",{"2":{"142":3,"194":2,"348":1,"355":1}}],["getsession",{"2":{"154":1,"250":1,"251":1,"260":1}}],["getsessionid",{"2":{"9":1,"126":1,"251":1,"253":2,"254":1,"260":1}}],["getstringslicearg",{"2":{"299":1,"301":2}}],["getstringarg",{"2":{"298":2,"299":1,"301":4,"303":1,"304":1,"306":1,"307":1,"309":1}}],["getstring",{"2":{"142":4,"182":1,"183":2,"185":1,"194":1,"216":1,"223":1,"228":1,"238":1,"292":1,"348":1,"350":1,"352":1,"355":1,"362":1}}],["getenv",{"2":{"137":1,"162":2,"169":2,"261":1,"285":2,"317":2,"321":1}}],["getactivesessioncount",{"2":{"257":2}}],["getalltools",{"2":{"89":1}}],["getarguments",{"2":{"26":1,"348":1,"352":1}}],["get",{"2":{"2":1,"14":1,"15":1,"25":1,"26":1,"67":1,"88":1,"89":1,"98":2,"101":1,"102":2,"104":2,"105":1,"125":2,"142":2,"145":4,"146":1,"155":1,"157":3,"183":2,"194":4,"198":1,"201":3,"251":3,"292":2,"312":1,"321":1,"346":2,"367":2}}],["golang",{"2":{"155":1}}],["gocache",{"2":{"118":1}}],["gocache=",{"2":{"118":1}}],["got",{"2":{"97":2,"101":6}}],["goroutines",{"2":{"102":1}}],["goroutine",{"2":{"69":1,"266":1}}],["go",{"0":{"13":1,"340":1,"341":1},"2":{"0":1,"5":1,"6":1,"9":1,"13":3,"14":1,"15":6,"16":2,"17":3,"23":1,"25":1,"26":8,"28":2,"29":2,"30":5,"31":3,"34":1,"39":3,"41":2,"43":1,"48":2,"55":1,"57":6,"64":1,"69":1,"75":1,"77":4,"84":2,"93":2,"102":1,"106":1,"109":1,"112":1,"115":1,"117":5,"118":2,"120":1,"128":1,"130":1,"131":2,"137":2,"142":2,"154":1,"159":1,"162":3,"170":2,"182":3,"185":3,"187":1,"194":2,"206":2,"207":3,"210":2,"211":4,"212":4,"214":8,"215":2,"217":2,"220":1,"227":2,"238":2,"244":1,"246":2,"248":1,"266":1,"267":2,"274":1,"280":1,"286":1,"289":1,"290":1,"292":2,"298":2,"320":2,"337":1,"339":2,"340":1,"344":1,"347":1,"348":1,"354":1,"363":2}}],["lstdflags",{"2":{"266":1}}],["lstdflags|log",{"2":{"216":1}}],["lshortfile",{"2":{"216":1}}],["ll",{"0":{"76":1,"291":1}}],["llmclient",{"2":{"88":5}}],["llmapplication",{"2":{"88":4}}],["llm",{"0":{"42":1,"88":1,"186":1,"209":1},"1":{"43":1,"44":1,"187":1},"2":{"2":1,"3":1,"7":1,"18":1,"20":1,"37":1,"38":2,"39":6,"41":5,"46":3,"47":2,"88":3,"103":1,"110":3,"111":2,"112":3,"165":1,"167":1,"184":2,"185":8,"186":1,"188":2,"192":1,"209":1,"225":1,"226":2,"228":6,"229":2,"237":1,"238":5,"242":1,"268":3,"269":2,"270":4,"290":1,"333":1}}],["llms",{"2":{"1":1,"2":2,"3":1,"4":1,"7":1,"9":1,"12":1,"20":1,"21":1,"32":1,"192":1,"204":1,"277":2,"288":2,"291":2,"294":1,"295":1,"312":1,"313":1,"333":1,"334":1,"347":1,"364":1}}],["lt",{"2":{"41":2,"64":5,"68":3,"71":2,"86":6,"96":1,"108":2,"109":2,"120":4,"125":4,"130":7,"131":2,"170":4,"194":5,"207":1,"219":1,"220":2,"223":1,"261":1,"263":1,"264":2,"266":1,"286":1,"331":1,"342":1,"354":1,"366":2}}],["least",{"2":{"176":1}}],["learning",{"2":{"304":1}}],["learn",{"0":{"76":1,"291":1},"2":{"32":1,"37":1,"53":1,"54":1,"73":1,"74":1,"91":1,"113":1,"114":1,"158":1,"190":2,"202":1,"224":1,"225":1,"243":1,"271":1,"272":1,"288":1,"289":1,"293":1,"311":2,"332":1,"368":2}}],["length",{"2":{"43":1,"187":1,"301":3}}],["len",{"2":{"30":1,"41":1,"43":1,"46":1,"62":1,"77":4,"93":1,"94":2,"96":2,"97":3,"100":2,"102":1,"104":4,"105":1,"106":2,"117":1,"122":1,"128":1,"137":2,"142":2,"182":1,"183":1,"185":1,"187":1,"194":2,"206":1,"211":1,"299":1,"301":1,"319":1,"342":1,"351":1,"354":1,"361":2}}],["let",{"2":{"16":1,"20":1,"26":1,"109":1,"303":1}}],["leverage",{"2":{"14":1,"110":1,"140":1,"184":1,"226":1,"268":1}}],["level=debug",{"2":{"57":1}}],["level",{"2":{"14":1,"210":1,"212":2,"292":6,"309":3,"338":1}}],["link",{"0":{"362":1},"2":{"360":1,"362":1}}],["links",{"0":{"360":1,"361":1},"2":{"360":1,"361":2,"362":1}}],["linux",{"2":{"212":2}}],["line",{"0":{"214":1},"2":{"56":1,"79":1,"160":1,"164":1,"178":1,"203":1,"204":1,"212":1,"214":1}}],["lines",{"2":{"14":1}}],["lifetime",{"2":{"201":1}}],["lifecycle",{"0":{"60":1,"61":1,"62":1,"286":1},"1":{"61":1,"62":1,"63":1,"64":1},"2":{"9":1,"54":1,"60":1,"76":1,"90":1,"209":1,"256":1,"275":1,"286":3}}],["live",{"2":{"165":1,"191":1,"192":2,"195":1}}],["limiter",{"2":{"254":9}}],["limiters",{"2":{"254":4}}],["limited",{"2":{"140":1,"166":1,"173":3}}],["limiting",{"0":{"254":1},"2":{"47":1,"143":1,"177":1,"252":1}}],["limits",{"2":{"47":1}}],["limit",{"2":{"46":2,"142":7,"143":1,"148":1,"149":1,"254":3,"340":2,"342":5,"364":1}}],["listassetshandler",{"2":{"343":1}}],["listfiles",{"2":{"206":2}}],["listenandserve",{"2":{"146":1}}],["listprompts",{"2":{"104":1}}],["listing",{"0":{"92":1,"93":1,"94":1,"330":1},"1":{"93":1,"94":1},"2":{"94":2,"206":1}}],["listresourcesrequest",{"2":{"157":1,"201":1}}],["listresourcesbypattern",{"2":{"94":2}}],["listresourcesbytype",{"2":{"94":2}}],["listresources",{"2":{"77":1,"93":2,"94":2,"96":1}}],["list",{"2":{"30":2,"62":1,"67":3,"71":1,"77":4,"93":2,"96":2,"100":2,"101":1,"104":2,"108":3,"145":6,"206":5,"211":2,"214":3,"215":5,"337":1,"343":2}}],["listtoolsrequest",{"2":{"30":1,"117":1,"157":1,"201":1,"211":1}}],["listtools",{"2":{"7":1,"30":1,"62":1,"67":2,"71":1,"77":1,"88":1,"89":1,"100":1,"101":1,"117":1,"122":1,"126":1,"128":1,"211":1}}],["library",{"2":{"28":1,"82":1,"155":2,"167":1,"180":2,"210":1}}],["likely",{"2":{"119":1}}],["like",{"2":{"2":1,"3":1,"5":1,"18":1,"20":1,"80":1,"139":1,"142":1,"155":1,"160":1,"200":1,"252":1,"282":1,"289":1}}],["launches",{"2":{"212":1}}],["lastaccess",{"2":{"154":3}}],["last",{"2":{"68":1,"154":1,"346":1}}],["lasterr",{"2":{"68":3,"86":3}}],["latency",{"0":{"172":1}}],["later",{"2":{"46":1}}],["latest",{"2":{"30":1,"31":1,"185":1,"211":1}}],["larger",{"2":{"183":1}}],["large",{"2":{"12":1,"223":1}}],["layer",{"0":{"8":1},"2":{"8":1,"157":1,"201":1}}],["layers",{"2":{"7":1,"160":1}}],["language",{"2":{"4":2,"12":1,"106":3,"296":2,"298":6,"309":1}}],["low",{"2":{"136":4,"212":1,"338":1}}],["london",{"2":{"102":1}}],["long",{"2":{"69":2,"192":1,"263":2,"366":1}}],["longer",{"2":{"67":1}}],["location=",{"2":{"321":1}}],["location",{"2":{"102":2,"321":4}}],["localhost",{"2":{"31":1,"56":2,"80":1,"81":1,"122":1,"124":1,"128":1,"129":1,"137":2,"195":1,"197":3}}],["local",{"2":{"5":2,"79":1,"161":1,"164":2,"172":1,"203":1,"204":3,"215":1,"281":2}}],["lock",{"2":{"71":1,"72":3,"89":1,"98":1,"109":2,"130":3,"131":1,"154":2,"250":2,"254":1,"264":2,"331":1}}],["lost",{"2":{"66":1,"67":1,"85":1,"120":1}}],["lookup",{"2":{"142":1}}],["look",{"2":{"28":1,"292":1}}],["logo",{"2":{"325":1}}],["loglevel",{"2":{"292":3}}],["logs",{"2":{"261":1,"292":4}}],["logsessionend",{"2":{"258":1}}],["logfile",{"2":{"216":3}}],["logtofile",{"2":{"207":2,"220":1}}],["logtoolcall",{"2":{"143":1,"258":1}}],["logerror",{"2":{"207":3,"219":1,"220":2}}],["logresourceread",{"2":{"143":1}}],["logger",{"2":{"118":3,"123":3,"129":3,"138":2,"216":4,"253":12,"257":10,"266":3}}],["loggingmw",{"2":{"266":2}}],["loggingmiddleware",{"2":{"253":5}}],["logging",{"0":{"138":1,"216":1,"253":1},"2":{"47":1,"138":1,"216":4,"252":1,"256":1,"317":1}}],["log",{"2":{"9":2,"30":5,"31":4,"40":2,"41":11,"46":2,"47":2,"57":2,"58":1,"62":4,"63":2,"64":2,"67":19,"68":1,"69":6,"71":1,"77":4,"84":1,"85":4,"86":1,"93":1,"94":2,"96":2,"100":2,"104":2,"106":2,"108":8,"109":5,"117":5,"118":2,"119":8,"120":3,"122":3,"123":1,"124":1,"128":5,"129":2,"130":3,"133":3,"137":1,"142":3,"143":6,"146":2,"162":1,"170":7,"182":4,"183":2,"185":5,"187":1,"189":2,"194":5,"195":2,"198":1,"207":3,"210":1,"211":8,"216":4,"219":1,"222":1,"235":2,"238":3,"241":1,"251":2,"253":2,"257":2,"258":1,"266":6,"281":1,"282":1,"283":1,"284":2,"286":5,"287":2,"292":3}}],["logic",{"0":{"68":1,"86":1,"258":1},"2":{"7":1,"8":1,"14":1,"85":1,"220":1,"267":1,"342":1,"363":1}}],["loading",{"2":{"223":1}}],["loadfromredis",{"2":{"153":1}}],["load",{"2":{"5":1,"80":1,"140":1,"153":1,"155":1,"161":1,"166":1,"282":1}}],["amazing",{"2":{"279":1}}],["am",{"2":{"261":1}}],["amp",{"2":{"9":1,"26":2,"39":1,"40":1,"41":2,"43":2,"44":4,"50":1,"51":1,"58":1,"63":3,"64":1,"71":1,"72":7,"84":1,"88":1,"89":1,"97":1,"98":1,"101":1,"105":1,"108":2,"109":1,"112":2,"120":3,"123":3,"125":1,"129":1,"130":3,"131":1,"134":1,"136":8,"137":1,"142":6,"154":2,"155":4,"182":1,"183":3,"185":4,"187":2,"189":1,"212":2,"228":2,"235":1,"238":2,"247":2,"250":2,"251":1,"253":1,"254":1,"255":1,"257":1,"260":1,"264":1,"270":2,"286":1,"292":1,"298":1,"299":1,"301":1,"303":1,"304":1,"306":1,"307":1,"309":1,"310":1,"316":1,"317":1,"320":2,"321":2,"323":1,"325":1,"326":1,"328":1,"329":1,"348":1,"351":1,"352":1,"355":3,"359":1,"360":1,"361":1,"362":2,"363":1}}],["audience",{"2":{"301":3}}],["audit",{"2":{"258":1}}],["auditlogger",{"2":{"258":4}}],["auto",{"2":{"296":1,"298":2}}],["automation",{"2":{"164":1,"204":1}}],["automatically",{"2":{"8":1,"9":2,"40":1,"45":2,"145":1,"157":1,"199":1,"201":1,"278":1}}],["automatic",{"0":{"45":1},"2":{"8":2,"9":1,"245":1,"247":1,"278":1,"339":1}}],["authmw",{"2":{"266":1}}],["authmiddleware",{"2":{"155":5,"177":1,"255":4}}],["authtoken",{"2":{"157":2,"194":2,"201":2}}],["authheader",{"2":{"155":3}}],["authorization",{"0":{"155":1},"2":{"128":1,"129":1,"137":2,"155":3,"157":1,"177":1,"194":1,"201":1}}],["auth",{"2":{"124":1,"143":1,"177":1}}],["authentication",{"0":{"124":1,"155":1,"255":1},"2":{"67":1,"128":1,"143":2,"157":2,"177":1,"194":2,"201":2,"252":1,"255":1,"317":1}}],["after",{"2":{"64":2,"68":2,"69":1,"72":1,"86":2,"120":1,"126":1,"130":1,"154":2,"194":1}}],["availability",{"2":{"341":1}}],["available",{"0":{"355":1},"2":{"5":1,"30":2,"49":1,"62":1,"67":2,"77":6,"88":2,"92":1,"93":2,"95":1,"100":2,"104":2,"117":1,"120":1,"122":1,"128":1,"145":3,"157":2,"201":2,"211":2,"217":1,"367":2}}],["avoid",{"2":{"47":1,"309":1}}],["age",{"2":{"142":18,"247":4,"326":2,"337":2,"344":3,"348":2,"354":6,"355":4,"359":3}}],["agent",{"2":{"123":1,"129":1,"157":1,"194":1,"201":1}}],["again",{"2":{"46":1,"120":1}}],["agnostic",{"2":{"8":1,"162":1}}],["admintool",{"2":{"367":2}}],["admin",{"2":{"260":4,"367":3}}],["administration",{"2":{"164":1}}],["adjust",{"2":{"206":1,"309":1}}],["advanced",{"0":{"109":1,"110":1,"143":1,"195":1,"207":1,"244":1,"268":1,"308":1,"365":1},"1":{"111":1,"112":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":2,"270":2,"271":1,"309":1,"310":1,"366":1,"367":1},"2":{"32":1,"110":2,"143":3,"190":1,"195":3,"207":2,"243":1,"268":2,"275":1,"288":1,"289":1,"290":1,"291":1,"293":1,"309":2,"311":1,"332":1,"368":1}}],["addprompt",{"2":{"292":1,"298":1}}],["addproductionprompts",{"2":{"266":1}}],["addproductionresources",{"2":{"266":1}}],["addproductiontools",{"2":{"266":1}}],["addbeforeany",{"2":{"286":1}}],["addbatchtools",{"2":{"143":2}}],["addonerror",{"2":{"286":1}}],["addonunregistersession",{"2":{"251":1,"286":1}}],["addonregistersession",{"2":{"251":1,"286":1}}],["adddatabasetools",{"2":{"207":2}}],["addgittools",{"2":{"207":2}}],["addfiletools",{"2":{"207":2}}],["addrealtimeresources",{"2":{"195":2}}],["address",{"2":{"64":3,"84":3,"89":3,"338":1}}],["addresourcemiddleware",{"2":{"143":1}}],["addresource",{"2":{"7":1,"134":2,"142":1,"194":1,"206":1,"292":1,"316":1,"317":1,"319":1,"320":1,"321":1,"330":1}}],["addconditionaltools",{"2":{"367":1}}],["addcollaborativetools",{"2":{"195":2}}],["addcrudtools",{"2":{"143":2}}],["addapplicationtools",{"2":{"183":2}}],["addanalyticstools",{"2":{"143":2}}],["addmiddleware",{"2":{"146":1}}],["additional",{"2":{"142":1,"157":1,"201":1,"279":1,"362":1}}],["addhandler",{"2":{"109":3,"131":5}}],["addsystemtools",{"2":{"207":2}}],["addstreamablehttpmiddleware",{"2":{"143":1}}],["addserver",{"2":{"89":1}}],["adds",{"2":{"45":1}}],["addtoolmiddleware",{"2":{"143":2}}],["addtool",{"2":{"7":1,"16":1,"26":1,"133":1,"134":3,"142":3,"162":1,"182":1,"183":2,"185":1,"194":2,"195":3,"206":1,"216":1,"228":1,"238":1,"246":1,"251":1,"267":1,"270":1,"292":1,"342":1,"345":1,"346":2,"350":1,"364":1,"367":2}}],["add",{"2":{"3":1,"15":1,"16":2,"18":3,"20":1,"26":1,"32":1,"39":1,"43":1,"102":2,"104":1,"105":1,"109":2,"112":1,"120":1,"131":1,"133":1,"134":1,"142":2,"143":5,"146":4,"154":2,"155":1,"162":1,"170":2,"182":4,"183":2,"185":1,"187":1,"194":2,"195":2,"197":2,"206":2,"207":1,"216":2,"227":1,"238":1,"246":2,"251":1,"252":1,"255":1,"266":1,"267":1,"270":1,"275":2,"278":1,"279":1,"286":2,"287":1,"288":1,"292":3,"293":1,"304":2,"316":1,"330":1,"335":1,"342":1,"349":1,"352":1,"361":1}}],["alternative",{"2":{"339":1}}],["alternatives",{"2":{"67":1}}],["algorithmic",{"2":{"298":1}}],["alert",{"2":{"258":1,"264":1}}],["alive",{"2":{"197":1}}],["alice",{"2":{"28":1}}],["alongside",{"2":{"146":1}}],["always",{"2":{"47":1,"177":1,"189":1,"235":1,"237":1}}],["already",{"2":{"34":1,"342":1}}],["also",{"2":{"30":1,"126":1,"363":1}}],["alltools",{"2":{"89":3}}],["allowedtables",{"2":{"320":2}}],["alloweddir",{"2":{"248":2}}],["allowed",{"2":{"146":1,"248":1,"346":1,"350":1,"351":1}}],["allow",{"2":{"47":1,"143":1,"254":1,"260":1}}],["allows",{"2":{"38":1,"110":1,"126":1,"156":1,"200":1,"212":1,"226":1,"268":1}}],["allowing",{"2":{"8":1,"184":1,"318":1}}],["all",{"2":{"9":1,"14":1,"75":1,"93":1,"94":2,"115":1,"138":1,"153":1,"157":2,"176":1,"190":1,"195":1,"199":1,"201":3,"263":1,"266":1,"277":1,"298":3,"307":2,"367":1}}],["abs",{"2":{"248":1}}],["abspath",{"2":{"248":2}}],["absolute",{"2":{"206":1}}],["abstracts",{"2":{"6":1,"8":1}}],["abuse",{"2":{"177":1}}],["about",{"2":{"32":1,"53":1,"114":1,"158":1,"190":2,"202":1,"224":1,"243":1,"303":1,"311":1,"368":1}}],["above",{"2":{"17":1,"306":1}}],["ai",{"2":{"12":1,"180":1}}],["attack",{"2":{"298":1}}],["attention",{"2":{"292":1,"299":1}}],["attempts+1",{"2":{"220":2}}],["attempts++",{"2":{"220":1}}],["attempts",{"2":{"68":1,"86":1,"220":3}}],["attempt+1",{"2":{"68":1,"86":1}}],["attempt++",{"2":{"68":1,"86":1,"130":1}}],["attempt",{"2":{"68":6,"86":5,"119":1,"130":5,"220":1}}],["attempting",{"2":{"67":1,"85":1}}],["attributes",{"2":{"212":1}}],["at",{"2":{"8":1,"142":1,"189":1,"235":1,"247":1,"292":1}}],["aware",{"0":{"251":1},"2":{"4":1,"212":1,"251":1}}],["arrays",{"2":{"343":1}}],["array",{"0":{"343":1},"2":{"101":2,"301":1,"337":1,"343":3,"344":1}}],["arg",{"2":{"104":3}}],["argumentdescription",{"2":{"292":1}}],["argument",{"0":{"353":1},"1":{"354":1,"355":1},"2":{"101":5,"298":1}}],["arguments",{"0":{"300":1},"1":{"301":1},"2":{"3":1,"4":1,"26":2,"30":1,"31":1,"62":1,"66":1,"67":2,"69":1,"77":1,"85":2,"88":2,"89":1,"100":1,"101":1,"102":5,"104":5,"105":1,"133":2,"134":2,"148":1,"153":1,"182":1,"183":1,"185":1,"211":1,"214":1,"215":1,"251":1,"292":1,"298":3,"299":3,"301":10,"303":2,"304":3,"306":3,"307":2,"309":3,"310":2,"351":1}}],["arg2",{"2":{"56":1,"79":1}}],["arg1",{"2":{"56":1,"79":1}}],["args",{"2":{"28":1,"41":2,"89":2,"100":2,"101":6,"104":2,"105":4,"118":2,"134":2,"137":3,"138":2,"210":1,"212":2,"292":3,"298":5,"301":4,"309":2,"342":5,"343":1,"345":1,"346":16,"348":1,"351":4,"352":3}}],["architectures",{"2":{"80":1,"140":1,"166":1,"180":2}}],["architecture",{"0":{"6":1},"1":{"7":1,"8":1,"9":1},"2":{"6":1}}],["arithmetic",{"2":{"3":1,"20":1,"246":1,"335":2}}],["area",{"2":{"298":1}}],["areas",{"2":{"4":2,"106":1,"298":1,"299":1}}],["are",{"2":{"2":1,"3":1,"4":1,"8":1,"9":1,"34":1,"41":1,"95":1,"142":1,"157":3,"185":2,"188":1,"201":4,"228":1,"229":1,"238":1,"270":1,"294":1,"303":2,"304":4,"313":1,"334":1,"351":1,"367":1}}],["account",{"2":{"367":1}}],["acceptance",{"2":{"310":1}}],["accepts",{"2":{"138":1}}],["accept",{"2":{"3":1,"17":1,"123":1}}],["accessed",{"2":{"222":1}}],["accessing",{"0":{"157":1,"201":1}}],["accessible",{"2":{"35":1,"320":1}}],["access",{"2":{"2":2,"7":1,"12":1,"75":1,"92":1,"111":1,"154":1,"156":1,"157":2,"194":2,"200":1,"201":2,"212":1,"312":1,"313":1,"318":1,"320":1,"327":1,"328":1,"348":2}}],["actual",{"2":{"310":3,"347":1}}],["active",{"2":{"7":1,"9":1,"247":4,"257":2,"267":1}}],["actionable",{"2":{"306":1}}],["action",{"2":{"3":1,"306":1}}],["actions",{"2":{"3":1,"20":1,"333":1,"334":1}}],["acquiring",{"2":{"72":1}}],["across",{"2":{"9":1,"126":1,"140":1}}],["apply",{"2":{"212":1}}],["applications",{"0":{"209":1},"2":{"5":2,"7":1,"12":1,"56":1,"65":1,"75":1,"79":1,"80":1,"81":1,"82":1,"140":2,"160":1,"165":2,"167":2,"178":1,"180":4,"191":1,"192":3,"203":1,"204":2,"209":1,"281":1,"283":1,"309":1}}],["application",{"0":{"88":1,"183":1},"2":{"2":1,"28":1,"44":1,"63":1,"94":1,"97":1,"123":1,"136":1,"142":2,"146":2,"148":1,"164":1,"183":12,"194":2,"206":2,"210":1,"292":2,"317":5,"319":2,"320":2,"321":2,"324":1,"326":1,"328":1,"329":1,"330":3,"360":1,"361":2,"362":1}}],["appname",{"2":{"183":4}}],["appssimple",{"2":{"161":1}}],["apps",{"2":{"115":1,"161":1}}],["appsprocess",{"2":{"115":1}}],["appropriately",{"2":{"47":1}}],["appropriate",{"2":{"46":1,"104":1,"189":1,"235":1,"237":1,"303":1,"322":1}}],["append",{"2":{"43":2,"44":1,"94":2,"105":1,"109":2,"118":1,"131":1,"137":2,"187":2,"194":2,"216":1,"260":1,"261":1,"304":2,"307":1,"361":1,"366":1}}],["appdata",{"2":{"28":1,"210":1}}],["app",{"2":{"2":1,"88":5,"136":1,"183":22,"248":1,"317":1,"330":2}}],["apiurl",{"2":{"321":2}}],["apikey",{"2":{"43":2,"44":5,"187":2}}],["apisstandard",{"2":{"161":1}}],["apishttp",{"2":{"115":1}}],["apis",{"2":{"5":1,"18":1,"39":1,"111":1,"140":2,"282":1,"312":1,"321":1}}],["api",{"0":{"321":1},"2":{"2":3,"3":1,"7":1,"13":1,"18":1,"43":2,"44":4,"47":1,"123":1,"126":1,"140":3,"142":1,"143":1,"146":4,"166":2,"187":3,"197":3,"313":1,"319":1,"321":5}}],["annotated",{"2":{"362":3}}],["annotations",{"0":{"362":1,"364":1},"2":{"362":3}}],["anonymous",{"2":{"251":1}}],["another",{"2":{"58":2,"59":2}}],["answering",{"2":{"268":1}}],["answer",{"2":{"38":1,"226":1,"269":1}}],["anthropicresp",{"2":{"44":5}}],["anthropicreq",{"2":{"44":4}}],["anthropicsamplinghandler",{"2":{"44":5}}],["anthropic",{"0":{"44":1},"2":{"28":1,"39":2,"44":5,"111":1}}],["any",{"2":{"8":2,"41":1,"44":4,"68":1,"72":1,"88":1,"101":1,"138":3,"157":1,"162":1,"170":1,"185":4,"201":1,"206":2,"228":3,"238":3,"270":2,"273":1,"286":4,"295":1,"312":1,"337":4,"348":2,"364":1}}],["analytics",{"2":{"143":1,"167":1,"180":1,"192":1}}],["analyzers",{"2":{"204":1}}],["analyze",{"2":{"4":2,"106":1,"292":5,"299":1,"310":2}}],["analysismessages",{"2":{"106":2}}],["analysistype",{"2":{"106":2,"299":3,"306":3}}],["analysisprompt",{"2":{"4":1}}],["analysis",{"0":{"299":1},"2":{"4":3,"106":4,"269":1,"295":1,"299":6,"304":2,"306":4,"307":1,"309":1,"310":2}}],["an",{"2":{"2":1,"12":1,"38":1,"77":1,"110":2,"130":1,"268":2,"303":1,"304":2,"309":1,"360":1}}],["and",{"0":{"69":1,"155":1,"236":1,"304":1,"338":1},"2":{"0":2,"1":1,"3":1,"4":4,"5":1,"7":3,"8":1,"9":1,"12":4,"13":2,"14":2,"17":1,"25":2,"26":2,"28":1,"29":1,"32":1,"35":1,"38":1,"47":3,"50":1,"52":1,"54":2,"56":1,"60":1,"61":3,"63":1,"67":3,"72":1,"73":1,"74":2,"75":1,"76":2,"77":1,"79":1,"82":1,"90":2,"91":1,"110":1,"114":1,"115":1,"119":1,"139":1,"142":2,"143":2,"156":1,"157":2,"159":2,"160":2,"164":2,"165":1,"167":1,"177":1,"179":1,"180":1,"185":1,"191":2,"192":1,"197":1,"200":1,"201":3,"203":1,"204":1,"209":1,"212":2,"217":1,"219":1,"230":1,"240":1,"244":1,"245":2,"246":1,"249":1,"252":1,"256":1,"261":1,"266":1,"268":1,"272":1,"273":1,"275":1,"278":1,"288":1,"289":1,"290":1,"291":2,"292":1,"293":2,"294":2,"295":1,"296":1,"298":7,"299":5,"303":2,"304":3,"306":2,"307":2,"309":3,"310":3,"311":1,"313":1,"315":1,"320":1,"332":1,"334":1,"339":2,"340":1,"341":1,"342":3,"351":1,"354":1,"368":1}}],["ascii",{"2":{"350":2}}],["astextcontent",{"2":{"182":1,"183":1}}],["assist",{"2":{"303":1}}],["assistant",{"2":{"41":1,"185":2,"188":1,"228":1,"229":1,"231":1,"238":1,"270":1,"298":1,"303":1}}],["assetstool",{"2":{"343":1}}],["assets",{"2":{"343":4}}],["asset",{"2":{"343":7}}],["assess",{"2":{"310":1}}],["assessment`",{"2":{"310":1}}],["assessment",{"2":{"298":1,"299":1,"307":1}}],["assert",{"2":{"134":1}}],["ask",{"2":{"41":1,"185":4,"228":3,"238":3,"270":3,"303":1}}],["asking",{"2":{"28":1}}],["as",{"2":{"2":1,"26":1,"71":1,"140":1,"180":1,"206":1,"209":1,"212":2,"295":1,"312":1,"325":1,"333":1,"340":1}}],["a",{"0":{"39":1,"273":1},"1":{"274":1,"275":1},"2":{"2":2,"3":1,"6":1,"12":1,"14":1,"15":1,"16":3,"17":1,"18":1,"26":4,"29":1,"30":1,"31":1,"32":1,"38":2,"39":1,"40":1,"41":5,"45":1,"57":1,"69":1,"71":1,"77":3,"100":1,"104":1,"109":1,"110":1,"116":1,"117":1,"126":2,"130":1,"138":1,"142":1,"145":4,"155":2,"162":1,"180":1,"183":1,"185":5,"186":1,"188":1,"195":2,"198":1,"201":1,"206":2,"209":1,"211":1,"212":3,"214":1,"217":1,"219":1,"228":2,"229":1,"236":1,"238":3,"240":1,"270":3,"273":1,"274":1,"279":1,"292":4,"296":1,"298":2,"299":2,"303":4,"304":2,"306":2,"307":1,"309":1,"310":2,"312":1,"314":1,"316":1,"321":1,"326":1,"335":1,"338":3,"339":1,"340":1,"346":2,"350":1,"355":3,"360":1,"361":1,"362":1,"367":1}}],["skip",{"2":{"264":1}}],["srv",{"2":{"263":2}}],["slice",{"2":{"301":3}}],["slow",{"2":{"258":1}}],["sleep",{"2":{"67":1,"69":2,"109":1,"120":2,"194":1,"220":1,"263":1,"366":1}}],["sqlite3",{"2":{"222":1}}],["sql",{"2":{"222":2,"320":1}}],["smith",{"2":{"142":2}}],["sm",{"2":{"109":35,"154":17,"250":12,"251":2,"260":2}}],["shutting",{"2":{"266":1,"286":1}}],["shutdown",{"0":{"64":1},"2":{"64":1,"207":4,"209":1,"266":5,"286":2}}],["sh",{"2":{"215":1}}],["shared",{"2":{"174":1,"192":1,"195":2}}],["shouldincludetool",{"2":{"261":2}}],["should",{"2":{"126":1}}],["showing",{"2":{"77":1}}],["showtoolschema",{"2":{"67":2}}],["show",{"2":{"67":1}}],["syntax",{"2":{"319":1}}],["synthesize",{"2":{"307":2}}],["sync",{"2":{"57":1,"71":1,"72":1,"84":1,"89":1,"93":1,"98":1,"102":1,"109":2,"117":1,"120":1,"130":1,"131":2,"154":1,"222":1,"250":1,"254":1,"264":1,"331":1}}],["sysprocattr",{"2":{"212":2}}],["syscall",{"2":{"207":2,"212":7,"220":1,"266":1,"286":1}}],["systemerror",{"2":{"363":1}}],["systemmessage",{"2":{"304":6}}],["systemprompt",{"2":{"39":4,"41":1,"43":2,"44":2,"185":3,"187":2,"188":1,"228":3,"229":1,"238":3,"270":1}}],["system",{"0":{"304":1},"2":{"2":1,"3":1,"7":1,"14":1,"41":2,"43":1,"44":1,"164":2,"165":1,"185":4,"187":1,"188":1,"192":1,"194":7,"204":2,"212":2,"228":3,"229":1,"237":2,"238":3,"260":1,"264":1,"303":2,"304":3,"363":2}}],["systems",{"2":{"1":1,"12":1,"167":1,"192":1}}],["splitn",{"2":{"361":1}}],["split",{"2":{"319":1}}],["space",{"2":{"174":1}}],["spawned",{"2":{"212":1}}],["spawning",{"2":{"116":1,"209":1}}],["spawns",{"2":{"57":1,"117":1}}],["sprintf",{"2":{"16":1,"26":1,"41":1,"142":5,"153":1,"162":1,"182":1,"183":3,"185":3,"194":5,"206":3,"207":2,"216":1,"219":2,"220":3,"228":2,"238":3,"246":1,"251":1,"258":2,"263":1,"270":2,"292":2,"298":2,"299":3,"301":1,"303":2,"304":3,"306":2,"307":3,"309":4,"310":2,"320":1,"321":1,"326":1,"345":1,"346":3,"349":2,"350":3,"351":3,"352":5,"354":1,"358":1,"359":1,"360":1,"361":3,"362":1,"366":2}}],["special",{"2":{"299":1}}],["specialized",{"2":{"277":1}}],["specified",{"2":{"194":1,"298":1}}],["specifically",{"2":{"268":1,"298":1}}],["specification",{"2":{"13":1}}],["specific",{"2":{"4":1,"8":1,"9":1,"73":1,"74":1,"76":1,"90":1,"100":1,"104":1,"113":1,"114":1,"115":1,"160":1,"183":1,"199":1,"251":2,"258":1,"260":1,"277":1,"284":1,"298":3}}],["specify",{"2":{"2":1}}],["spec",{"2":{"14":1}}],["sort",{"2":{"340":1}}],["sortby",{"2":{"340":2}}],["sorry",{"2":{"189":1,"235":1}}],["solutions",{"2":{"310":2}}],["solution",{"2":{"303":1}}],["source",{"2":{"194":10,"299":1,"307":1,"312":1}}],["sources",{"2":{"12":1,"18":1,"32":1,"307":2,"368":1}}],["somecondition",{"2":{"363":1}}],["some",{"2":{"107":1}}],["someone",{"2":{"16":1,"26":1,"309":1}}],["software",{"2":{"79":1,"304":2}}],["sonnet",{"2":{"44":1}}],["switch",{"2":{"8":1,"43":2,"64":1,"67":1,"84":1,"85":1,"89":1,"101":1,"108":1,"119":1,"136":1,"137":1,"146":1,"162":1,"169":1,"182":1,"183":1,"187":2,"206":1,"238":1,"246":1,"285":1,"292":1,"298":1,"299":1,"303":1,"304":1,"306":1,"307":1,"309":1,"346":1,"349":1,"350":1}}],["sandbox",{"2":{"212":2}}],["sales",{"2":{"106":1}}],["sashabaranov",{"2":{"43":1,"187":1}}],["samples",{"2":{"194":1}}],["samplingctx",{"2":{"238":2}}],["samplingrequest",{"2":{"185":2,"188":1,"189":1,"228":2,"229":1,"235":1,"236":1,"238":2,"270":2}}],["samplingmessage",{"2":{"39":1,"44":1,"185":3,"187":2,"188":1,"228":1,"229":1,"238":1,"270":1}}],["samplinghandler",{"2":{"39":1,"40":2,"112":1,"185":1,"240":1,"241":1}}],["sampling",{"0":{"37":1,"39":1,"110":1,"111":1,"184":1,"185":1,"188":1,"225":1,"227":1,"228":1,"229":1,"268":1,"269":1},"1":{"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"111":1,"112":1,"185":1,"186":1,"187":1,"188":1,"189":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"269":1,"270":1},"2":{"37":1,"38":2,"39":1,"40":4,"41":4,"45":4,"46":1,"48":6,"49":1,"51":1,"52":1,"53":2,"110":3,"111":1,"112":3,"167":1,"184":1,"185":11,"187":1,"188":1,"189":2,"190":2,"225":1,"226":1,"227":3,"228":4,"229":1,"230":1,"235":2,"236":1,"237":3,"238":9,"239":1,"240":3,"241":3,"242":4,"243":3,"267":2,"268":3,"269":1,"270":7,"291":1}}],["same",{"2":{"8":2,"126":1,"132":1,"162":1,"179":1,"201":1}}],["saveusertodb",{"2":{"142":2}}],["save",{"2":{"17":1,"26":1}}],["say",{"2":{"16":1,"26":1}}],["safebasedirs",{"2":{"206":2}}],["safe",{"0":{"354":1},"2":{"9":1,"206":3,"287":1,"334":1,"339":1,"342":1,"347":1,"348":1,"354":1}}],["safety",{"2":{"9":1,"14":1,"241":1,"245":1}}],["safely",{"2":{"1":1,"298":1}}],["sdk",{"0":{"6":1},"1":{"7":1,"8":1,"9":1}}],["sseserver",{"2":{"162":2,"169":2,"170":2,"194":2,"195":2,"197":1,"283":2,"284":2,"285":2}}],["sseeventhandler",{"2":{"131":11}}],["sseclient",{"2":{"130":1,"131":2}}],["sse",{"0":{"59":1,"81":1,"127":1,"128":1,"129":1,"130":1,"131":1,"165":1,"177":1,"191":1,"194":1,"195":1,"197":1,"283":1},"1":{"128":1,"129":1,"130":1,"131":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1},"2":{"5":2,"8":1,"52":1,"56":2,"59":2,"64":1,"81":2,"84":1,"89":1,"127":1,"128":2,"129":2,"130":1,"136":1,"137":5,"160":1,"162":2,"169":1,"170":3,"172":1,"173":1,"174":1,"178":1,"191":1,"192":1,"194":3,"195":2,"197":6,"198":1,"199":1,"200":2,"201":4,"224":1,"242":1,"283":3,"284":1,"285":1}}],["size",{"2":{"346":7}}],["sigchan",{"2":{"266":3}}],["sig",{"2":{"220":2}}],["sigterm",{"2":{"207":1,"220":1,"266":1,"286":1}}],["signal",{"2":{"207":4,"220":4,"266":4,"286":2}}],["since",{"2":{"98":1,"146":1,"201":1,"222":1,"253":2,"292":1,"331":1}}],["single",{"2":{"5":1,"79":1,"164":1,"180":1,"204":1,"281":1,"326":1,"361":1}}],["side",{"2":{"53":1,"110":1,"184":1,"190":1,"226":1,"243":1,"268":1}}],["simplified",{"2":{"361":1}}],["simplest",{"2":{"26":1}}],["simple",{"2":{"3":1,"5":1,"13":2,"16":1,"26":1,"162":1,"206":1,"296":1,"309":1,"314":1,"335":1}}],["similarities",{"2":{"307":1}}],["simulate",{"2":{"142":1,"194":1,"263":1,"361":1,"366":1}}],["simulated",{"2":{"41":1}}],["simultaneously",{"2":{"9":1}}],["scheme",{"2":{"355":3}}],["schematype",{"2":{"101":2}}],["schema",{"0":{"101":1,"339":1,"340":1,"341":1,"343":1,"344":1},"1":{"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1},"2":{"36":1,"67":3,"101":9,"104":1,"339":1,"340":2,"343":1,"344":1}}],["schemas",{"2":{"3":1,"334":1,"339":1,"341":1,"342":1,"346":1}}],["score",{"2":{"344":2}}],["scopes",{"2":{"124":1}}],["scanrowtomap",{"2":{"320":1}}],["scientist",{"2":{"304":2}}],["scenario",{"2":{"295":1,"303":5}}],["scenarios",{"2":{"5":1,"53":1,"56":1,"81":1,"82":1,"115":1,"140":1,"158":1,"159":1,"160":2,"164":1,"167":1,"178":1,"179":1,"190":1,"202":1,"204":2,"224":1,"243":1,"280":1,"281":1,"282":1}}],["script",{"0":{"215":1}}],["suitable",{"2":{"309":1}}],["summarization",{"2":{"269":1}}],["summary",{"2":{"258":1,"299":1,"306":3}}],["supply",{"2":{"212":1}}],["supportedin",{"2":{"161":1}}],["supportedstreamablehttpweb",{"2":{"161":1}}],["supported",{"2":{"55":1,"75":1,"115":1,"199":1,"239":1}}],["support",{"0":{"49":1,"110":1,"184":1,"239":1},"1":{"50":1,"51":1,"52":1,"111":1,"112":1,"185":1,"186":1,"187":1,"188":1,"189":1,"240":1,"241":1,"242":1},"2":{"9":1,"13":1,"14":2,"28":1,"40":1,"52":1,"68":1,"107":1,"108":1,"109":1,"111":1,"112":1,"138":1,"161":1,"191":1,"210":1,"240":1,"242":2,"303":2}}],["supporting",{"2":{"9":1}}],["supportsseweb",{"2":{"161":1}}],["supportstdiocli",{"2":{"161":1}}],["supports",{"2":{"5":1,"23":1,"108":1,"159":1,"184":1,"188":1,"229":1,"230":1,"277":1,"280":1,"337":1,"339":1,"364":1}}],["success",{"2":{"102":1,"324":1,"346":9,"358":1}}],["successfully",{"2":{"120":1,"130":1,"142":1,"263":1,"345":1,"346":2,"350":1,"357":1,"359":1}}],["successful",{"2":{"67":1,"85":1,"143":1}}],["suggested",{"2":{"298":1}}],["suggestalternativetools",{"2":{"67":2}}],["suggest",{"2":{"67":1,"310":1}}],["suggestions",{"2":{"4":1}}],["sub",{"2":{"212":1}}],["subscribe",{"2":{"108":3,"109":2,"128":2,"130":2,"131":1,"195":2}}],["subscriber",{"2":{"108":3,"109":7}}],["subscriptionmanager",{"2":{"109":9}}],["subscription",{"0":{"108":1,"109":1},"2":{"108":1,"109":2}}],["subscriptions",{"0":{"107":1},"1":{"108":1,"109":1},"2":{"91":1,"107":1,"108":2,"109":1}}],["subprocess",{"0":{"212":1},"2":{"57":1,"116":1,"117":1,"204":1,"209":1,"212":1}}],["subtract",{"2":{"3":1,"20":1,"182":2,"246":2,"267":1,"335":1,"349":1}}],["several",{"2":{"348":1}}],["severity",{"2":{"264":3}}],["sequences",{"2":{"188":1,"229":1}}],["seamless",{"2":{"179":1}}],["searchdatabase",{"2":{"342":1}}],["searchproductshandler",{"2":{"342":2}}],["searchresponse",{"2":{"341":2,"342":3}}],["searchrequest",{"2":{"340":2,"341":1,"342":3}}],["searchtool",{"2":{"340":1,"341":1,"342":2}}],["searchusersindb",{"2":{"142":2}}],["search",{"2":{"3":1,"142":5,"148":1,"340":3,"341":5,"342":4,"361":1,"364":3}}],["seh",{"2":{"131":27}}],["selecttransport",{"2":{"136":4}}],["select",{"2":{"64":2,"68":1,"71":1,"86":1,"108":1,"109":1,"120":3,"125":2,"130":3,"131":1,"169":1,"170":1,"194":2,"219":1,"223":1,"264":2,"320":1,"351":2,"366":1}}],["selection",{"0":{"135":1,"169":1},"1":{"136":1,"137":1},"2":{"47":1}}],["sees",{"2":{"212":1}}],["see",{"2":{"53":1,"69":1,"112":1,"243":1,"270":1}}],["separately",{"2":{"50":1}}],["sec",{"2":{"266":1}}],["secret",{"2":{"124":1,"155":2}}],["sections",{"2":{"293":1}}],["section",{"2":{"74":1,"289":1}}],["seconds",{"2":{"69":2,"257":2}}],["second",{"2":{"30":1,"31":1,"58":1,"64":1,"67":3,"68":2,"69":3,"86":1,"109":1,"120":2,"123":2,"129":1,"130":1,"143":1,"182":1,"194":2,"195":1,"197":1,"207":1,"211":1,"219":1,"220":1,"236":1,"238":1,"258":1,"266":1,"267":1,"329":1,"335":1,"351":1,"352":1}}],["security",{"0":{"175":1},"1":{"176":1,"177":1},"2":{"12":1,"177":1,"206":1,"219":1,"298":4,"320":1,"346":1,"350":1,"351":1}}],["secure",{"2":{"5":1,"12":1,"161":1,"177":1}}],["setconnmaxlifetime",{"2":{"222":1}}],["setcache",{"2":{"143":1}}],["setmaxidleconns",{"2":{"222":1}}],["setmaxopenconns",{"2":{"222":1}}],["setsseconfig",{"2":{"137":2}}],["setstreamablehttpconfig",{"2":{"137":2}}],["setstdioconfig",{"2":{"137":2}}],["setheader",{"2":{"128":1,"130":2}}],["set",{"2":{"44":3,"58":2,"59":1,"98":2,"128":1,"130":1,"137":3,"146":2,"197":2,"236":1,"237":1,"352":1}}],["settings",{"2":{"9":1,"250":2,"317":1,"330":1}}],["setupsignalhandling",{"2":{"220":2}}],["setupserver",{"2":{"170":2}}],["setupgracefulshutdown",{"2":{"207":2}}],["setup",{"2":{"5":1,"185":1,"187":1,"216":1,"220":1,"227":1,"266":1,"289":1}}],["sessionwithclientinfo",{"2":{"267":1}}],["session=",{"2":{"253":5}}],["sessionmanager",{"2":{"250":6,"251":5,"260":5,"266":2}}],["sessionid",{"2":{"9":6,"126":3,"143":2,"154":2,"250":6,"251":2,"253":7,"254":6,"257":8,"258":9,"260":2,"264":7}}],["sessionstate",{"2":{"9":2,"250":5,"260":1}}],["sessions",{"2":{"9":4,"154":6,"199":1,"250":5,"257":4,"260":1,"264":7}}],["session",{"0":{"9":1,"126":1,"151":1,"199":1,"249":1,"250":1,"251":1},"1":{"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"250":1,"251":1},"2":{"9":5,"126":7,"145":1,"154":11,"199":2,"244":1,"249":1,"250":2,"251":15,"254":1,"257":4,"258":2,"260":4,"261":1,"264":1,"267":4,"286":5,"289":1}}],["serialization",{"2":{"8":1,"51":1,"161":1,"172":1,"241":1}}],["service",{"2":{"46":1,"202":1,"224":1,"261":1,"303":1}}],["services",{"2":{"5":1,"56":1,"115":1,"140":3,"161":1,"166":2,"178":1,"282":1}}],["serve",{"2":{"295":1,"315":1,"322":1}}],["servesse",{"2":{"5":1,"8":1,"23":1}}],["servestdio",{"2":{"5":1,"7":1,"8":1,"16":1,"23":1,"26":1,"162":1,"169":1,"170":1,"206":1,"207":1,"216":1,"220":1,"227":1,"238":1,"240":1,"246":1,"251":1,"266":1,"267":1,"274":1,"281":1,"285":1,"286":1,"287":1,"292":1,"298":1,"316":1,"330":1,"342":1,"346":1,"350":1}}],["servehttp",{"2":{"5":1,"8":1,"155":1}}],["serverfromcontext",{"2":{"194":2,"198":1,"201":1,"263":1}}],["servername",{"2":{"89":6}}],["serverpath",{"2":{"41":2,"45":1}}],["serverinfo",{"2":{"30":6,"31":6,"63":2}}],["server",{"0":{"7":1,"16":1,"17":1,"22":1,"26":1,"27":1,"34":1,"89":1,"142":1,"170":1,"182":1,"194":1,"197":1,"206":1,"207":1,"244":1,"266":1,"272":1,"273":1,"274":1,"275":1,"276":1,"283":1,"286":1},"1":{"28":1,"29":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"273":1,"274":2,"275":2,"276":1,"277":2,"278":2,"279":2,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1},"2":{"5":4,"7":5,"8":7,"9":7,"14":1,"15":1,"16":8,"17":1,"18":1,"20":1,"22":6,"23":5,"25":1,"26":12,"28":2,"29":1,"30":2,"31":1,"32":1,"35":1,"38":1,"40":2,"41":2,"48":5,"50":1,"53":1,"55":1,"56":1,"57":2,"58":1,"62":1,"63":2,"64":1,"77":1,"79":2,"82":1,"84":1,"89":1,"98":1,"108":1,"112":1,"117":2,"118":1,"119":2,"127":1,"133":4,"134":10,"137":1,"142":8,"143":21,"145":2,"146":5,"153":1,"158":2,"160":1,"162":12,"169":4,"170":16,"177":5,"182":5,"183":6,"185":6,"190":1,"191":1,"192":1,"194":11,"195":13,"197":8,"198":4,"199":3,"201":1,"206":7,"207":13,"209":1,"210":2,"211":1,"212":5,"214":2,"215":2,"216":9,"217":1,"220":7,"227":8,"237":1,"238":9,"240":2,"243":1,"246":5,"251":10,"253":6,"254":3,"255":2,"257":4,"260":1,"262":1,"263":1,"266":17,"267":7,"268":1,"269":1,"270":1,"271":1,"273":2,"274":8,"275":8,"277":14,"278":4,"279":5,"281":4,"282":5,"283":5,"284":8,"285":5,"286":9,"287":9,"288":1,"289":1,"291":1,"292":18,"293":2,"298":4,"311":1,"316":4,"320":1,"330":5,"334":1,"342":3,"346":3,"350":3,"360":1,"367":1}}],["servers",{"0":{"280":1,"289":1},"1":{"281":1,"282":1,"283":1,"284":1,"290":1,"291":1,"292":1,"293":1},"2":{"0":1,"5":1,"7":4,"13":1,"14":1,"15":1,"30":1,"31":1,"37":2,"38":1,"74":1,"75":1,"91":1,"110":3,"111":2,"116":1,"121":1,"127":1,"132":1,"139":1,"140":1,"160":1,"167":2,"179":1,"180":1,"184":2,"191":1,"204":1,"209":1,"225":1,"226":2,"244":1,"268":3,"272":1,"285":1,"289":1,"290":2,"291":1}}],["sensitive",{"2":{"47":1,"258":1}}],["sent",{"0":{"283":1},"2":{"5":1,"14":1,"23":1,"127":1,"156":1,"160":1,"191":1,"198":1,"200":1}}],["sendnotificationtoallclients",{"2":{"263":1}}],["sendnotificationtoclient",{"2":{"194":2,"198":1,"199":1}}],["sendwelcome",{"2":{"258":1}}],["sendalert",{"2":{"258":2,"264":1}}],["sending",{"2":{"215":1}}],["send",{"2":{"3":1,"38":1,"88":2,"188":1,"194":4,"195":2,"198":3,"199":3,"214":1,"215":6,"229":1,"258":1,"262":1,"263":1}}],["step",{"2":{"263":1}}],["steps",{"0":{"53":1,"73":1,"90":1,"113":1,"158":1,"178":1,"190":1,"202":1,"224":1,"243":1,"271":1,"288":1,"293":1,"311":1,"332":1,"368":1},"2":{"310":3}}],["story",{"2":{"310":3}}],["store",{"2":{"155":2}}],["storage",{"2":{"153":1}}],["stopped",{"2":{"266":1}}],["stopping",{"2":{"257":1}}],["stops",{"2":{"257":1}}],["stopsequences",{"2":{"188":1,"229":1}}],["stop",{"2":{"43":2,"44":1,"71":1,"109":3,"131":1,"187":2,"188":1,"194":1,"229":1}}],["stopreason",{"2":{"39":1,"41":1,"43":6,"44":3,"112":1,"185":1,"187":6}}],["stdout",{"2":{"209":1,"266":1}}],["stdin",{"2":{"209":1}}],["stdiooptions",{"2":{"120":2,"137":2}}],["stdioclient",{"2":{"119":1,"120":1}}],["stdiotransport",{"2":{"30":2,"40":2,"41":2,"45":2,"50":2}}],["stdio",{"0":{"50":1,"57":1,"79":1,"116":1,"117":1,"118":1,"119":1,"120":1,"164":1,"176":1,"203":1,"206":1,"207":1,"240":1,"281":1},"1":{"117":1,"118":1,"119":1,"120":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"5":2,"8":1,"14":1,"16":1,"17":1,"23":1,"26":1,"30":1,"35":2,"40":1,"41":1,"50":1,"56":1,"57":2,"64":1,"77":1,"79":1,"84":1,"116":1,"118":1,"119":1,"120":1,"136":2,"137":5,"160":1,"162":1,"170":3,"172":1,"173":1,"174":1,"178":1,"203":1,"204":1,"206":1,"209":1,"210":1,"211":1,"212":1,"214":1,"215":1,"216":2,"240":2,"274":1,"281":1}}],["stderr",{"2":{"206":1}}],["stdencoding",{"2":{"97":1,"325":1,"346":1,"350":1}}],["str",{"2":{"301":4}}],["strategies",{"2":{"47":1,"310":1}}],["stream",{"2":{"194":3,"197":1,"206":1,"223":1,"361":1}}],["streamablehttpcoption",{"2":{"137":1}}],["streamablehttpclientpool",{"2":{"125":6}}],["streamablehttp",{"0":{"31":1,"58":1,"80":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"139":1,"142":1,"143":1,"166":1},"1":{"122":1,"123":1,"124":1,"125":1,"126":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1},"2":{"14":1,"23":1,"31":4,"35":1,"52":1,"56":1,"58":2,"64":1,"80":1,"121":1,"122":1,"123":1,"124":1,"126":2,"136":1,"137":4,"139":1,"140":1,"142":3,"143":2,"145":1,"146":2,"156":1,"160":1,"162":2,"169":1,"170":3,"178":1,"200":1,"242":1}}],["streaming❌",{"2":{"161":1}}],["streaming",{"0":{"366":1},"2":{"5":2,"81":1,"192":2,"242":1,"283":1,"366":1}}],["structs",{"0":{"340":1,"341":1},"2":{"339":1}}],["struct",{"0":{"339":1},"1":{"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1},"2":{"9":1,"39":1,"41":1,"43":1,"44":3,"64":3,"68":1,"71":1,"72":1,"84":1,"88":1,"89":1,"98":2,"102":2,"105":1,"109":1,"112":1,"120":5,"125":1,"130":4,"131":1,"134":1,"136":1,"137":5,"138":1,"142":1,"154":2,"155":2,"183":2,"185":1,"187":1,"222":1,"246":2,"247":3,"248":1,"250":2,"253":1,"254":1,"255":1,"257":1,"258":1,"260":1,"261":1,"264":1,"310":1,"330":1,"331":2,"340":4,"341":3,"342":1,"343":4,"344":2,"346":4,"348":1,"351":4,"355":1}}],["structure",{"0":{"296":1,"314":1,"335":1},"2":{"4":1,"294":1}}],["structured",{"0":{"342":1,"345":1,"346":1},"2":{"3":2,"4":1,"295":1,"334":1,"339":1,"341":2,"342":2,"343":1,"345":1,"346":4,"348":1,"355":1,"363":1}}],["strings",{"2":{"41":1,"46":1,"93":1,"97":1,"142":3,"155":2,"206":6,"223":1,"248":3,"299":4,"303":1,"304":1,"307":2,"309":1,"310":1,"319":1,"346":1,"350":1,"351":3,"352":1,"361":1}}],["string",{"2":{"9":5,"26":2,"30":1,"31":1,"39":2,"41":2,"43":3,"44":12,"57":2,"58":2,"59":2,"62":1,"64":1,"67":2,"69":1,"77":2,"84":1,"85":1,"88":3,"89":8,"94":2,"96":3,"97":6,"98":5,"100":3,"101":9,"102":5,"104":3,"105":8,"106":6,"109":4,"117":1,"118":5,"123":2,"124":1,"125":1,"129":2,"130":7,"131":3,"133":2,"134":7,"136":3,"137":27,"138":2,"142":9,"143":2,"146":2,"153":2,"154":8,"155":3,"169":1,"182":1,"183":3,"185":8,"187":3,"188":1,"194":8,"198":1,"206":10,"207":2,"211":1,"212":4,"219":1,"222":4,"223":1,"228":6,"229":1,"238":8,"246":3,"247":9,"248":4,"250":10,"251":3,"254":3,"257":12,"258":3,"260":3,"261":3,"263":1,"264":9,"270":4,"292":5,"298":3,"299":3,"301":14,"303":1,"304":3,"306":2,"307":2,"309":4,"310":9,"316":1,"317":3,"319":3,"320":3,"321":1,"324":2,"326":2,"328":1,"329":1,"330":4,"331":1,"337":6,"338":1,"340":3,"341":3,"343":5,"344":3,"346":9,"348":1,"351":4,"352":5,"354":1,"355":3,"358":3,"359":1,"361":1,"364":2,"366":3,"367":1}}],["stages",{"0":{"61":1}}],["startwithgracefulshutdown",{"2":{"266":2}}],["startup",{"2":{"209":1,"287":1}}],["starts",{"2":{"206":1,"257":1}}],["startserver",{"2":{"169":1}}],["starttime",{"2":{"146":1,"250":2}}],["starting",{"0":{"280":1},"1":{"281":1,"282":1,"283":1,"284":1},"2":{"142":1,"143":1,"146":1,"162":3,"170":3,"194":1,"195":1,"209":1,"215":1,"216":1,"238":1,"257":1}}],["start",{"0":{"25":1,"34":1},"1":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"2":{"16":1,"23":1,"26":2,"30":3,"40":3,"41":3,"69":1,"71":1,"109":4,"120":3,"131":1,"142":2,"143":1,"145":1,"162":2,"169":2,"170":3,"185":3,"194":2,"195":1,"206":1,"207":1,"214":1,"220":1,"227":1,"238":1,"240":1,"253":4,"266":2,"272":1,"274":1,"281":1,"282":2,"283":2,"284":2,"285":2,"292":4,"293":1,"303":1}}],["started",{"0":{"10":1},"1":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"2":{"14":1,"251":1,"253":2,"257":2}}],["standardclaims",{"2":{"155":1}}],["standardized",{"2":{"12":1}}],["standard",{"0":{"145":1,"148":1,"149":1},"2":{"5":2,"12":1,"116":1,"160":1,"203":1,"281":1}}],["statistical",{"2":{"304":1}}],["statistics",{"2":{"299":1}}],["static",{"0":{"315":1},"1":{"316":1,"317":1},"2":{"2":2,"21":1,"313":1,"315":1,"316":1}}],["stat",{"2":{"219":1,"346":2}}],["stateless",{"0":{"152":1,"153":1},"1":{"153":1,"154":1},"2":{"52":1,"139":1,"140":1,"166":1,"242":1}}],["state",{"0":{"250":1},"2":{"9":6,"153":1,"192":1,"249":1,"261":1}}],["stateful",{"0":{"152":1,"154":1},"1":{"153":1,"154":1},"2":{"7":1}}],["statuscode",{"2":{"352":1}}],["statusunauthorized",{"2":{"155":3}}],["statusmethodnotallowed",{"2":{"146":1}}],["status",{"2":{"3":1,"146":4,"183":4,"198":1,"247":3,"324":1,"344":2,"345":1,"346":1,"352":1,"358":1,"366":1}}],["s",{"0":{"18":1,"32":1},"2":{"2":1,"5":3,"7":4,"8":4,"9":3,"14":1,"16":5,"21":1,"22":1,"23":3,"26":5,"28":2,"30":5,"31":2,"41":5,"62":2,"63":2,"64":1,"67":5,"77":7,"84":1,"89":4,"92":1,"93":4,"96":10,"97":2,"100":5,"101":4,"102":1,"104":8,"108":3,"109":1,"133":3,"134":3,"136":3,"137":1,"142":20,"143":16,"146":2,"153":1,"162":8,"169":5,"170":6,"177":1,"182":5,"183":4,"185":5,"194":7,"195":9,"197":1,"199":1,"201":1,"206":7,"207":14,"211":2,"216":5,"219":3,"220":2,"228":1,"238":3,"246":3,"251":5,"253":11,"254":1,"257":2,"258":3,"266":8,"267":3,"268":1,"270":1,"274":2,"275":1,"277":2,"278":1,"279":1,"281":2,"282":2,"283":2,"284":2,"285":4,"286":7,"287":2,"292":7,"298":7,"299":6,"301":1,"303":4,"304":3,"306":4,"307":6,"309":5,"310":2,"316":3,"317":1,"319":1,"320":3,"321":3,"326":2,"328":3,"329":1,"330":3,"333":1,"337":2,"342":3,"345":1,"346":5,"349":1,"350":4,"359":1,"360":1,"361":3,"362":2,"364":1,"367":3}}],["tc",{"2":{"134":17}}],["tmp",{"2":{"118":1,"206":2}}],["tlsclientconfig",{"2":{"123":1}}],["tls",{"2":{"117":1,"123":1,"177":1}}],["ttl",{"2":{"98":5,"331":2}}],["typically",{"2":{"92":1,"116":1,"169":1,"209":1,"299":1,"315":1}}],["types",{"0":{"66":1,"78":1,"230":1,"232":1,"302":1,"322":1,"326":1,"337":1,"356":1,"359":1},"1":{"79":1,"80":1,"81":1,"82":1,"231":1,"232":1,"233":2,"234":2,"303":1,"304":1,"323":1,"324":1,"325":1,"326":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1},"2":{"3":1,"36":1,"97":1,"101":1,"142":1,"157":2,"201":2,"230":1,"246":1,"277":1,"322":2,"334":1,"337":1,"361":1}}],["type",{"0":{"354":1},"2":{"2":1,"9":1,"14":2,"26":2,"39":2,"41":2,"43":2,"44":6,"64":2,"68":1,"71":1,"72":1,"84":2,"88":1,"89":2,"96":1,"98":2,"100":1,"101":2,"102":2,"105":1,"106":1,"109":2,"112":2,"120":1,"125":1,"130":1,"131":1,"134":1,"136":1,"137":1,"138":1,"142":1,"146":2,"148":1,"149":1,"154":2,"155":2,"183":2,"185":8,"187":2,"188":1,"189":1,"206":1,"222":1,"228":6,"229":1,"231":2,"233":1,"234":1,"235":1,"238":7,"241":2,"245":1,"246":2,"247":2,"248":1,"250":2,"251":2,"253":1,"254":1,"255":1,"257":1,"258":1,"260":1,"261":1,"263":1,"264":3,"270":5,"299":1,"306":1,"307":2,"310":1,"331":2,"334":1,"337":3,"339":1,"340":1,"341":2,"342":1,"343":1,"344":1,"346":2,"348":3,"355":2,"359":2,"361":1,"362":1,"363":1,"364":1}}],["typed",{"0":{"97":1,"245":1,"246":1,"247":1},"1":{"246":1,"247":1,"248":1},"2":{"2":1,"3":1,"244":1,"245":1,"246":3,"267":1,"289":1,"291":1,"311":1,"342":2,"368":1}}],["t",{"0":{"34":1},"2":{"34":1,"68":6,"86":1,"101":9,"110":1,"134":5,"169":1,"183":1,"189":1,"206":2,"235":1,"242":1,"268":1}}],["trimspace",{"2":{"351":1}}],["trimmed",{"2":{"351":2}}],["trimprefix",{"2":{"155":1,"206":1}}],["trigger",{"2":{"120":1,"130":1}}],["trends",{"2":{"106":1}}],["truncatestring",{"2":{"96":2}}],["true",{"2":{"22":1,"26":2,"68":1,"72":2,"98":1,"136":3,"142":3,"143":4,"154":1,"162":1,"182":1,"183":3,"185":1,"189":1,"194":3,"195":4,"206":4,"207":4,"216":1,"222":1,"228":1,"235":1,"238":1,"246":1,"251":1,"260":2,"261":6,"266":3,"267":1,"270":1,"275":3,"277":6,"284":2,"292":3,"298":1,"309":1,"316":1,"317":1,"320":3,"330":1,"337":1,"346":3,"350":1,"354":1,"363":1}}],["try",{"2":{"46":1,"71":1,"120":1}}],["traversal",{"2":{"206":1,"248":1,"346":1,"350":1}}],["trading",{"2":{"167":1}}],["traditional",{"2":{"5":1,"121":1,"139":1,"140":1,"160":1,"166":1,"178":1,"202":1,"224":1,"282":1}}],["tracing",{"2":{"157":1,"194":1,"201":1}}],["transportuse",{"2":{"161":1}}],["transportrequirements",{"2":{"136":5}}],["transportbest",{"2":{"115":1}}],["transport",{"0":{"8":1,"23":1,"49":1,"50":1,"51":1,"78":1,"115":1,"135":1,"137":1,"139":1,"159":1,"161":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"170":1,"176":1,"179":1,"191":1,"203":1,"239":1,"240":1,"241":1,"281":1,"282":1,"284":1},"1":{"50":1,"51":1,"52":1,"79":1,"80":1,"81":1,"82":1,"136":1,"137":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"160":1,"161":1,"162":1,"163":1,"164":2,"165":2,"166":2,"167":2,"168":1,"169":2,"170":2,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"240":1,"241":1,"242":1},"2":{"5":4,"8":6,"14":1,"23":1,"30":4,"31":5,"39":1,"40":2,"41":2,"45":1,"50":2,"53":1,"55":2,"58":2,"73":1,"74":1,"76":1,"90":1,"113":1,"114":2,"115":1,"118":2,"123":6,"124":2,"126":2,"129":3,"136":1,"137":13,"138":1,"139":1,"140":1,"156":1,"157":1,"158":2,"159":2,"160":2,"162":7,"169":2,"170":2,"178":5,"179":1,"180":1,"184":1,"190":1,"191":1,"192":1,"198":1,"200":2,"201":1,"202":2,"203":2,"204":1,"224":3,"240":1,"241":1,"242":2,"272":1,"274":1,"280":1,"284":1,"285":4}}],["transports",{"0":{"5":1,"52":1,"114":1,"177":1,"242":1},"1":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1},"2":{"5":2,"14":1,"49":1,"52":1,"73":1,"75":1,"76":1,"90":1,"107":1,"113":1,"115":1,"137":1,"138":1,"170":1,"190":1,"202":1,"239":1,"242":2}}],["table",{"2":{"320":9}}],["tableresource",{"2":{"7":1}}],["task",{"2":{"301":4,"304":5,"338":1}}],["tasks",{"2":{"38":1,"226":1,"295":1}}],["tags",{"0":{"344":1},"2":{"247":5,"337":2,"340":1,"344":3}}],["take",{"2":{"3":1,"20":1,"333":1,"366":1}}],["title",{"2":{"299":1,"303":1,"304":1,"307":1}}],["ticker",{"2":{"71":3,"154":1,"194":3}}],["ticket",{"2":{"3":1}}],["timeofday",{"2":{"261":2}}],["timeout",{"0":{"69":1,"329":1},"2":{"58":1,"64":5,"66":1,"67":1,"69":1,"71":5,"119":1,"129":1,"194":2,"219":1,"236":2,"238":1,"266":1,"329":2,"337":1,"348":2,"351":1,"352":2}}],["timeouts",{"0":{"236":1},"2":{"47":1,"237":2}}],["timehttp",{"2":{"115":1}}],["timemulti",{"2":{"115":1,"161":1}}],["timed",{"2":{"67":1,"69":1,"119":1,"219":1}}],["time",{"0":{"198":1},"1":{"199":1,"200":1,"201":1},"2":{"5":3,"30":2,"31":2,"56":1,"57":1,"58":1,"64":4,"67":4,"68":6,"69":5,"71":4,"81":1,"84":1,"86":3,"93":1,"98":6,"107":1,"109":2,"117":1,"120":4,"123":2,"127":1,"129":1,"130":3,"136":1,"142":5,"143":4,"146":2,"154":18,"161":2,"165":2,"167":1,"178":1,"189":1,"191":1,"192":2,"194":13,"195":4,"197":1,"198":3,"207":2,"211":2,"219":1,"220":3,"222":5,"224":1,"235":1,"236":1,"238":2,"241":1,"245":1,"246":1,"247":3,"250":3,"253":4,"257":2,"258":2,"261":1,"262":1,"263":2,"264":2,"266":1,"283":2,"292":11,"324":1,"329":1,"331":5,"341":2,"342":1,"345":1,"346":3,"351":1,"352":1,"358":1,"366":3}}],["timestr",{"2":{"292":4}}],["timestamp",{"2":{"98":3,"146":1,"198":1,"222":2,"264":2,"324":1,"331":3,"358":1}}],["times",{"2":{"4":1}}],["terms",{"2":{"309":1}}],["terminated",{"2":{"126":2,"281":1}}],["technical",{"2":{"303":3,"309":2,"310":1}}],["tell",{"2":{"277":1}}],["telemetryhooks",{"2":{"257":9,"266":2}}],["telemetry",{"2":{"256":1}}],["tenant",{"2":{"140":1}}],["temperature",{"2":{"39":4,"41":2,"43":2,"44":3,"185":1,"187":2,"188":2,"228":1,"229":2,"238":1,"270":1}}],["templatename",{"2":{"310":3}}],["templates",{"0":{"297":1,"319":1},"1":{"298":1,"299":1},"2":{"4":2,"18":1,"32":1,"103":1,"277":1,"288":1,"291":1,"294":1,"295":1,"318":1,"332":1,"368":1}}],["template",{"0":{"105":1,"310":1},"2":{"2":1,"4":1,"105":1,"310":11}}],["testreq",{"2":{"136":2}}],["testwithinprocessclient",{"2":{"134":1}}],["tests",{"2":{"134":1}}],["testserver",{"2":{"59":1}}],["testclient",{"2":{"134":9}}],["test",{"2":{"28":1,"29":1,"41":1,"48":2,"57":1,"133":5,"134":3,"182":1,"211":1,"214":2,"215":4,"217":1,"362":2}}],["testingno",{"2":{"161":1}}],["testing",{"0":{"28":1,"29":1,"48":1,"134":1,"214":1,"215":1},"2":{"7":1,"41":1,"56":1,"79":1,"82":1,"134":1,"136":2,"164":1,"167":2,"180":3,"204":1}}],["textdata",{"2":{"326":2}}],["textresourcecontent",{"2":{"317":1,"320":1,"329":1}}],["textresourcecontents",{"2":{"142":1,"194":1,"206":1,"292":1,"319":1,"324":1,"328":1}}],["textcontent",{"2":{"26":2,"30":3,"39":1,"41":4,"43":4,"44":4,"105":1,"112":1,"182":2,"183":2,"185":11,"187":4,"188":1,"189":1,"228":3,"229":1,"231":2,"233":1,"235":1,"238":4,"270":3}}],["text",{"0":{"233":1,"323":1,"357":1},"2":{"2":2,"21":1,"26":4,"30":1,"39":2,"41":3,"43":3,"44":11,"77":1,"96":3,"97":4,"100":2,"104":1,"105":1,"108":1,"112":2,"134":1,"142":1,"149":2,"182":2,"183":2,"185":11,"187":3,"188":2,"189":2,"194":1,"204":1,"206":4,"228":6,"229":2,"231":4,"233":3,"235":2,"237":1,"238":8,"269":1,"270":6,"292":1,"314":1,"316":3,"317":1,"319":1,"320":1,"321":1,"323":3,"324":1,"326":4,"328":1,"329":1,"330":1,"345":2,"359":4,"361":2,"363":2}}],["txt",{"2":{"2":1,"206":3,"361":2}}],["toupper",{"2":{"351":1}}],["today",{"2":{"303":1}}],["todo",{"2":{"138":2,"267":1}}],["tone",{"2":{"301":3}}],["took",{"2":{"258":1}}],["tool=",{"2":{"253":3}}],["toolmiddleware",{"2":{"253":1,"254":1,"255":1,"266":1}}],["toolinputschema",{"2":{"185":1,"228":1,"238":1,"270":1}}],["toolresult",{"2":{"102":4}}],["toolcall",{"2":{"88":4,"102":9}}],["toolcalls",{"2":{"88":2}}],["toolname",{"2":{"67":4,"89":2,"101":4,"143":3,"257":4,"258":5,"260":2}}],["toolhandlerfunc",{"2":{"253":2}}],["toolhandler",{"2":{"9":1,"134":1,"143":4,"251":1,"254":2,"255":2}}],["tool",{"0":{"36":1,"100":1,"101":1,"102":1,"246":1,"247":1,"259":1,"334":1,"335":1,"336":1,"342":1,"347":1,"350":1,"351":1,"352":1,"364":1,"365":1},"1":{"260":1,"261":1,"335":1,"337":1,"338":1,"348":1,"349":1,"350":1,"351":1,"352":1,"366":1,"367":1},"2":{"3":2,"4":1,"16":5,"26":5,"28":2,"30":5,"31":3,"32":1,"36":2,"41":2,"62":6,"66":1,"67":14,"69":8,"77":10,"85":3,"88":3,"89":2,"100":11,"101":11,"108":2,"119":2,"133":4,"134":4,"136":2,"143":2,"145":1,"156":1,"162":1,"180":1,"182":1,"183":2,"185":5,"200":1,"206":1,"207":1,"211":5,"214":1,"215":1,"216":1,"217":1,"228":2,"237":1,"238":2,"242":1,"246":4,"251":1,"253":3,"257":3,"258":2,"260":7,"261":10,"270":2,"292":1,"335":2,"340":1,"341":2,"342":2,"343":1,"346":2,"347":1,"350":1,"361":1,"364":2}}],["toolscapability",{"2":{"63":1,"182":1,"183":1}}],["toolsresult",{"2":{"30":3}}],["toolsrequest",{"2":{"30":2}}],["tools",{"0":{"3":1,"20":1,"99":1,"245":1,"251":1,"333":1,"367":1},"1":{"100":1,"101":1,"102":1,"246":1,"247":1,"248":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1},"2":{"3":2,"5":1,"7":5,"12":1,"13":1,"14":1,"18":2,"20":1,"29":1,"30":6,"31":1,"32":1,"41":1,"56":1,"61":1,"62":8,"63":1,"67":10,"71":1,"73":1,"75":1,"76":1,"77":12,"88":5,"89":4,"90":1,"91":1,"99":1,"100":12,"101":4,"108":2,"115":1,"117":4,"122":4,"128":4,"131":1,"133":1,"142":1,"143":4,"145":3,"148":2,"160":1,"161":1,"164":3,"165":1,"170":2,"182":1,"183":3,"192":2,"194":1,"195":1,"203":1,"204":4,"206":1,"207":1,"210":1,"211":7,"214":4,"215":4,"216":1,"217":1,"222":1,"226":1,"227":1,"244":1,"245":1,"249":1,"257":3,"259":1,"260":4,"261":4,"266":1,"275":1,"277":2,"281":2,"283":1,"288":1,"289":1,"290":1,"291":2,"293":1,"311":3,"332":1,"333":1,"334":1,"339":1,"343":1,"350":1,"360":1,"364":1,"367":3,"368":1}}],["topp",{"2":{"188":1,"229":1}}],["top",{"2":{"188":1,"229":1}}],["topic",{"2":{"90":1,"195":1,"309":7}}],["tokenvalidator",{"2":{"255":5}}],["token",{"2":{"124":1,"128":1,"129":1,"137":2,"143":5,"155":11,"255":6}}],["tokenurl",{"2":{"124":1}}],["tokenstring",{"2":{"155":2}}],["tokens",{"2":{"41":1,"44":1,"188":1,"229":1}}],["totalcount",{"2":{"341":2,"342":1}}],["total",{"2":{"108":1,"142":3,"149":1,"194":1,"263":1,"341":1}}],["to",{"0":{"111":1,"269":1},"2":{"1":1,"2":2,"3":2,"4":2,"5":1,"7":4,"8":1,"12":1,"13":1,"15":2,"16":2,"17":2,"21":1,"26":2,"28":2,"30":8,"31":4,"32":1,"37":2,"38":4,"40":3,"41":3,"43":1,"44":2,"47":1,"50":1,"52":1,"57":4,"58":1,"63":1,"64":1,"67":2,"69":1,"71":1,"72":2,"73":1,"74":2,"75":3,"77":4,"84":1,"88":2,"89":2,"91":2,"92":2,"93":1,"96":3,"97":2,"100":1,"101":1,"104":3,"106":2,"108":4,"109":3,"110":4,"111":4,"112":1,"114":1,"117":1,"118":2,"119":4,"120":1,"126":1,"128":1,"130":1,"133":1,"142":1,"143":1,"155":1,"156":2,"159":1,"170":1,"182":1,"183":1,"184":1,"185":6,"187":1,"188":5,"194":2,"195":2,"198":4,"199":3,"200":2,"206":8,"209":1,"210":1,"211":1,"212":6,"215":1,"216":1,"225":1,"226":2,"227":1,"228":2,"229":5,"237":3,"238":2,"246":1,"247":1,"251":1,"255":1,"262":1,"263":1,"267":1,"268":2,"269":1,"270":1,"271":1,"272":1,"275":1,"277":1,"278":1,"284":2,"288":3,"289":2,"290":2,"291":2,"292":1,"293":3,"295":2,"296":1,"298":2,"299":2,"303":1,"306":2,"307":1,"309":1,"310":1,"311":1,"312":2,"313":1,"316":1,"318":1,"321":1,"328":2,"332":1,"333":1,"334":1,"335":1,"339":1,"342":1,"346":3,"350":2,"351":5,"352":3,"354":1,"358":1,"360":3,"361":1,"364":2,"366":1,"367":1,"368":1}}],["thoughtful",{"2":{"303":1,"306":1}}],["throughput",{"0":{"173":1}}],["through",{"2":{"20":1,"25":1,"91":1,"116":1,"198":1,"321":1,"362":1}}],["thread",{"2":{"9":1}}],["this",{"2":{"15":1,"25":1,"26":1,"29":1,"39":1,"41":1,"45":2,"74":1,"110":1,"155":1,"156":1,"157":1,"169":1,"184":1,"189":1,"200":1,"201":1,"212":1,"217":1,"226":1,"235":1,"264":1,"268":1,"273":1,"278":1,"289":1,"299":1,"306":3,"310":2,"323":1,"339":1,"360":1}}],["things",{"2":{"3":1,"279":1}}],["think",{"2":{"2":1,"312":1,"333":1}}],["than",{"2":{"3":1,"8":1,"242":1}}],["that",{"2":{"1":1,"2":1,"3":1,"4":1,"6":1,"12":1,"18":1,"20":1,"32":1,"34":1,"37":1,"41":1,"57":1,"74":1,"99":1,"110":3,"111":1,"117":1,"138":1,"156":1,"185":2,"191":1,"192":1,"200":1,"201":1,"204":1,"212":2,"225":1,"226":1,"227":1,"244":1,"268":2,"269":1,"270":1,"279":1,"288":1,"292":2,"294":1,"295":1,"306":1,"307":1,"312":1,"333":2,"334":1,"343":1,"360":1,"366":1,"367":1}}],["these",{"2":{"136":1,"145":1,"242":1}}],["then",{"2":{"38":1,"293":1}}],["their",{"2":{"2":1,"52":1,"95":1}}],["they",{"2":{"2":1,"3":1,"20":1,"21":1,"206":2,"294":1,"295":1,"313":1,"334":1}}],["them",{"2":{"0":1,"2":1,"312":1,"333":1}}],["the",{"0":{"40":1,"163":1},"1":{"164":1,"165":1,"166":1,"167":1},"2":{"0":1,"1":1,"2":1,"3":1,"4":1,"6":2,"8":1,"12":1,"13":1,"16":2,"17":1,"18":1,"20":1,"21":1,"24":4,"26":3,"28":2,"29":3,"30":4,"31":3,"34":1,"35":1,"36":2,"38":2,"39":1,"40":4,"41":4,"45":4,"48":3,"49":1,"50":1,"51":1,"53":1,"54":1,"55":2,"60":1,"61":1,"62":1,"63":2,"67":1,"69":1,"77":1,"88":1,"98":1,"112":3,"114":1,"117":1,"118":1,"126":4,"132":1,"138":1,"142":1,"143":1,"156":3,"157":2,"159":1,"160":1,"162":2,"169":1,"170":1,"179":1,"182":3,"183":3,"185":9,"186":1,"187":1,"188":2,"189":1,"194":1,"195":1,"197":2,"198":3,"199":3,"200":4,"201":7,"203":1,"206":4,"207":1,"209":1,"212":8,"214":1,"217":1,"225":1,"228":4,"229":2,"231":2,"235":1,"236":1,"238":4,"239":1,"240":1,"241":1,"242":1,"243":1,"267":1,"268":1,"270":3,"273":2,"274":1,"286":1,"292":4,"293":1,"296":1,"298":3,"299":2,"303":3,"304":1,"306":4,"307":2,"309":1,"331":1,"333":1,"334":1,"335":1,"344":1,"345":2,"346":1,"347":1,"351":2,"360":2,"362":1,"364":1}}],["md",{"2":{"316":2,"361":2}}],["msc",{"2":{"89":12,"120":26}}],["msg",{"2":{"41":3,"43":3,"44":3,"185":3,"187":3}}],["m",{"2":{"84":3,"155":5,"253":8,"254":11,"255":2,"303":2}}],["mc",{"2":{"64":11}}],["mcpmethod",{"2":{"286":2}}],["mcpaddress",{"2":{"88":2}}],["mcpserver",{"2":{"51":1,"134":1,"143":4,"169":1,"170":1,"183":6,"185":5,"187":1,"189":1,"194":6,"195":2,"198":3,"199":1,"201":1,"207":5,"227":3,"228":2,"235":1,"236":1,"238":5,"240":1,"241":1,"266":1,"270":3,"367":1}}],["mcpservers",{"2":{"28":1,"210":1}}],["mcpclientmanager",{"2":{"84":4}}],["mcpclient",{"2":{"40":4,"41":5,"45":1,"50":1,"51":1,"88":7,"112":1,"182":4,"183":4,"185":5,"187":1,"241":1}}],["mcp",{"0":{"1":1,"12":1,"13":1,"16":1,"29":1,"74":1,"145":1,"148":1,"149":1,"217":1,"289":1},"1":{"2":1,"3":1,"4":1,"5":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"290":1,"291":1,"292":1,"293":1},"2":{"0":3,"2":6,"3":17,"4":13,"5":2,"6":2,"7":4,"9":3,"12":1,"13":3,"14":2,"15":5,"16":14,"17":1,"20":9,"21":3,"23":1,"25":2,"26":19,"28":1,"29":3,"30":12,"31":10,"32":1,"36":1,"37":1,"38":1,"39":11,"40":1,"41":10,"43":10,"44":7,"46":2,"54":1,"55":1,"56":2,"57":3,"62":2,"63":8,"67":2,"68":3,"69":4,"72":2,"74":2,"75":3,"77":8,"80":1,"81":1,"84":3,"85":2,"86":2,"88":2,"89":5,"91":1,"93":3,"94":4,"96":3,"98":4,"100":3,"101":3,"102":1,"104":3,"105":7,"106":2,"108":7,"109":5,"112":7,"115":1,"117":4,"119":2,"120":2,"122":1,"123":1,"124":3,"125":2,"126":1,"128":1,"129":1,"130":3,"131":8,"133":9,"134":12,"137":3,"139":1,"140":1,"142":41,"143":7,"145":11,"146":3,"148":1,"153":3,"156":1,"157":5,"158":1,"159":1,"160":1,"162":12,"167":2,"169":1,"179":1,"180":3,"182":28,"183":28,"185":34,"187":11,"188":7,"189":3,"190":1,"191":1,"194":26,"195":21,"197":3,"198":4,"200":1,"201":5,"202":1,"203":1,"204":2,"206":25,"207":3,"209":1,"211":10,"212":2,"215":1,"216":9,"217":3,"219":3,"223":3,"225":1,"226":1,"227":3,"228":15,"229":7,"231":4,"233":1,"234":1,"235":3,"238":19,"244":1,"246":17,"247":3,"251":8,"253":4,"254":2,"255":2,"257":2,"260":4,"261":4,"263":3,"264":5,"266":1,"267":18,"270":15,"271":1,"272":1,"273":1,"274":2,"280":1,"284":1,"285":1,"286":2,"289":2,"290":2,"292":29,"293":1,"295":1,"296":8,"298":19,"299":5,"301":5,"303":12,"304":9,"306":5,"307":5,"309":5,"310":5,"311":1,"313":1,"314":3,"316":7,"317":8,"319":7,"320":11,"321":7,"323":4,"324":4,"325":4,"326":4,"328":5,"329":5,"330":3,"331":3,"335":12,"337":25,"338":13,"339":1,"340":3,"341":4,"342":6,"343":5,"344":1,"345":8,"346":12,"347":1,"348":2,"349":8,"350":20,"351":8,"352":9,"354":9,"355":1,"357":3,"358":4,"359":4,"360":7,"361":6,"362":9,"363":6,"364":13,"366":4,"367":6}}],["meaningful",{"2":{"237":1}}],["memory",{"0":{"174":1,"223":1},"2":{"173":1,"174":1,"194":3,"223":1}}],["metadata",{"0":{"279":1},"2":{"247":4,"273":1,"362":1}}],["metricscollector",{"2":{"257":2}}],["metrics",{"2":{"146":3,"194":17,"257":16,"266":2}}],["method",{"2":{"45":1,"51":1,"108":2,"109":8,"131":4,"146":2,"148":1,"203":1,"214":3,"215":4,"241":2,"286":4,"352":3}}],["methods",{"0":{"348":1,"355":1},"2":{"5":1,"14":1,"23":1,"159":1,"199":1,"280":1,"347":1,"348":1,"349":1,"354":1}}],["mechanisms",{"2":{"140":1}}],["medium",{"2":{"136":5,"301":1,"338":1}}],["messagenotification",{"2":{"108":1}}],["message",{"0":{"230":1,"231":1,"302":1,"303":1},"1":{"231":1,"232":1,"233":1,"234":1,"303":1,"304":1},"2":{"41":2,"43":2,"47":1,"104":4,"105":4,"108":7,"109":2,"131":1,"142":1,"150":1,"162":4,"185":1,"187":2,"188":1,"194":1,"195":3,"197":4,"198":1,"207":4,"216":6,"229":1,"230":1,"231":2,"240":1,"263":1,"264":7,"284":1,"286":2,"304":1,"324":1,"346":9,"357":2}}],["messages",{"2":{"39":4,"41":1,"43":10,"44":5,"46":2,"104":3,"105":8,"106":2,"185":2,"187":10,"188":2,"209":1,"217":1,"228":1,"229":2,"237":1,"238":1,"262":1,"270":1,"292":1,"298":1,"299":1,"301":1,"303":5,"304":7,"306":1,"307":1,"309":1,"310":1}}],["mux",{"2":{"146":7}}],["mutex",{"2":{"71":5,"72":12,"89":7,"98":5,"109":7,"130":11,"131":5,"154":7,"250":7,"254":5,"264":9,"331":6}}],["mustcompile",{"2":{"355":1}}],["must",{"2":{"26":1,"126":1,"219":1,"240":1,"298":1,"354":1,"355":1}}],["multiclient",{"2":{"136":7}}],["multiserverclient",{"2":{"89":6}}],["multi",{"0":{"89":1,"137":1,"170":1,"303":1},"2":{"9":2,"81":1,"140":1,"162":1,"165":1,"170":2,"191":1,"192":1}}],["multiple",{"0":{"326":1,"359":1},"2":{"4":1,"5":2,"7":1,"9":3,"14":1,"23":1,"126":1,"140":1,"159":1,"170":1,"249":1,"280":1,"283":1,"307":1,"326":1,"330":1}}],["multiply",{"2":{"3":1,"20":1,"182":2,"246":2,"267":1,"335":1,"349":1}}],["mixed",{"0":{"361":1}}],["millisecond",{"2":{"194":1,"263":1,"366":1}}],["middleware",{"0":{"252":1,"253":1,"254":1,"255":1,"278":1},"1":{"253":1,"254":1,"255":1},"2":{"143":3,"146":1,"155":1,"177":2,"244":1,"266":1,"288":1,"291":1,"311":1,"332":1,"368":1}}],["missing",{"2":{"101":2,"155":1,"298":1,"348":1,"355":1}}],["microservice",{"2":{"80":1,"140":1,"166":1}}],["minitems=1",{"2":{"344":1}}],["minimum=0",{"2":{"344":1}}],["minimum=1",{"2":{"340":1}}],["minimum",{"2":{"292":1,"337":2,"338":1,"364":1}}],["minimal",{"2":{"13":2,"14":1,"174":1,"290":1}}],["minlength",{"2":{"337":1}}],["min=0",{"2":{"247":1}}],["min=1",{"2":{"247":2}}],["minute",{"2":{"143":1,"154":3,"222":1}}],["minutes",{"2":{"15":1,"25":1}}],["min",{"2":{"142":2}}],["mimetype",{"2":{"93":1,"94":3,"96":1,"97":4,"142":1,"194":1,"206":1,"234":1,"292":1,"316":1,"317":1,"319":1,"320":1,"321":1,"323":1,"324":1,"325":1,"326":2,"328":1,"329":1,"330":2,"361":1}}],["mime",{"2":{"2":1,"96":1,"206":1,"322":1,"361":1}}],["myapp",{"2":{"123":1,"129":1}}],["mycustomlogger",{"2":{"118":1,"123":1,"129":1,"138":3}}],["mysamplinghandler",{"2":{"39":3,"40":1,"46":1,"50":1,"51":1,"112":3}}],["myhooks",{"2":{"22":1,"275":1}}],["my",{"2":{"8":1,"22":1,"48":2,"63":1,"183":1,"227":1,"274":1,"279":1,"281":1}}],["mounts",{"2":{"212":2}}],["monolithic",{"2":{"180":1}}],["monitor",{"2":{"194":3,"258":1}}],["monitorprocess",{"2":{"120":2}}],["monitoring",{"0":{"70":1},"1":{"71":1,"72":1},"2":{"165":2,"192":2,"204":1}}],["mockhandler",{"2":{"185":2}}],["mockresponse",{"2":{"41":2,"185":2}}],["mocksamplinghandler",{"2":{"41":3,"185":4}}],["mock",{"0":{"41":1},"2":{"41":7,"185":3,"186":1}}],["more",{"2":{"5":1,"18":2,"24":1,"161":1,"190":1,"212":1,"244":1,"288":1,"291":1,"332":1,"345":1}}],["most",{"2":{"5":2,"23":1,"110":1,"203":1,"241":1,"268":1,"281":1}}],["modtime",{"2":{"346":2}}],["modified",{"2":{"346":5}}],["modify",{"2":{"2":1,"260":1}}],["mode",{"2":{"317":1}}],["modeling",{"2":{"299":1}}],["modelcontextprotocol",{"2":{"29":1,"217":1}}],["models",{"2":{"12":1}}],["model",{"2":{"1":1,"12":1,"15":1,"39":2,"41":1,"43":3,"44":5,"47":2,"112":2,"185":3,"187":3,"238":2}}],["module",{"2":{"34":1}}],["mod",{"2":{"26":1}}],["machine",{"2":{"304":1}}],["macos",{"2":{"28":1,"206":1,"210":1}}],["making",{"2":{"75":1,"237":1}}],["makes",{"2":{"9":1,"15":1,"290":1}}],["make",{"2":{"7":1,"9":1,"13":1,"44":1,"64":1,"89":2,"98":1,"102":1,"105":1,"109":1,"120":1,"125":1,"130":2,"131":1,"137":1,"154":2,"170":1,"207":1,"220":1,"222":1,"223":1,"244":1,"250":2,"254":1,"264":2,"266":1,"286":1,"301":1}}],["maybe",{"2":{"67":3}}],["may",{"2":{"67":1}}],["matrix",{"0":{"136":1}}],["mathematical",{"2":{"182":1,"267":1}}],["math",{"2":{"57":1,"68":1}}],["matching",{"2":{"341":1,"361":1}}],["matchstring",{"2":{"94":1,"355":1}}],["match",{"2":{"36":1}}],["max=150",{"2":{"247":1}}],["max=100",{"2":{"247":1}}],["maxitems=10",{"2":{"344":1}}],["maximum=100",{"2":{"340":1,"344":1}}],["maximum",{"2":{"188":1,"229":1,"337":2,"340":1,"364":2}}],["maxidleconnsperhost",{"2":{"123":1}}],["maxidleconns",{"2":{"123":1}}],["maxsize",{"2":{"125":6}}],["maxlength",{"2":{"337":1}}],["maxlen",{"2":{"96":3}}],["maxdelay",{"2":{"68":4}}],["maxretries+1",{"2":{"68":1,"86":1}}],["maxretries",{"2":{"68":4,"86":3}}],["max",{"2":{"41":1,"44":1,"142":1}}],["maxtokens",{"2":{"39":4,"41":1,"43":3,"44":1,"185":1,"187":3,"188":1,"228":1,"229":1,"238":1,"270":1}}],["map",{"2":{"9":2,"30":1,"31":1,"41":1,"44":4,"58":1,"59":1,"62":1,"67":1,"69":1,"77":1,"85":1,"89":5,"97":2,"98":2,"100":2,"101":4,"102":4,"104":2,"105":5,"106":2,"109":2,"123":1,"129":1,"130":2,"131":2,"133":1,"134":2,"137":10,"146":1,"153":1,"154":4,"182":1,"183":1,"185":4,"194":7,"198":1,"211":1,"222":1,"228":3,"238":3,"247":1,"250":4,"254":2,"257":4,"260":1,"261":2,"263":1,"264":4,"270":2,"292":1,"301":4,"309":1,"310":2,"317":1,"320":2,"324":1,"326":1,"331":1,"337":4,"348":1,"351":1,"352":3,"358":2,"359":1,"361":1,"364":1,"366":1}}],["manualprocesshandler",{"2":{"345":2}}],["manualtool",{"2":{"345":2}}],["manual",{"0":{"345":1},"2":{"339":1,"345":1}}],["managedstdioclient",{"2":{"120":7}}],["managedclient",{"2":{"64":5}}],["manager",{"2":{"84":2,"109":2,"304":2,"346":1}}],["management",{"0":{"9":1,"69":1,"84":1,"109":1,"120":1,"151":1,"199":1,"220":1,"223":1,"249":1},"1":{"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"250":1,"251":1},"2":{"8":1,"9":2,"54":1,"60":1,"199":1,"209":1,"244":1,"286":1,"289":1}}],["managing",{"2":{"54":1,"76":1,"204":1}}],["manner",{"2":{"2":1,"312":1}}],["marshal",{"2":{"44":1,"246":2,"251":2,"292":1,"317":1,"319":1,"320":1,"324":1,"326":1,"328":1,"329":1,"351":2,"352":2,"354":2,"358":2,"366":2}}],["marshaling",{"2":{"8":1}}],["market",{"2":{"304":1}}],["mark",{"2":{"72":1}}],["mark3labs",{"2":{"15":1,"16":2,"26":3,"30":3,"31":3,"39":3,"41":2,"57":2,"77":2,"84":2,"93":2,"112":1,"117":3,"142":2,"162":3,"182":3,"185":3,"194":2,"206":2,"207":2,"211":2,"227":2,"238":2,"246":2,"267":2,"274":1,"292":2,"298":2,"320":2}}],["markdown",{"2":{"2":1,"21":1,"314":1,"316":2,"330":1,"361":1}}],["maintenancetools",{"2":{"261":2}}],["maintenance",{"2":{"261":1}}],["maintainability",{"2":{"298":1}}],["maintains",{"2":{"201":1}}],["maintaining",{"2":{"12":1}}],["main",{"2":{"2":1,"16":2,"17":2,"26":4,"28":1,"29":1,"30":3,"31":2,"39":1,"40":1,"41":2,"57":3,"77":3,"106":1,"117":2,"118":1,"142":2,"143":1,"146":1,"162":2,"170":1,"182":2,"183":1,"185":2,"187":1,"194":2,"195":1,"206":2,"207":2,"210":1,"211":3,"212":2,"214":4,"215":1,"216":1,"217":1,"220":1,"227":2,"238":2,"246":2,"251":1,"266":1,"267":2,"274":2,"281":1,"282":1,"283":1,"285":1,"286":1,"287":1,"292":2,"298":1,"304":1,"314":1,"316":2,"330":1,"342":1,"346":1,"350":1}}],["city",{"2":{"326":2}}],["cert",{"2":{"284":1}}],["certain",{"2":{"86":1,"367":1}}],["cpu",{"2":{"173":1,"194":3}}],["cf",{"2":{"137":10}}],["cmd=",{"2":{"215":1}}],["cmd",{"2":{"118":5,"212":7,"215":1}}],["c",{"2":{"30":6,"31":4,"57":4,"58":2,"59":1,"62":7,"63":2,"64":6,"67":14,"68":2,"69":4,"71":3,"77":9,"84":6,"85":2,"86":2,"89":9,"93":2,"94":7,"96":5,"97":6,"98":2,"100":5,"101":3,"102":4,"104":5,"105":2,"106":7,"108":2,"109":5,"117":4,"118":3,"119":6,"122":4,"123":3,"124":3,"125":8,"126":5,"128":6,"129":3,"131":2,"133":4,"154":1,"194":1,"207":3,"211":5,"212":2,"220":3,"238":3,"286":3,"301":2}}],["cd",{"2":{"26":1,"48":1}}],["ctx",{"2":{"7":2,"9":2,"16":1,"26":1,"30":5,"31":3,"39":3,"40":3,"41":5,"43":2,"44":2,"46":3,"62":6,"63":2,"64":7,"67":13,"68":6,"69":4,"71":7,"72":7,"77":8,"84":5,"85":2,"86":4,"88":7,"89":6,"93":2,"94":7,"96":5,"97":6,"98":2,"100":5,"101":3,"102":4,"104":5,"105":4,"106":7,"108":3,"109":6,"112":1,"117":3,"118":4,"119":2,"120":8,"122":3,"123":2,"124":2,"125":2,"126":3,"128":4,"129":2,"130":11,"131":6,"133":4,"134":10,"142":4,"143":10,"153":2,"155":2,"157":1,"162":1,"182":4,"183":7,"185":7,"187":2,"189":1,"194":11,"197":2,"198":3,"199":1,"201":2,"206":2,"207":2,"211":4,"212":2,"216":1,"219":6,"223":3,"228":2,"235":1,"236":3,"238":2,"246":1,"247":1,"251":4,"253":6,"254":3,"255":5,"260":2,"261":1,"263":2,"266":2,"267":2,"270":2,"286":4,"292":3,"298":1,"299":2,"301":1,"303":1,"304":1,"306":2,"307":2,"309":1,"310":1,"316":1,"317":1,"319":1,"320":2,"321":1,"323":1,"324":1,"325":1,"326":1,"328":2,"329":4,"331":2,"342":1,"343":1,"345":1,"346":2,"349":1,"350":1,"351":4,"352":2,"354":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"366":3}}],["currency",{"2":{"343":5}}],["currently",{"2":{"242":1}}],["currentmetrics",{"2":{"194":3}}],["current",{"2":{"2":1,"183":1,"194":3,"199":1,"206":1,"292":2,"317":1,"321":2,"343":1}}],["cutting",{"2":{"252":1}}],["customer",{"2":{"303":4}}],["customnotifier",{"2":{"264":7}}],["customizing",{"0":{"212":1}}],["customize",{"2":{"22":1}}],["custom",{"0":{"118":1,"123":1,"129":1,"146":1,"211":1,"248":1,"258":1,"263":1,"264":1,"279":1,"284":1},"1":{"212":1},"2":{"7":1,"57":1,"58":4,"59":3,"63":1,"118":3,"123":1,"129":2,"138":1,"146":5,"197":1,"198":1,"212":1,"248":1,"256":1,"263":1,"284":2,"345":3,"355":1}}],["critical",{"2":{"306":1,"338":1}}],["critique",{"2":{"306":1}}],["criteria",{"2":{"259":1,"310":3}}],["crashing",{"2":{"278":1}}],["crashes",{"2":{"278":1}}],["crashed",{"2":{"119":1}}],["cross",{"2":{"252":1}}],["credential",{"2":{"212":2}}],["creating",{"0":{"55":1,"273":1},"1":{"56":1,"57":1,"58":1,"59":1,"274":1,"275":1},"2":{"25":1,"40":1,"54":1,"76":1,"212":1,"291":2}}],["creative",{"2":{"4":1}}],["creation",{"0":{"57":1,"58":1,"59":1,"274":1},"2":{"3":1,"61":1,"62":2,"74":1,"345":1,"350":1}}],["createfiletool",{"2":{"346":2,"350":2}}],["create|os",{"2":{"216":1}}],["created",{"2":{"142":2,"247":2,"346":1,"350":1}}],["createdat",{"2":{"142":2,"154":2,"247":4}}],["createinprocessclient",{"2":{"133":1}}],["createauthenticatedstreamablehttpclient",{"2":{"124":1}}],["createclient",{"2":{"137":2}}],["createcustomsseclient",{"2":{"129":1}}],["createcustomstreamablehttpclient",{"2":{"123":1}}],["createcustomstdioclient",{"2":{"118":1}}],["createchatcompletion",{"2":{"43":1,"187":1}}],["createsessionawaretool",{"2":{"251":2}}],["createsession",{"2":{"154":1,"250":1,"251":1}}],["creates",{"2":{"145":1,"212":1,"273":1}}],["createsseclient",{"2":{"59":1,"128":1}}],["createstreamablehttpclientwithsession",{"2":{"126":1}}],["createstreamablehttpclient",{"2":{"58":1,"122":1}}],["createstdioclientwithenv",{"2":{"57":1}}],["createstdioclient",{"2":{"57":1,"117":1}}],["createmessageparams",{"2":{"185":2,"188":2,"228":2,"229":2,"238":2,"270":2}}],["createmessageresult",{"2":{"39":2,"41":2,"43":2,"44":2,"46":1,"112":2,"185":2,"187":2}}],["createmessagerequest",{"2":{"39":1,"41":1,"43":1,"44":1,"46":1,"112":1,"185":2,"187":1,"188":2,"228":1,"229":2,"238":1,"270":1}}],["createmessage",{"2":{"39":1,"41":1,"43":1,"44":1,"46":1,"112":1,"185":1,"187":1}}],["create",{"2":{"3":4,"15":1,"16":2,"18":2,"26":1,"30":3,"31":3,"32":2,"39":1,"40":3,"41":2,"43":1,"50":1,"57":3,"58":1,"72":2,"77":2,"79":1,"80":1,"81":1,"82":1,"109":1,"112":1,"117":1,"118":2,"122":1,"123":2,"124":1,"126":2,"128":1,"129":2,"133":2,"137":1,"142":4,"146":1,"162":1,"182":2,"183":2,"185":4,"187":3,"211":1,"212":1,"227":1,"228":1,"238":2,"241":1,"246":1,"247":3,"260":1,"266":3,"269":1,"270":1,"272":1,"274":1,"282":1,"283":1,"288":1,"292":1,"293":1,"296":1,"307":1,"314":1,"329":1,"332":1,"335":1,"340":1,"341":1,"345":1,"346":5,"350":5,"352":2,"360":1,"362":1,"368":1}}],["crud",{"2":{"143":1}}],["crucial",{"2":{"7":1,"60":1}}],["crypto",{"2":{"117":1}}],["clone",{"2":{"212":5}}],["cloneflags",{"2":{"212":1}}],["closing",{"2":{"62":1,"67":1}}],["closed",{"2":{"287":1}}],["closeerr",{"2":{"62":3}}],["close",{"2":{"30":1,"31":1,"40":1,"41":1,"44":1,"61":1,"62":1,"64":3,"67":2,"72":3,"77":1,"84":2,"117":1,"118":1,"120":4,"122":1,"123":1,"124":1,"125":2,"126":1,"128":1,"129":1,"130":3,"133":1,"134":3,"137":1,"169":1,"182":1,"185":1,"211":1,"216":1,"223":1,"264":1,"321":1,"351":1,"352":1}}],["closes",{"2":{"9":1}}],["clarity",{"2":{"298":1,"309":1}}],["claims",{"2":{"155":9}}],["claude",{"0":{"28":1,"210":1},"2":{"28":8,"44":1,"210":5}}],["cleanupuserresources",{"2":{"258":1}}],["cleanupexpiredsessions",{"2":{"154":2}}],["cleanup",{"2":{"8":1,"9":3,"61":1,"62":2,"154":3,"258":1,"261":1}}],["clean",{"2":{"6":1,"13":1,"206":7}}],["clear",{"2":{"4":1,"237":1,"309":1}}],["clireq",{"2":{"136":2}}],["clientoption",{"2":{"137":1}}],["clientfactory",{"2":{"137":7}}],["clientip",{"2":{"143":2}}],["clientid",{"2":{"124":1}}],["clientinfo",{"2":{"30":1,"31":1,"45":1,"63":2,"182":1,"183":1,"185":1,"211":1,"214":1,"215":1}}],["clienthealthmonitor",{"2":{"71":6}}],["clienttype",{"2":{"64":3,"84":3,"89":3}}],["clientcapabilities",{"2":{"30":1,"31":1,"63":1,"182":1,"183":1,"267":2}}],["client",{"0":{"7":1,"30":1,"31":1,"35":1,"40":1,"54":1,"56":1,"57":1,"58":1,"59":1,"60":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"89":1,"91":1,"114":1,"116":1,"117":1,"118":1,"121":1,"122":1,"123":1,"127":1,"128":1,"129":1,"130":1,"132":1,"133":1,"134":1,"137":1,"208":1,"211":1,"267":1},"1":{"31":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":2,"62":2,"63":2,"64":2,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"79":1,"80":1,"81":1,"82":1,"84":1,"85":1,"86":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"115":1,"116":1,"117":2,"118":2,"119":2,"120":2,"121":1,"122":2,"123":2,"124":2,"125":2,"126":2,"127":1,"128":2,"129":2,"130":2,"131":2,"132":1,"133":2,"134":2,"135":1,"136":1,"137":1,"138":1,"209":1,"210":1,"211":1,"212":2},"2":{"5":1,"7":5,"9":7,"23":1,"25":1,"30":8,"31":7,"32":1,"38":1,"39":3,"40":7,"41":7,"43":4,"44":5,"45":5,"48":3,"50":3,"51":1,"53":1,"55":2,"56":12,"57":10,"58":6,"59":3,"60":1,"61":1,"62":7,"63":3,"64":14,"65":1,"67":16,"68":5,"69":4,"71":7,"72":25,"73":2,"74":1,"75":1,"76":5,"77":6,"79":3,"80":3,"81":4,"82":3,"84":13,"85":5,"86":4,"88":3,"89":10,"90":5,"93":3,"94":6,"96":4,"97":6,"98":2,"100":4,"101":2,"102":4,"104":4,"105":7,"106":6,"108":5,"109":11,"110":2,"111":1,"112":6,"113":3,"114":1,"115":1,"117":4,"118":3,"119":2,"120":20,"122":3,"123":4,"124":5,"125":14,"126":5,"128":3,"129":4,"130":23,"131":5,"133":3,"134":8,"137":11,"138":1,"158":1,"159":1,"161":2,"162":1,"169":3,"182":4,"183":5,"184":1,"185":9,"187":6,"190":3,"191":1,"197":1,"198":2,"199":1,"202":1,"211":4,"212":4,"226":1,"228":1,"240":1,"241":2,"243":1,"262":1,"267":1,"268":2,"270":1,"271":1,"281":1,"286":2,"311":1,"352":3}}],["clientsessionfromcontext",{"2":{"267":1}}],["clientsession",{"2":{"251":2,"267":2,"286":2}}],["clientsecret",{"2":{"124":1}}],["clientstdiocli",{"2":{"115":1}}],["clients",{"0":{"55":1,"74":1},"1":{"56":1,"57":1,"58":1,"59":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1},"2":{"0":1,"5":2,"7":2,"9":2,"30":1,"35":2,"37":2,"38":1,"50":1,"51":1,"54":1,"74":1,"75":1,"89":5,"91":1,"110":2,"116":1,"121":1,"125":5,"127":1,"132":1,"139":1,"158":1,"160":1,"184":1,"190":1,"191":1,"195":1,"199":1,"202":1,"225":1,"226":1,"249":1,"263":1,"268":1,"271":1,"277":1,"283":1,"290":1,"311":1,"330":1}}],["cli",{"2":{"5":1,"136":2,"204":1,"207":1,"281":1}}],["ch",{"2":{"264":6}}],["chunk",{"2":{"223":1}}],["chunksize",{"2":{"223":2}}],["chunks",{"2":{"223":1}}],["child",{"2":{"212":1}}],["chroot",{"2":{"212":2}}],["chm",{"2":{"71":13}}],["choosing",{"0":{"163":1},"1":{"164":1,"165":1,"166":1,"167":1}}],["choose",{"2":{"8":1,"114":1,"136":1,"159":1,"162":1,"285":1}}],["choice",{"2":{"43":3,"55":1,"187":3}}],["choices",{"2":{"43":2,"187":2}}],["channel",{"2":{"195":1,"264":2}}],["change",{"2":{"126":1}}],["chan",{"2":{"64":2,"109":1,"120":2,"125":2,"130":3,"170":1,"207":1,"220":1,"264":3,"266":1,"286":1}}],["chat",{"2":{"88":1,"165":1,"192":1,"195":1}}],["chatcompletionrequest",{"2":{"43":1,"187":1}}],["chatcompletionmessage",{"2":{"43":3,"187":3}}],["chatmessageroleassistant",{"2":{"43":1,"187":1}}],["chatmessageroleuser",{"2":{"43":1,"187":1}}],["chatmessagerolesystem",{"2":{"43":1,"187":1}}],["characteristics",{"2":{"2":1,"3":1,"4":1,"7":2,"115":1,"160":1}}],["checking",{"2":{"241":1}}],["checkhealth",{"2":{"71":2}}],["checks",{"0":{"71":1}}],["check",{"2":{"3":1,"18":1,"24":1,"34":1,"35":1,"36":1,"46":1,"47":1,"53":1,"67":1,"71":2,"72":1,"98":1,"101":1,"108":1,"130":1,"143":1,"145":1,"194":1,"199":1,"206":2,"219":1,"223":1,"243":1,"251":1,"328":1,"366":1}}],["catalog",{"2":{"340":1,"341":1,"342":1}}],["categories",{"2":{"340":3,"342":1,"364":2}}],["catches",{"2":{"278":1}}],["cause",{"2":{"310":1}}],["cachemutex",{"2":{"222":3}}],["cachedresourcehandler",{"2":{"331":2}}],["cached",{"2":{"98":2,"140":1,"143":3,"166":1}}],["cacheentry",{"2":{"98":4,"222":2,"331":3}}],["cache",{"2":{"98":6,"108":2,"143":2,"153":1,"222":1,"331":4}}],["caching",{"0":{"98":1,"331":1},"2":{"5":1,"140":2,"143":1,"161":1,"282":1,"317":1,"331":1}}],["captured",{"2":{"201":1}}],["capability",{"0":{"45":1,"267":1},"2":{"45":2,"225":1,"227":1,"238":1,"240":1,"270":1,"277":1}}],["capabilities",{"0":{"277":1},"2":{"9":1,"30":2,"31":2,"37":1,"45":1,"61":1,"63":4,"77":1,"110":2,"111":1,"145":2,"159":1,"180":1,"182":1,"183":1,"184":1,"199":1,"214":1,"215":1,"226":1,"268":1,"269":1,"275":1,"277":3,"292":1,"333":1}}],["capital",{"2":{"41":1,"185":1,"231":2}}],["caseprosconssampling",{"2":{"161":1}}],["case",{"2":{"8":3,"43":4,"47":1,"64":8,"67":7,"68":2,"71":2,"84":3,"85":3,"86":2,"89":2,"101":6,"108":6,"109":2,"114":1,"119":3,"120":4,"125":2,"130":5,"131":2,"136":4,"137":3,"146":4,"159":1,"162":2,"169":3,"170":1,"182":4,"183":2,"187":4,"194":4,"206":4,"219":1,"223":1,"238":2,"246":4,"264":2,"285":2,"292":1,"298":4,"299":3,"303":2,"304":3,"306":4,"307":2,"309":3,"310":3,"346":1,"349":4,"350":3,"366":1}}],["cases",{"0":{"140":1,"180":1,"192":1,"204":1},"2":{"2":1,"3":1,"4":1,"7":2,"18":1,"24":1,"164":1,"165":1,"166":1,"167":1,"309":1}}],["callbacks",{"2":{"242":1,"256":1}}],["called",{"2":{"216":1}}],["calling",{"0":{"99":1,"100":1},"1":{"100":1,"101":1,"102":1}}],["callllm",{"2":{"39":2,"46":1}}],["callrequest",{"2":{"30":4,"31":4}}],["call",{"2":{"20":1,"30":2,"31":2,"39":2,"41":1,"43":2,"44":2,"46":2,"69":4,"77":2,"85":1,"88":1,"100":3,"101":1,"102":6,"134":1,"145":2,"148":2,"185":3,"187":2,"211":1,"214":2,"215":2,"227":1,"237":1,"253":3,"321":1}}],["calltoolparams",{"2":{"182":1,"183":1,"185":1,"211":1}}],["calltoolsbatch",{"2":{"102":2}}],["calltoolwithvalidation",{"2":{"101":1}}],["calltoolwithretry",{"2":{"68":1,"86":1}}],["calltoolresult",{"2":{"9":1,"16":1,"26":3,"68":2,"72":1,"86":1,"89":1,"100":1,"101":1,"102":1,"120":1,"125":1,"130":1,"133":1,"134":2,"142":3,"143":2,"153":1,"157":1,"162":1,"182":1,"183":2,"185":3,"189":1,"194":2,"198":1,"201":1,"206":1,"216":1,"219":1,"223":1,"228":3,"235":1,"238":3,"246":1,"247":1,"251":1,"253":1,"254":1,"255":1,"263":1,"267":1,"270":3,"292":1,"345":1,"349":1,"350":1,"351":1,"352":1,"354":1,"357":1,"358":1,"359":2,"360":2,"361":2,"362":2,"363":2,"366":1}}],["calltoolrequestparams",{"2":{"62":1,"67":1,"69":2,"77":1,"85":1,"88":1,"89":1,"100":1,"119":1,"133":1,"134":1}}],["calltoolrequest",{"2":{"9":1,"16":1,"26":1,"30":1,"31":1,"62":1,"67":1,"68":1,"69":2,"72":1,"77":1,"85":1,"86":1,"88":1,"89":1,"100":1,"119":1,"120":1,"125":1,"130":1,"133":2,"134":2,"142":3,"143":2,"153":1,"157":2,"162":1,"182":2,"183":3,"185":2,"194":2,"198":1,"201":2,"206":1,"211":1,"216":1,"219":1,"223":1,"228":1,"238":1,"246":1,"247":1,"251":1,"253":1,"254":1,"255":1,"263":1,"267":1,"270":1,"292":1,"342":1,"343":1,"345":1,"346":2,"348":1,"349":1,"350":1,"351":1,"352":1,"354":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"366":1}}],["calltool",{"2":{"7":1,"30":1,"31":1,"41":1,"62":1,"67":1,"68":1,"69":2,"72":3,"77":1,"85":1,"86":1,"88":1,"89":2,"100":3,"101":1,"102":1,"119":1,"120":2,"125":2,"130":2,"133":1,"134":3,"182":1,"183":1,"185":1,"211":1}}],["callsyesno",{"2":{"115":1}}],["calls",{"0":{"36":1},"2":{"3":1,"18":1,"51":1,"88":1,"102":6,"217":1,"241":2,"257":1,"277":1,"333":1,"347":1}}],["calctool",{"2":{"3":1}}],["calculator",{"2":{"182":3}}],["calculatortool",{"2":{"20":1}}],["calculation",{"2":{"3":1,"267":1,"349":1}}],["calculations",{"2":{"3":1,"18":1,"182":1,"267":1}}],["calculateoutput",{"2":{"246":2}}],["calculateinput",{"2":{"246":2}}],["calculate",{"2":{"3":2,"20":1,"68":1,"102":1,"182":2,"183":1,"246":1,"267":1,"335":1}}],["cannot",{"2":{"354":1}}],["canceled",{"2":{"69":1}}],["cancelfunc",{"2":{"64":1,"84":1,"109":1,"120":1,"130":1,"131":1}}],["cancelled",{"2":{"46":1,"69":1,"108":1}}],["cancellation",{"2":{"46":1,"47":1,"68":1,"69":1,"194":1,"219":1,"223":1,"366":1}}],["cancel",{"2":{"30":2,"31":2,"64":5,"67":4,"69":5,"71":2,"84":6,"109":5,"120":6,"130":5,"131":5,"207":2,"211":2,"219":2,"236":2,"238":2,"266":2,"329":2,"351":2}}],["can",{"2":{"2":3,"3":1,"4":2,"9":1,"18":1,"20":1,"21":1,"29":1,"30":1,"37":1,"38":1,"95":1,"99":1,"126":1,"184":1,"197":1,"199":1,"204":1,"212":3,"217":1,"225":1,"226":1,"268":1,"277":6,"294":1,"295":1,"303":1,"313":1,"322":1,"326":1,"333":1,"343":1,"360":1,"361":1,"362":1,"363":1}}],["columns",{"2":{"299":2}}],["collectsystemmetrics",{"2":{"194":3}}],["collect",{"2":{"194":1}}],["collectmetrics",{"2":{"146":1}}],["collaborative",{"2":{"165":2,"192":2,"195":1}}],["covering",{"2":{"298":1}}],["covers",{"2":{"74":1,"289":1}}],["could",{"2":{"306":1}}],["couldn",{"2":{"189":1,"235":1}}],["count",{"2":{"194":7,"206":1,"337":1,"348":2,"351":1,"355":2}}],["correlations",{"2":{"106":1}}],["core",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"2":{"1":1}}],["coordinate",{"2":{"7":1}}],["codereviewprompt",{"2":{"298":2}}],["codereviewmessages",{"2":{"106":2}}],["code",{"0":{"298":1},"2":{"4":6,"8":1,"14":1,"17":1,"106":7,"150":1,"157":1,"162":1,"201":1,"296":4,"298":13,"304":1,"343":1,"352":1}}],["combine",{"2":{"361":1}}],["com",{"2":{"15":1,"16":2,"26":3,"30":3,"31":3,"39":3,"41":2,"43":1,"44":1,"57":2,"77":2,"84":2,"93":2,"112":1,"117":3,"123":1,"124":1,"126":1,"142":7,"155":1,"162":3,"182":3,"185":3,"187":1,"194":2,"206":2,"207":2,"211":2,"227":2,"238":2,"246":2,"248":1,"267":2,"274":1,"292":2,"298":2,"320":2,"321":1}}],["compatibility",{"2":{"345":1,"348":1}}],["compare",{"2":{"307":3}}],["comparison",{"0":{"161":1,"172":1,"173":1}}],["components",{"2":{"206":1,"266":1}}],["component",{"2":{"180":1}}],["composition",{"2":{"7":1}}],["compile",{"2":{"94":1,"241":1,"245":1}}],["comprehensive",{"0":{"67":1,"257":1},"2":{"143":1,"207":1,"298":1,"299":1}}],["completions",{"2":{"184":1,"225":1,"226":1,"228":1,"268":1}}],["completion",{"2":{"38":1,"110":1}}],["completed",{"2":{"69":2,"143":2,"215":1,"253":2,"263":1,"345":1,"357":1,"366":1}}],["complete",{"0":{"62":1,"238":1,"266":1,"346":1},"2":{"13":2,"41":1,"64":1,"77":1,"112":1,"238":1,"270":1,"292":1,"346":1}}],["complex❌",{"2":{"161":1}}],["complexity",{"2":{"6":1,"136":4,"309":1,"310":1}}],["complex",{"0":{"247":1},"2":{"5":1,"18":1,"24":1,"295":1,"339":1}}],["computations",{"2":{"3":1,"333":1}}],["comms",{"2":{"212":1}}],["communication",{"2":{"8":1,"37":1,"119":1,"127":1,"132":1,"139":1,"160":1,"167":1,"184":1,"191":1,"192":1,"198":1,"204":1,"209":1,"224":1,"226":1,"268":1}}],["communicates",{"2":{"55":1}}],["communicate",{"2":{"5":1,"116":1,"121":1}}],["common",{"0":{"33":1,"83":1,"328":1},"1":{"34":1,"35":1,"36":1,"84":1,"85":1,"86":1},"2":{"5":2,"23":1,"97":1,"203":1,"281":1}}],["commandcontext",{"2":{"118":1,"212":1}}],["command",{"0":{"214":1},"2":{"3":1,"28":1,"35":1,"56":2,"62":1,"64":1,"79":2,"84":1,"118":2,"137":3,"160":1,"164":1,"178":1,"203":1,"204":1,"210":1,"212":2,"214":1}}],["commands",{"2":{"3":1}}],["conditions",{"2":{"367":1}}],["conditional",{"0":{"309":1,"367":1}}],["conditionally",{"2":{"259":1}}],["conducting",{"2":{"303":1}}],["convenient",{"2":{"347":1}}],["conventions",{"2":{"298":1}}],["conversation",{"2":{"231":1,"303":2}}],["conversations",{"0":{"303":1},"2":{"4":1,"294":1}}],["convertmessages",{"2":{"44":2}}],["convert",{"2":{"3":1,"43":3,"44":1,"187":3,"351":1}}],["concise",{"2":{"306":1}}],["concerns`",{"2":{"299":1}}],["concerns",{"2":{"252":1}}],["concepts",{"0":{"0":1,"19":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"20":1,"21":1,"22":1},"2":{"0":1,"1":1,"113":1,"158":1,"271":1,"292":1,"309":1}}],["concurrently",{"2":{"170":1}}],["concurrent",{"2":{"9":2,"102":1,"283":1}}],["connectivity",{"2":{"35":1}}],["connections",{"2":{"12":1,"17":1,"61":1,"79":1,"197":1}}],["connection",{"0":{"35":1,"70":1,"72":1,"84":1,"125":1},"1":{"71":1,"72":1},"2":{"8":1,"9":1,"28":1,"61":1,"63":1,"66":3,"67":3,"77":1,"84":1,"85":1,"117":1,"118":1,"120":3,"130":2,"174":1,"200":1,"201":5,"211":1,"222":1}}],["connected",{"2":{"9":1,"30":1,"31":1,"63":1,"130":2,"195":1,"199":1,"286":1}}],["connects",{"2":{"9":1}}],["connect",{"0":{"209":1},"2":{"7":1,"9":1,"30":1,"40":2,"41":2,"74":1,"75":1,"130":2,"209":1}}],["contrast",{"2":{"307":1}}],["controlled",{"2":{"12":1}}],["control",{"2":{"6":1,"12":1,"188":1,"212":1,"229":1,"236":1,"290":1,"345":1}}],["continuewithtoolresult",{"2":{"88":1}}],["continue",{"2":{"62":1,"96":1,"303":1}}],["contains",{"2":{"46":1,"142":2,"206":1,"248":1,"346":1,"350":1}}],["contents",{"2":{"96":2,"97":6,"206":1,"316":1,"317":1,"320":1,"321":1,"323":1,"325":1,"326":1,"328":1,"329":1,"346":1}}],["content",{"0":{"232":1,"233":1,"234":1,"322":1,"323":1,"324":1,"325":1,"326":1,"359":1,"361":1},"1":{"233":1,"234":1,"323":1,"324":1,"325":1,"326":1},"2":{"2":1,"3":2,"4":1,"26":4,"30":3,"38":1,"39":1,"41":2,"43":5,"44":11,"47":3,"77":3,"95":1,"96":8,"97":14,"100":5,"104":1,"105":3,"110":1,"111":1,"112":1,"134":1,"146":2,"148":1,"149":1,"182":3,"183":3,"185":10,"187":5,"188":1,"189":2,"206":4,"222":2,"226":1,"228":6,"229":1,"230":1,"231":2,"233":1,"235":2,"237":1,"238":10,"248":2,"268":2,"269":1,"270":6,"277":1,"292":1,"294":1,"298":1,"299":1,"301":2,"303":6,"304":3,"306":5,"307":11,"309":1,"310":5,"313":1,"315":1,"316":2,"322":1,"323":3,"326":1,"346":11,"350":9,"359":2,"360":2,"361":4,"362":1,"363":2}}],["contextfilter",{"2":{"261":3}}],["context",{"0":{"69":1,"236":1,"261":1},"2":{"1":1,"4":1,"9":2,"12":1,"15":1,"16":3,"26":3,"30":3,"31":3,"39":5,"40":1,"41":4,"43":2,"44":2,"46":3,"47":2,"57":1,"62":3,"63":2,"64":5,"67":10,"68":5,"69":6,"71":5,"72":4,"77":4,"84":6,"85":2,"86":2,"88":3,"89":5,"93":3,"94":6,"96":4,"97":6,"98":2,"100":4,"101":2,"102":4,"104":4,"105":4,"106":6,"108":2,"109":5,"112":2,"117":2,"118":3,"119":1,"120":7,"122":1,"123":1,"124":1,"125":2,"126":1,"128":1,"129":1,"130":9,"131":5,"133":3,"134":9,"142":9,"143":8,"153":2,"155":3,"157":2,"162":3,"182":4,"183":7,"185":6,"187":2,"188":1,"194":8,"197":6,"198":4,"201":2,"206":5,"207":3,"211":3,"212":2,"216":2,"219":5,"223":2,"227":1,"228":2,"229":1,"231":1,"236":2,"238":4,"246":3,"247":2,"251":6,"253":4,"254":2,"255":5,"259":1,"260":2,"261":2,"263":2,"266":2,"267":3,"270":2,"286":8,"292":7,"294":1,"295":1,"298":3,"299":2,"301":2,"303":2,"304":8,"306":2,"307":2,"309":2,"310":2,"316":2,"317":2,"319":2,"320":3,"321":2,"323":2,"324":2,"325":2,"326":2,"328":2,"329":6,"331":2,"342":2,"343":2,"345":2,"346":4,"349":2,"350":2,"351":3,"352":2,"354":2,"357":2,"358":2,"359":2,"360":2,"361":2,"362":2,"363":2,"366":2}}],["consistent",{"2":{"295":1}}],["considerations`",{"2":{"310":1}}],["considerations",{"0":{"171":1,"175":1},"1":{"172":1,"173":1,"174":1,"176":1,"177":1}}],["consider",{"2":{"111":1,"242":1,"269":1,"366":1}}],["const",{"2":{"223":1}}],["constants",{"2":{"119":1,"120":1}}],["constructive",{"2":{"303":1}}],["constructors",{"2":{"55":1}}],["constructor",{"0":{"56":1},"2":{"51":1}}],["constraints",{"0":{"338":1},"2":{"3":1,"301":4,"334":1,"338":2,"344":2,"354":1}}],["cons",{"2":{"5":3,"176":1}}],["configjson",{"2":{"292":2,"317":2}}],["configs",{"2":{"137":8}}],["configurable",{"2":{"285":1}}],["configuration",{"0":{"118":1,"123":1,"129":1,"138":1,"143":1,"168":1,"195":1,"196":1,"265":1,"276":1,"285":1,"317":1},"1":{"169":1,"170":1,"197":1,"266":1,"277":1,"278":1,"279":1},"2":{"2":1,"47":1,"157":1,"183":3,"201":1,"212":1,"273":1,"292":2,"313":1,"317":3,"337":1}}],["configuring",{"0":{"40":1},"2":{"291":1}}],["configured",{"2":{"197":1}}],["configure",{"2":{"28":1,"137":1,"197":2,"210":1,"272":1,"275":1,"284":1,"285":1,"293":1}}],["config",{"2":{"2":1,"28":3,"68":11,"123":1,"137":13,"183":16,"210":2,"292":3,"317":3,"330":2,"337":1,"348":4}}],["ethereum",{"2":{"343":1}}],["eth",{"2":{"343":1}}],["etc",{"2":{"2":1,"18":1,"39":1,"111":1,"153":1,"157":1,"170":1,"194":1,"201":1,"212":1,"292":1,"319":1}}],["either",{"2":{"313":1}}],["edge",{"2":{"309":1}}],["editors",{"2":{"204":1}}],["edit",{"2":{"195":2}}],["editing",{"2":{"28":1,"165":1,"192":1,"195":1}}],["evaluate",{"2":{"310":2}}],["evaluation",{"2":{"310":1}}],["evidence",{"2":{"306":1}}],["everything",{"2":{"289":1}}],["event",{"0":{"131":1},"2":{"192":1,"198":1}}],["eventsourceyesyesin",{"2":{"115":1}}],["events",{"0":{"283":1},"2":{"5":1,"14":1,"23":1,"127":1,"160":1,"191":1,"199":1,"284":1}}],["eof",{"2":{"223":1}}],["eliminating",{"2":{"179":1}}],["else",{"2":{"69":2,"94":2,"102":1,"106":2,"120":1,"130":1,"143":2,"220":1,"253":2,"287":1}}],["equal",{"2":{"134":1}}],["echo",{"2":{"134":3,"162":3,"214":3,"215":5,"216":4}}],["especially",{"2":{"339":1}}],["escape",{"2":{"206":1}}],["established",{"2":{"201":1}}],["establishes",{"2":{"63":1}}],["establish",{"2":{"61":1}}],["essential",{"2":{"0":1,"65":1}}],["empty",{"2":{"354":1}}],["embeddeddirect",{"2":{"115":1}}],["embedded",{"0":{"183":1,"305":1},"1":{"306":1,"307":1},"2":{"53":1,"56":1,"82":1,"158":1,"160":1,"167":2,"178":1,"179":1,"180":2,"183":5,"202":1,"224":1,"243":1,"306":1}}],["emailregex",{"2":{"355":2}}],["email",{"2":{"3":1,"142":26,"247":9,"338":2,"355":3}}],["e",{"2":{"17":1,"212":1}}],["errserverclosed",{"2":{"287":1}}],["errsessionterminated",{"2":{"126":1}}],["errchan",{"2":{"170":5}}],["errconnectionlost",{"2":{"66":1,"67":1,"68":1,"72":1,"85":1,"120":1,"130":1}}],["errconnectionfailed",{"2":{"66":1,"68":1,"72":1,"120":1,"130":1}}],["errforbidden",{"2":{"120":1,"124":1}}],["errunauthorized",{"2":{"120":1,"124":1}}],["errunsupportedversion",{"2":{"66":1,"67":1}}],["errbrokenpipe",{"2":{"119":2,"120":1}}],["errprocesstimeout",{"2":{"119":2,"120":1}}],["errprocessexited",{"2":{"119":2,"120":1}}],["errprotocolviolation",{"2":{"66":1,"67":1}}],["errpermissiondenied",{"2":{"66":1,"67":1}}],["errinvalidarguments",{"2":{"66":1,"67":1,"85":1,"86":1}}],["errinvalidresponse",{"2":{"66":1}}],["errresourcenotfound",{"2":{"66":1,"328":1}}],["errtoolnotfound",{"2":{"66":1,"67":1,"85":1,"86":1}}],["errtimeout",{"2":{"66":1,"67":1,"68":1}}],["err",{"2":{"16":6,"26":3,"30":12,"31":9,"39":3,"40":6,"41":9,"43":3,"44":6,"46":9,"51":1,"56":1,"57":6,"58":3,"59":1,"62":15,"63":3,"64":8,"67":24,"68":8,"69":8,"71":4,"72":16,"77":21,"79":1,"84":7,"85":8,"86":7,"88":15,"89":7,"93":3,"94":15,"96":9,"97":15,"98":3,"100":9,"101":9,"102":2,"104":9,"105":6,"106":6,"108":9,"109":12,"112":1,"117":9,"118":6,"119":6,"120":21,"122":6,"123":3,"124":6,"126":2,"128":9,"129":6,"130":14,"131":3,"133":6,"134":4,"137":3,"142":13,"143":15,"146":3,"153":3,"155":7,"162":3,"170":14,"182":9,"183":13,"185":18,"187":6,"189":3,"194":11,"195":3,"198":3,"206":15,"207":6,"211":12,"212":2,"216":6,"219":10,"220":3,"222":4,"223":8,"228":6,"235":3,"236":1,"238":9,"241":3,"246":3,"247":3,"248":2,"251":6,"253":8,"255":3,"257":4,"258":4,"266":6,"270":6,"281":3,"282":3,"283":3,"284":6,"286":2,"287":4,"292":6,"299":3,"306":3,"307":3,"316":3,"317":3,"319":6,"320":6,"321":6,"324":3,"325":3,"328":7,"329":7,"331":3,"346":10,"348":7,"349":9,"350":13,"351":12,"352":18,"354":9,"355":10,"358":3,"360":3,"361":3,"363":4,"366":4}}],["error=",{"2":{"253":2}}],["errorf",{"2":{"39":1,"43":2,"44":2,"46":4,"57":2,"62":3,"63":1,"64":2,"68":1,"72":3,"77":4,"84":2,"86":1,"88":1,"89":4,"93":1,"94":1,"96":1,"97":8,"100":1,"101":13,"104":1,"109":2,"120":2,"130":3,"137":4,"138":1,"142":7,"143":3,"155":1,"157":1,"170":3,"182":1,"187":2,"194":1,"201":1,"206":2,"219":5,"247":1,"251":2,"254":1,"255":2,"267":1,"298":2,"299":1,"306":1,"307":1,"310":1,"316":1,"319":1,"320":2,"321":2,"328":4,"329":1,"355":3,"363":1}}],["errors",{"2":{"8":1,"46":1,"47":1,"57":1,"66":13,"67":11,"68":2,"69":2,"72":2,"84":1,"85":3,"86":3,"117":1,"119":7,"120":7,"124":2,"126":1,"130":2,"189":1,"209":1,"219":1,"235":1,"237":1,"245":1,"257":2,"258":1,"287":1,"292":1,"328":1,"329":1,"358":1,"363":4}}],["error",{"0":{"46":1,"65":1,"66":1,"67":1,"85":1,"119":1,"150":1,"189":1,"218":1,"219":1,"235":1,"287":1,"327":1,"328":1,"363":1},"1":{"66":1,"67":1,"68":1,"69":1,"219":1,"220":1,"328":1,"329":1},"2":{"8":1,"9":1,"16":3,"26":3,"36":1,"39":2,"41":1,"43":1,"44":1,"46":5,"47":1,"54":1,"57":2,"60":1,"62":3,"63":1,"64":4,"65":1,"67":3,"68":8,"72":5,"77":1,"84":3,"85":2,"86":2,"88":2,"89":4,"90":1,"93":1,"94":4,"96":1,"97":3,"98":1,"100":1,"101":3,"102":6,"104":1,"105":2,"106":2,"109":6,"112":1,"118":1,"119":2,"120":7,"124":1,"125":1,"130":8,"131":1,"133":1,"134":5,"137":1,"142":7,"143":5,"146":1,"150":1,"153":2,"155":5,"157":1,"162":1,"169":1,"170":5,"182":1,"183":4,"185":3,"187":1,"189":2,"194":3,"198":1,"201":1,"206":6,"207":4,"212":1,"216":2,"219":3,"222":1,"223":1,"228":2,"235":2,"237":1,"238":3,"246":1,"247":1,"251":1,"253":2,"254":1,"255":1,"257":2,"258":1,"263":1,"266":2,"267":1,"270":2,"278":1,"286":2,"287":4,"292":5,"298":1,"299":1,"301":1,"303":1,"304":1,"306":1,"307":1,"309":1,"310":1,"316":1,"317":1,"319":1,"320":1,"321":2,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"331":1,"342":1,"343":1,"345":1,"346":3,"348":2,"349":4,"350":4,"351":2,"352":3,"354":3,"355":4,"357":1,"358":1,"359":1,"360":2,"361":2,"362":1,"363":6,"366":1}}],["earlier",{"2":{"346":1}}],["early",{"2":{"237":1}}],["easy",{"2":{"15":1,"75":1,"290":1}}],["each",{"2":{"2":1,"9":1,"55":1,"90":1,"96":1,"115":1,"138":1,"140":1,"153":1,"160":1,"178":1,"361":1}}],["efficiency",{"2":{"298":1}}],["efficient",{"0":{"222":1},"2":{"13":1,"241":1}}],["effectively",{"2":{"1":1,"364":1}}],["effective",{"2":{"0":1,"7":1}}],["exit",{"2":{"206":1,"207":2,"220":3}}],["exited",{"2":{"119":2}}],["exist",{"2":{"219":1}}],["exists",{"2":{"89":2,"98":2,"101":4,"154":2,"219":1,"222":2,"250":2,"251":2,"254":2,"260":4,"264":4,"301":6,"309":2,"310":4,"331":2}}],["existing",{"2":{"67":1,"72":1,"126":1,"139":1,"140":1,"166":1,"180":1,"360":2}}],["execution",{"0":{"212":1},"2":{"258":1}}],["execute",{"2":{"88":1,"277":2,"351":1,"352":1}}],["exec",{"2":{"118":2,"212":3}}],["exclusivemaximum",{"2":{"338":1}}],["excels",{"2":{"140":1,"204":1}}],["exceeded",{"2":{"46":1,"143":1,"254":1}}],["exchange",{"2":{"61":1}}],["exchanges",{"2":{"9":1,"63":1}}],["ext",{"2":{"206":3}}],["extend",{"2":{"333":1}}],["extension",{"2":{"206":1,"361":1}}],["external",{"2":{"1":1,"12":2,"153":1,"321":2}}],["extractlocation",{"2":{"321":1}}],["extracttoken",{"2":{"255":1}}],["extraction",{"0":{"348":1,"354":1},"2":{"237":1,"347":1,"354":1}}],["extractpathfromuri",{"2":{"206":2}}],["extractuserid",{"2":{"319":2}}],["extractuseridfromuri",{"2":{"142":2}}],["extractuserfromtoken",{"2":{"153":1}}],["extractauthtoken",{"2":{"143":1}}],["extract",{"2":{"39":1,"41":1,"44":1,"142":1,"143":1,"153":1,"155":1,"182":1,"183":1,"185":1,"206":2,"228":1,"237":1,"238":1,"255":1,"298":1,"306":1,"319":2,"349":1,"351":1}}],["expensive",{"2":{"331":1}}],["expert",{"2":{"304":1}}],["expertise",{"2":{"304":9}}],["experience",{"2":{"304":1}}],["experienced",{"2":{"304":1}}],["expected",{"2":{"3":1,"4":1,"97":2,"101":6,"310":3}}],["explanation",{"2":{"309":2}}],["explain",{"2":{"309":1}}],["explicit",{"2":{"212":1}}],["exploratory",{"2":{"106":1,"299":3}}],["explore",{"2":{"18":1,"32":1,"53":1,"73":1,"90":1,"178":1,"190":1,"202":1,"224":1,"243":1,"244":1,"293":1,"306":1,"311":1,"332":1,"368":1}}],["expiresat",{"2":{"154":5}}],["exposing",{"2":{"291":1,"368":1}}],["exposure",{"2":{"176":1}}],["exposes",{"2":{"7":1}}],["expose",{"2":{"2":1,"7":1,"18":1,"21":1,"32":1,"140":1,"259":1,"288":1,"290":1,"312":1,"316":1,"317":1,"320":1}}],["exponential",{"0":{"68":1},"2":{"68":1,"86":1}}],["examplestruct",{"2":{"344":1}}],["examples",{"2":{"18":2,"24":1,"48":1,"53":1,"94":1,"136":1,"142":1,"194":1,"206":1,"243":1,"309":2}}],["example",{"0":{"30":1,"31":1,"41":1,"62":1,"77":1,"162":1,"238":1,"292":1,"346":1},"1":{"31":1},"2":{"2":1,"3":1,"4":1,"7":2,"48":1,"62":1,"67":2,"68":1,"77":2,"85":1,"100":1,"109":1,"119":1,"123":1,"124":1,"126":1,"140":1,"142":5,"143":1,"155":1,"164":1,"165":1,"166":1,"167":1,"170":1,"177":1,"180":1,"183":1,"192":1,"195":1,"204":1,"207":1,"212":1,"238":3,"346":1,"351":1}}],["enhanced",{"2":{"346":1}}],["ensuring",{"2":{"334":1}}],["ensures",{"2":{"287":1,"327":1}}],["ensureconnected",{"2":{"72":3}}],["ensure",{"2":{"34":1,"62":1,"206":2,"248":1,"309":1}}],["engineer",{"2":{"304":2}}],["engines",{"2":{"167":1,"180":2}}],["entries",{"2":{"292":1}}],["entry",{"2":{"98":3,"222":3,"331":3}}],["encodetostring",{"2":{"325":1}}],["encoded",{"2":{"234":1,"325":2}}],["encode",{"2":{"146":2,"325":1}}],["encodings",{"2":{"346":1,"350":1}}],["encoding",{"2":{"3":1,"44":1,"93":1,"246":1,"292":1,"320":1,"346":4,"350":5}}],["environ",{"2":{"118":1}}],["environments",{"2":{"81":1,"192":1}}],["environment",{"0":{"169":1,"285":1},"2":{"57":1,"118":1,"137":1,"162":1,"212":2,"261":3,"285":2,"310":3}}],["env",{"2":{"57":2,"118":3,"210":1,"211":1,"212":3,"261":2}}],["ended",{"2":{"251":1,"257":2}}],["endpoint",{"2":{"197":1}}],["endpoints",{"0":{"144":1,"145":1,"146":1},"1":{"145":1,"146":1,"147":1,"148":1,"149":1,"150":1},"2":{"2":1,"3":1,"140":1,"145":1,"146":3,"166":1,"197":3,"312":1}}],["endturn",{"2":{"39":1,"41":1,"43":1,"112":1,"185":1,"187":1}}],["enabling",{"0":{"185":1,"227":1},"2":{"37":1,"226":1}}],["enabled",{"2":{"167":1,"185":1,"267":1,"337":2,"348":4,"354":3,"355":4}}],["enablesampling",{"2":{"185":2,"227":2,"237":1,"238":1,"270":1}}],["enables",{"2":{"12":1,"110":1,"179":1,"184":1,"191":1,"198":1,"268":1}}],["enable",{"2":{"1":1,"40":1,"185":1,"227":2,"237":1,"238":1,"270":1,"275":3,"277":2}}],["enum=base64",{"2":{"346":1}}],["enum=ascii",{"2":{"346":1}}],["enum=active",{"2":{"344":1}}],["enum=utf",{"2":{"346":1}}],["enum=pending",{"2":{"344":1}}],["enum=popularity",{"2":{"340":1}}],["enum=inactive",{"2":{"344":1}}],["enum=date",{"2":{"340":1}}],["enum=relevance",{"2":{"340":1}}],["enums",{"0":{"338":1}}],["enum",{"2":{"3":1,"20":1,"182":1,"267":1,"298":1,"335":1,"338":2,"344":1,"350":1}}],["flexible",{"0":{"301":1},"2":{"318":1}}],["fl",{"2":{"248":2}}],["float32",{"2":{"43":1,"187":1}}],["float64",{"2":{"39":1,"68":3,"101":2,"182":1,"246":4,"254":1,"341":1,"343":1,"344":1,"349":1}}],["fprintf",{"2":{"206":1}}],["f",{"2":{"41":1,"260":4,"261":3}}],["fallbacktext",{"2":{"345":2}}],["fallback",{"2":{"136":1,"345":1}}],["false",{"2":{"16":1,"68":1,"71":1,"72":1,"98":1,"123":1,"136":6,"143":1,"154":1,"206":3,"211":1,"214":1,"215":1,"222":1,"248":2,"260":1,"266":1,"292":1,"342":1,"346":4,"348":1,"355":1}}],["factors",{"2":{"136":1}}],["factory",{"0":{"137":1},"2":{"72":5,"125":4,"137":5,"212":1}}],["fatal",{"2":{"41":1,"77":3,"117":3,"118":2,"122":2,"123":1,"124":1,"128":3,"129":2,"133":2,"137":1,"142":1,"143":1,"146":1,"182":3,"183":2,"187":1,"194":1,"195":1,"211":4,"216":1,"222":1,"241":1,"281":1,"282":1,"283":1,"284":2}}],["fatalf",{"2":{"30":4,"31":3,"40":2,"41":3,"58":1,"185":4,"238":1,"287":1}}],["failure",{"2":{"363":1}}],["fail",{"2":{"170":1}}],["failing",{"0":{"36":1}}],["failed",{"0":{"35":1},"2":{"30":4,"31":3,"39":1,"40":2,"41":3,"43":1,"44":2,"46":1,"57":2,"58":1,"62":4,"63":1,"64":1,"66":1,"67":3,"68":2,"69":2,"71":1,"72":3,"77":4,"84":1,"86":2,"88":1,"89":2,"93":1,"96":3,"97":2,"100":3,"101":2,"104":3,"106":2,"108":3,"109":3,"119":3,"120":2,"130":1,"142":2,"143":2,"170":4,"185":4,"187":1,"189":1,"194":2,"198":1,"206":2,"219":2,"220":1,"235":1,"246":1,"247":1,"251":1,"253":2,"258":1,"299":1,"306":1,"307":1,"316":1,"321":1,"328":1,"346":2,"350":1,"351":3,"352":4,"354":1,"358":1,"363":1,"366":1}}],["fastestsame",{"2":{"161":1}}],["fast",{"2":{"13":2,"180":1}}],["fmt",{"2":{"16":3,"26":3,"30":5,"31":3,"39":2,"41":3,"43":2,"44":2,"46":4,"57":3,"62":3,"63":1,"64":2,"68":1,"72":3,"77":13,"84":3,"86":1,"88":1,"89":4,"93":5,"94":3,"96":7,"97":8,"100":6,"101":13,"102":3,"104":10,"106":3,"108":2,"109":2,"117":1,"120":2,"130":3,"136":3,"137":4,"142":13,"143":3,"153":1,"155":1,"157":1,"162":5,"170":3,"182":4,"183":4,"185":5,"187":2,"194":7,"201":1,"206":7,"207":3,"216":1,"219":7,"220":3,"228":2,"238":4,"246":2,"247":1,"251":3,"254":1,"255":2,"258":2,"263":1,"267":3,"270":2,"292":4,"298":5,"299":4,"301":1,"303":2,"304":3,"306":3,"307":4,"309":4,"310":3,"316":1,"319":1,"320":4,"321":3,"326":1,"328":4,"329":1,"345":1,"346":3,"349":2,"350":3,"351":3,"352":5,"354":1,"355":3,"358":1,"359":1,"360":1,"361":3,"362":1,"363":1,"366":2}}],["frameworks",{"2":{"180":1}}],["france",{"2":{"41":1,"185":1,"231":2}}],["fresh",{"2":{"331":1}}],["frequently",{"2":{"222":1}}],["frequency",{"2":{"167":1}}],["free",{"2":{"61":1}}],["freed",{"2":{"9":1}}],["from",{"2":{"28":1,"37":1,"38":1,"40":1,"41":1,"43":1,"89":1,"98":1,"110":1,"142":1,"153":2,"155":1,"182":1,"183":1,"184":1,"185":1,"187":1,"194":2,"197":1,"198":1,"201":2,"206":2,"214":1,"225":1,"226":1,"228":1,"237":1,"238":1,"255":1,"268":1,"270":1,"277":1,"278":1,"289":1,"294":1,"299":1,"306":1,"307":2,"316":1,"319":3,"320":1,"346":1,"347":1,"351":1}}],["friendlyhttp",{"2":{"161":1}}],["friendly",{"2":{"5":1,"191":1,"219":1}}],["feasibility",{"2":{"310":1}}],["featured",{"2":{"277":1}}],["feature",{"2":{"110":2,"268":2,"299":1,"304":1,"310":7,"337":1}}],["features",{"0":{"14":1,"244":1},"1":{"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1},"2":{"9":1,"32":2,"73":1,"113":1,"190":2,"243":1,"244":1,"266":1,"277":1,"288":1,"289":1,"290":1,"291":1,"293":1,"311":1,"317":1,"332":1,"368":1}}],["feedback",{"2":{"303":1}}],["few",{"2":{"14":1,"15":1}}],["fetchfreshdata",{"2":{"331":1}}],["fetchdatawithcontext",{"2":{"329":1}}],["fetchdataset",{"2":{"299":1}}],["fetchresourcedata",{"2":{"328":1}}],["fetchresource",{"2":{"306":1,"307":1}}],["fetch",{"2":{"2":1,"126":1,"299":2,"306":2,"307":2,"319":1,"328":1,"329":1,"331":1}}],["further",{"2":{"299":1}}],["full",{"2":{"6":1,"13":1,"14":1,"24":1,"125":1,"161":2,"240":1,"264":2,"277":1,"290":1}}],["function",{"2":{"130":1,"170":1,"197":1,"212":1,"215":1,"238":1,"273":1,"277":1,"333":1,"347":1}}],["functions",{"2":{"20":1,"36":1,"97":1,"142":2,"143":1,"194":1,"195":1,"206":1,"207":1,"237":1,"355":1}}],["functionality",{"2":{"3":1,"7":2,"75":1,"99":1,"140":1,"180":1,"183":1,"288":2,"291":1,"332":1,"333":1}}],["func",{"2":{"9":3,"16":2,"26":2,"30":1,"31":1,"39":2,"40":1,"41":2,"43":2,"44":3,"46":1,"57":2,"58":1,"59":1,"62":3,"63":1,"64":4,"67":4,"68":6,"69":3,"71":4,"72":7,"77":2,"84":2,"85":1,"86":1,"88":2,"89":4,"93":1,"94":3,"96":3,"97":3,"98":4,"100":2,"101":3,"102":3,"104":2,"105":4,"106":4,"108":6,"109":11,"112":1,"117":1,"118":2,"119":1,"120":6,"122":1,"123":1,"124":2,"125":6,"126":1,"128":2,"129":1,"130":8,"131":17,"133":2,"134":9,"136":2,"137":6,"138":2,"142":11,"143":13,"146":4,"153":2,"154":4,"155":5,"157":1,"162":2,"169":2,"170":4,"182":2,"183":6,"185":3,"187":3,"194":6,"195":3,"197":1,"198":1,"201":1,"206":7,"207":9,"211":1,"212":1,"216":2,"219":1,"220":4,"222":2,"223":1,"227":1,"228":1,"238":3,"246":2,"247":1,"248":2,"250":4,"251":5,"253":5,"254":4,"255":3,"257":7,"258":3,"260":3,"261":2,"263":1,"264":5,"266":3,"267":2,"270":1,"274":1,"281":1,"282":1,"283":1,"285":1,"286":6,"287":1,"292":4,"298":2,"299":1,"301":3,"303":1,"304":1,"306":1,"307":1,"309":2,"310":1,"316":2,"317":1,"319":2,"320":1,"321":1,"323":1,"324":1,"325":1,"326":1,"328":1,"329":1,"330":1,"331":1,"342":2,"343":1,"345":1,"346":3,"349":1,"350":2,"351":2,"352":1,"354":1,"355":2,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"366":1,"367":1}}],["fundamentals",{"0":{"1":1,"295":1,"313":1,"334":1},"1":{"2":1,"3":1,"4":1,"5":1,"296":1,"314":1,"335":1},"2":{"54":1}}],["fundamental",{"2":{"0":1,"113":1,"158":1,"271":1}}],["field",{"2":{"248":1,"340":1,"344":5}}],["fieldlevel",{"2":{"248":1}}],["fields",{"2":{"39":1}}],["find",{"2":{"94":2}}],["finishreason",{"2":{"43":1,"187":1}}],["fixed",{"2":{"313":1,"315":1}}],["fix",{"2":{"67":1}}],["filter",{"2":{"340":1,"364":1}}],["filtertools",{"2":{"260":1,"261":1}}],["filters",{"2":{"142":1,"195":2}}],["filtered",{"0":{"94":1},"2":{"94":8,"260":4,"261":4}}],["filtering",{"0":{"259":1,"260":1,"261":1,"267":1},"1":{"260":1,"261":1},"2":{"47":2}}],["fileoperationresponse",{"2":{"346":11}}],["fileoperationrequest",{"2":{"346":3}}],["fileoperationinput",{"2":{"248":1}}],["filecache",{"2":{"222":2}}],["file2",{"2":{"206":1}}],["file1",{"2":{"206":1}}],["filepath",{"2":{"206":4,"248":4}}],["filetool",{"2":{"3":1}}],["file",{"0":{"316":1,"346":1,"350":1},"2":{"2":2,"3":5,"7":1,"17":1,"18":1,"21":1,"28":1,"34":1,"164":1,"204":1,"206":15,"210":1,"212":1,"223":3,"316":3,"346":24,"350":10,"360":1,"361":1,"362":1}}],["filesystem",{"2":{"212":1,"316":1}}],["files",{"2":{"2":2,"3":1,"18":1,"21":1,"206":8,"211":1,"214":1,"215":1,"223":1,"312":1,"313":1,"316":1}}],["first",{"0":{"16":1,"27":1},"1":{"28":1,"29":1},"2":{"15":1,"25":1,"96":1,"98":1,"143":1,"182":2,"183":1,"267":1,"293":1,"335":1}}],["fit",{"2":{"5":1,"159":1}}],["founddocs",{"2":{"361":2}}],["foundation",{"2":{"273":1}}],["found",{"2":{"62":1,"66":2,"67":2,"85":1,"89":1,"94":2,"98":2,"101":1,"142":2,"155":1,"298":1,"319":1,"320":1,"328":2,"360":1,"361":2}}],["four",{"2":{"1":1}}],["following",{"2":{"49":1,"239":1,"242":1,"298":1,"306":1,"307":2}}],["focusareas",{"2":{"299":3}}],["focus",{"2":{"4":2,"8":1,"14":1,"106":2,"298":10,"299":2}}],["forbidden",{"2":{"120":1}}],["forconnectionreal",{"2":{"115":1}}],["formatforllm",{"2":{"105":1}}],["format",{"2":{"43":1,"44":1,"62":1,"77":1,"100":1,"112":1,"138":2,"142":1,"187":1,"292":6,"319":1,"328":2,"355":2}}],["formatted",{"2":{"39":1,"105":3}}],["for",{"0":{"134":1},"2":{"0":1,"4":2,"5":3,"7":1,"12":1,"13":1,"14":1,"18":3,"24":1,"28":1,"29":1,"30":2,"31":1,"35":2,"36":1,"39":1,"41":3,"43":1,"44":2,"46":2,"47":1,"50":1,"51":1,"53":1,"55":1,"56":4,"60":1,"62":1,"64":2,"65":1,"67":4,"68":2,"71":1,"72":1,"75":1,"77":2,"79":1,"80":1,"81":1,"82":1,"86":1,"88":2,"89":2,"93":1,"94":2,"96":2,"97":1,"100":2,"101":3,"102":3,"103":1,"104":3,"105":1,"107":1,"108":1,"109":5,"110":1,"112":1,"114":1,"115":2,"118":1,"119":1,"120":1,"123":1,"125":1,"128":2,"129":1,"130":3,"131":2,"139":2,"142":1,"143":1,"153":1,"154":2,"157":2,"158":1,"160":5,"164":2,"165":1,"166":1,"167":1,"170":2,"179":1,"180":1,"183":2,"185":2,"186":1,"187":1,"188":2,"190":1,"191":1,"192":1,"194":7,"195":1,"197":3,"199":1,"201":3,"202":1,"203":1,"204":1,"206":6,"207":1,"209":1,"211":1,"212":1,"217":1,"219":2,"220":1,"222":1,"223":2,"226":1,"229":2,"231":1,"236":2,"237":1,"242":1,"243":1,"254":1,"256":1,"258":1,"260":4,"261":1,"262":1,"263":1,"264":1,"266":1,"268":1,"270":1,"280":1,"281":2,"282":1,"283":2,"287":1,"292":4,"295":1,"296":1,"298":2,"299":1,"301":1,"307":3,"309":2,"310":1,"313":1,"318":1,"319":1,"320":1,"321":1,"330":2,"331":1,"339":1,"341":1,"342":1,"344":1,"345":2,"346":4,"347":1,"348":2,"350":1,"351":1,"352":1,"354":1,"361":1,"363":3,"366":4}}],["io",{"2":{"223":1,"321":1,"352":1}}],["ipc",{"2":{"212":1}}],["imagedata",{"2":{"325":2}}],["image",{"0":{"234":1},"2":{"234":3,"325":1}}],["imagecontent",{"2":{"188":1,"229":1,"234":1}}],["impact",{"2":{"310":1}}],["improvements",{"2":{"298":2}}],["important",{"2":{"307":1,"362":1}}],["import",{"2":{"16":1,"26":1,"30":1,"31":1,"39":1,"41":2,"43":1,"44":1,"57":1,"77":1,"84":1,"93":1,"112":1,"117":1,"142":1,"162":1,"182":1,"185":1,"187":1,"194":1,"206":1,"207":1,"211":1,"227":1,"238":1,"246":1,"248":1,"267":1,"274":1,"292":1,"298":1,"320":1}}],["implemented",{"2":{"267":1}}],["implementing",{"0":{"39":1,"294":1,"312":1,"333":1},"1":{"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1},"2":{"39":1,"111":1,"242":1,"311":1}}],["implement",{"0":{"111":1},"2":{"37":1,"39":1,"47":3,"85":1,"110":1,"112":1,"177":1,"225":1,"240":1,"256":1,"267":1,"268":1,"330":1,"331":1,"332":1}}],["implementations",{"2":{"74":1,"75":1,"76":1,"90":1,"114":1,"115":1,"167":1,"204":1}}],["implementation",{"0":{"41":1,"48":1,"112":1,"141":1,"181":1,"193":1,"205":1,"270":1},"1":{"142":1,"143":1,"182":1,"183":1,"194":1,"195":1,"206":1,"207":1},"2":{"13":1,"30":1,"31":1,"41":1,"53":1,"138":1,"142":4,"143":5,"170":1,"182":1,"183":1,"185":1,"190":1,"194":1,"195":1,"199":1,"206":1,"207":6,"211":1,"241":1,"243":1,"310":1,"342":1}}],["implements",{"2":{"0":1,"185":1}}],["i++",{"2":{"125":1,"194":1,"263":1,"366":1}}],["i+1",{"2":{"96":1,"100":1,"102":1,"104":1,"109":1,"194":1,"263":1,"307":2,"366":1}}],["i",{"0":{"346":1},"2":{"96":1,"100":1,"102":3,"104":1,"105":2,"109":2,"125":2,"189":1,"194":4,"235":1,"263":3,"301":2,"303":3,"307":2,"346":1,"366":2}}],["icon",{"2":{"28":1}}],["if=operation",{"2":{"248":1}}],["if",{"2":{"16":2,"26":2,"30":6,"31":4,"39":1,"40":2,"41":6,"43":5,"44":6,"46":4,"47":1,"57":2,"58":1,"62":6,"63":1,"64":2,"67":6,"68":5,"69":4,"71":1,"72":9,"77":11,"84":2,"85":1,"86":3,"88":5,"89":3,"93":2,"94":7,"96":6,"97":11,"98":3,"100":4,"101":16,"102":1,"104":5,"105":2,"106":2,"108":5,"109":6,"110":1,"117":3,"118":2,"119":4,"120":8,"122":2,"123":1,"124":1,"126":3,"128":3,"129":2,"130":8,"131":1,"133":2,"137":7,"142":9,"143":8,"146":1,"153":1,"154":2,"155":5,"157":1,"162":2,"169":1,"170":3,"182":6,"183":6,"185":10,"187":6,"189":1,"194":6,"195":1,"198":2,"199":1,"201":1,"206":12,"207":2,"211":4,"212":2,"216":2,"219":6,"220":3,"222":2,"223":3,"228":2,"235":1,"238":3,"241":1,"246":2,"247":1,"248":2,"251":4,"253":2,"254":2,"255":2,"257":2,"258":3,"260":4,"261":3,"264":2,"266":2,"267":1,"268":1,"270":2,"281":1,"282":1,"283":1,"284":2,"285":1,"287":2,"292":4,"298":3,"299":2,"301":6,"304":2,"306":1,"307":2,"309":3,"310":2,"316":1,"317":1,"319":3,"320":3,"321":2,"324":1,"325":1,"328":5,"329":3,"331":3,"342":1,"346":4,"348":2,"349":4,"350":5,"351":5,"352":8,"354":5,"355":5,"358":1,"363":3,"366":1,"367":1}}],["itself",{"2":{"212":1}}],["itemcount",{"2":{"345":2}}],["items",{"2":{"194":1,"306":2,"337":2,"345":1,"364":1}}],["item",{"2":{"182":1,"183":1,"366":1}}],["it",{"2":{"12":1,"15":1,"17":1,"38":2,"75":1,"109":1,"145":1,"290":1}}],["identified",{"2":{"313":1}}],["identifier",{"2":{"2":1,"314":1,"343":1}}],["identify",{"2":{"299":1}}],["ide",{"2":{"204":1}}],["ideal",{"2":{"192":1}}],["ides",{"2":{"164":1,"204":1}}],["idleconntimeout",{"2":{"123":1}}],["id",{"2":{"2":1,"45":1,"88":1,"124":1,"126":3,"142":21,"148":1,"149":1,"150":2,"154":5,"155":1,"157":1,"194":1,"195":1,"201":1,"212":1,"214":3,"215":4,"247":5,"251":4,"286":4,"319":4,"320":5,"330":1,"341":3,"343":5,"360":1,"367":1}}],["incorporates",{"2":{"307":1}}],["increment",{"2":{"257":8}}],["including",{"0":{"306":1},"2":{"13":1,"54":1,"157":1,"201":1,"299":2,"361":1}}],["includeexamples",{"2":{"309":2}}],["include",{"2":{"4":1,"45":1,"294":1,"309":4,"362":1}}],["inherit",{"2":{"211":1}}],["inherits",{"2":{"176":1}}],["infrastructure",{"2":{"139":1,"140":1,"166":1}}],["infof",{"2":{"138":1}}],["info",{"2":{"63":1,"210":1,"346":8}}],["information",{"2":{"2":1,"142":1,"153":1,"155":1,"279":1,"299":1,"307":1,"319":1,"330":1,"359":1,"363":1,"367":1}}],["inprocess",{"2":{"136":1,"169":1}}],["inprocessclient",{"2":{"134":1,"183":1}}],["inputschema",{"2":{"67":1,"101":1,"185":1,"228":1,"238":1,"270":1}}],["inputs",{"2":{"47":1,"176":1,"339":1}}],["input",{"0":{"340":1},"2":{"3":1,"4":1,"5":1,"62":2,"67":1,"77":2,"100":2,"116":1,"133":5,"134":5,"142":1,"160":1,"162":1,"203":1,"246":13,"247":7,"269":1,"281":1,"298":1,"339":1,"340":3,"341":1,"342":3,"346":1,"363":1}}],["invalidate",{"2":{"108":1}}],["invalid",{"2":{"66":2,"67":1,"85":1,"94":1,"101":1,"142":1,"143":1,"150":1,"155":3,"206":2,"219":1,"251":1,"255":1,"260":1,"328":1,"346":2,"350":2,"355":2,"363":1}}],["invoked",{"2":{"4":1,"99":1,"295":1}}],["invoke",{"2":{"3":1,"204":1,"333":1}}],["index",{"2":{"102":2,"194":4}}],["independent",{"2":{"9":1,"140":1,"153":1}}],["indicating",{"2":{"28":1}}],["initiated",{"2":{"192":1}}],["initial",{"2":{"201":1}}],["initialdelay",{"2":{"68":3}}],["initialization",{"0":{"63":1},"2":{"45":2,"54":1,"61":1,"62":2,"63":2,"64":3,"214":1,"237":1,"240":1}}],["initializeuserresources",{"2":{"258":1}}],["initializewithrequest",{"2":{"63":1}}],["initializeclientwithdetails",{"2":{"63":1}}],["initializerequestparams",{"2":{"63":1,"182":1,"183":1,"211":1}}],["initializerequest",{"2":{"30":1,"31":1,"63":1,"157":1,"182":1,"183":1,"185":1,"201":1,"211":1}}],["initialize",{"2":{"9":1,"30":3,"31":3,"45":1,"62":1,"63":1,"64":2,"67":1,"72":3,"77":2,"84":3,"88":1,"89":2,"117":2,"118":2,"120":1,"122":2,"123":1,"124":1,"126":1,"128":2,"129":2,"130":1,"133":2,"134":3,"145":2,"182":2,"183":2,"185":3,"211":2,"214":1,"215":2,"251":1,"258":1,"266":1}}],["initreq",{"2":{"63":2}}],["initrequest",{"2":{"30":5,"31":5,"77":1,"117":1,"185":4}}],["init",{"2":{"26":1,"222":1,"248":1}}],["insufficient",{"2":{"251":1}}],["inspect",{"2":{"217":1}}],["inspector",{"0":{"29":1,"217":1},"2":{"29":5,"36":1,"217":5}}],["insecureskipverify",{"2":{"123":1}}],["instock",{"2":{"341":2}}],["instructions",{"2":{"294":1,"295":1,"298":6,"299":8,"306":7}}],["instance",{"2":{"273":1}}],["instantiate",{"2":{"61":1}}],["installed",{"2":{"34":1}}],["install",{"2":{"28":1,"29":2,"217":2}}],["installation",{"0":{"15":1}}],["instead",{"2":{"51":1,"212":1,"223":1,"278":1}}],["insights",{"2":{"4":1,"299":1,"307":1}}],["int64",{"2":{"346":1}}],["into",{"2":{"75":1,"223":1}}],["int",{"2":{"39":1,"68":1,"86":1,"96":1,"102":1,"125":2,"142":3,"194":1,"247":1,"254":2,"261":1,"340":1,"341":1,"344":2,"348":2,"354":1,"355":1}}],["intuitive",{"2":{"13":1}}],["introduction",{"0":{"11":1},"1":{"12":1,"13":1,"14":1,"15":1}}],["integer",{"2":{"101":2,"337":2}}],["integrate",{"2":{"75":1}}],["integrations",{"2":{"7":1,"82":1,"164":1,"166":1,"167":1,"180":1,"203":1,"281":1}}],["integration",{"0":{"42":1,"43":1,"44":1,"87":1,"88":1,"183":1,"186":1,"187":1,"208":1,"210":1,"211":1,"217":1,"307":1},"1":{"43":1,"44":1,"88":1,"89":1,"187":1,"209":1,"210":1,"211":1,"212":2},"2":{"5":1,"7":1,"39":1,"48":1,"79":1,"139":1,"140":2,"159":1,"160":1,"166":1,"178":1,"179":2,"180":1,"186":1,"242":1,"311":1}}],["intermediate",{"2":{"309":1}}],["interview",{"2":{"303":3}}],["interval",{"2":{"71":5,"197":1}}],["inter",{"2":{"212":1}}],["interrupt",{"2":{"207":1,"220":1,"266":1,"286":1}}],["internally",{"2":{"183":1}}],["internal",{"2":{"183":1}}],["interfaces",{"2":{"32":1,"81":1,"165":2,"192":3}}],["interface",{"2":{"9":1,"14":1,"29":1,"30":1,"31":1,"39":1,"62":1,"67":1,"69":1,"77":1,"85":1,"89":1,"97":2,"100":2,"101":5,"102":4,"104":2,"105":5,"106":2,"112":1,"133":1,"134":2,"137":2,"138":1,"146":1,"153":1,"154":2,"155":1,"182":1,"183":2,"194":7,"198":1,"211":1,"217":1,"238":1,"250":2,"263":1,"264":2,"292":1,"301":5,"307":1,"309":1,"310":1,"317":1,"320":1,"324":1,"326":1,"351":2,"352":3,"358":2,"359":1,"366":1}}],["interactive",{"0":{"215":1},"2":{"215":1,"332":1}}],["interactively",{"2":{"29":1,"217":1}}],["interactions",{"2":{"18":1,"80":1,"103":1,"139":1,"140":1,"160":1,"166":1,"295":1,"334":1}}],["interaction",{"2":{"4":1,"288":1,"291":1,"294":1,"332":1,"368":1}}],["interact",{"2":{"1":1,"12":1,"74":1,"91":1,"334":1}}],["in",{"0":{"51":1,"82":1,"132":1,"133":1,"134":1,"157":1,"167":1,"179":1,"182":1,"201":1,"241":1},"1":{"133":1,"134":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"2":1,"13":1,"14":1,"15":2,"23":1,"24":1,"25":1,"34":1,"36":1,"45":1,"46":1,"51":2,"53":1,"56":1,"64":1,"68":1,"69":1,"82":1,"86":1,"90":1,"97":4,"112":1,"128":1,"132":2,"133":1,"134":1,"140":1,"143":2,"155":1,"156":1,"157":2,"158":1,"160":1,"169":2,"172":1,"173":1,"174":1,"177":1,"178":2,"179":1,"180":1,"182":1,"183":2,"184":1,"185":2,"194":1,"200":1,"201":2,"202":1,"204":1,"206":1,"210":1,"220":1,"223":1,"224":1,"227":1,"241":3,"242":1,"243":1,"247":1,"261":1,"266":1,"267":1,"278":1,"286":1,"295":1,"304":4,"306":1,"309":2,"312":1,"313":1,"329":1,"338":1,"341":1,"344":1,"346":1,"360":1,"361":1}}],["isselectquery",{"2":{"351":2}}],["issensitivetool",{"2":{"258":1}}],["issues",{"0":{"33":1},"1":{"34":1,"35":1,"36":1},"2":{"4":1,"217":1,"292":3,"296":1,"298":1,"299":2}}],["isolate",{"2":{"212":5}}],["isolated",{"2":{"212":1}}],["isolation",{"2":{"9":2,"176":1,"212":3}}],["isabs",{"2":{"206":1}}],["isautherror",{"2":{"124":1}}],["isvaliduri",{"2":{"328":1}}],["isvalidpath",{"2":{"206":3,"219":1}}],["isvalidemail",{"2":{"142":2}}],["isprocesserror",{"2":{"120":2}}],["isconnectionerror",{"2":{"72":2,"130":2}}],["ishealthy",{"2":{"71":1}}],["isretryable",{"2":{"68":2}}],["isnotexist",{"2":{"219":1}}],["isn",{"2":{"34":1}}],["iserror",{"2":{"26":1,"185":1,"189":1,"228":1,"235":1,"238":1,"270":1,"363":1}}],["is",{"0":{"12":1},"2":{"0":1,"7":1,"12":1,"13":1,"17":1,"26":1,"35":1,"39":1,"41":2,"49":1,"60":1,"65":1,"67":7,"68":1,"69":2,"72":2,"85":3,"86":2,"110":2,"115":1,"119":3,"120":3,"124":2,"126":3,"130":3,"140":1,"142":1,"150":1,"153":1,"160":1,"180":1,"185":1,"192":1,"201":1,"203":1,"212":1,"219":2,"226":1,"231":2,"239":1,"247":1,"248":1,"267":1,"268":2,"273":1,"287":1,"298":1,"323":1,"328":1,"329":1,"337":1,"342":1,"360":1}}]],"serializationVersion":2}
